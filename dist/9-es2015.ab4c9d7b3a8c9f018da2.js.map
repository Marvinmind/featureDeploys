{"version":3,"sources":["webpack:///src/app/modules/features/dashboard/store/actions/tasks.actions.ts","webpack:///src/app/modules/features/dashboard/store/reducers/tasks.reducer.ts","webpack:///src/app/modules/features/dashboard/store/actions/tracked-times.actions.ts","webpack:///src/app/modules/features/dashboard/store/reducers/tracked-times.reducer.ts","webpack:///src/app/modules/features/dashboard/store/selectors/tracked-times.selectors.ts","webpack:///src/app/modules/features/dashboard/store/reducers/company-projects.reducer.ts","webpack:///src/app/modules/features/dashboard/store/selectors/company-projects.selectors.ts","webpack:///src/app/modules/features/dashboard/store/selectors/dashboard.selectors.ts","webpack:///src/app/modules/features/dashboard/models/time-tracking.models.ts","webpack:///src/app/modules/features/dashboard/components/project-item/project-item.component.html","webpack:///src/app/modules/features/dashboard/components/project-item/project-item.component.ts","webpack:///src/app/modules/features/dashboard/components/project-filter-dialog/project-filter-dialog.component.html","webpack:///src/app/modules/features/dashboard/components/project-filter-dialog/project-filter-dialog.component.ts","webpack:///src/app/modules/features/dashboard/components/primary-button/directives/primary-button-text.directive.ts","webpack:///src/app/modules/features/dashboard/components/primary-button/components/primary-button/primary-button.component.html","webpack:///src/app/modules/features/dashboard/components/primary-button/components/primary-button/primary-button.component.ts","webpack:///src/app/modules/features/dashboard/components/filter/filter.component.html","webpack:///src/app/modules/features/dashboard/components/filter/filter.component.ts","webpack:///src/app/modules/features/dashboard/pipes/task-time.pipe.ts","webpack:///src/app/modules/features/dashboard/components/time-tracking/time-tracking.component.html","webpack:///src/app/modules/features/dashboard/dashboard.routing.module.ts","webpack:///src/app/modules/features/dashboard/components/time-tracking/time-tracking.component.ts","webpack:///src/app/modules/features/dashboard/services/task.service.ts","webpack:///src/app/modules/features/dashboard/store/effects/tasks.effects.ts","webpack:///src/app/modules/features/dashboard/store/effects/task-times.effects.ts","webpack:///src/app/modules/features/dashboard/store/effects/tracked-times.effects.ts","webpack:///node_modules/@angular/material-moment-adapter/__ivy_ngcc__/fesm2015/material-moment-adapter.js","webpack:///src/app/modules/features/dashboard/store/effects/company-projects.effects.ts","webpack:///src/app/modules/features/dashboard/components/primary-button/primary-button.module.ts","webpack:///src/app/modules/features/dashboard/dashboard.module.ts"],"names":["loadTasksAction","updateTasksAction","deleteTasksAction","clearTasksAction","loadTaskTimesAction","updateTaskTimesAction","deleteTaskTimesAction","clearTaskTimesAction","taskEntityAdapter","taskTimeEntityAdapter","taskEntityState","getInitialState","taskTimeEntityState","tasksReducer","state","tasks","upsertMany","removeMany","removeAll","taskTimesReducer","taskTimes","tasksSelectors","getSelectors","taskTimeSelectors","reducerTasks","action","reducerTaskTimes","loadTrackedTimesAction","updateTrackedTimesAction","deleteTrackedTimesAction","clearTrackedTimesAction","trackedTimeEntityAdapter","trackedTimeEntityState","trackedTimesReducer","trackedTimes","trackedTimesSelectors","reducerTrackedTimes","dashboard","selectTrackedTimesState","selectAllTrackedTimes","trackedTimesState","selectAll","filter","trackedTime","projectEntityAdapter","projects","companyProjectSelectors","reducerCompanyProjects","selectCompanyProjectsEntityState","companyProjects","selectCompanyProjectsEntities","selectEntities","selectCompanyProjects","selectAllCompanyProjects","map","project","deserialize","selectAllCompanyProjectIds","selectIds","selectCompanyProjectsByParentId","props","projectId","selectedProject","entities","parentProject","id","selectCompanyProjectById","selectTasksState","selectTaskTimesState","selectAllTaskIds","selectAllTasks","selectAllTaskTimes","selectTotalTaskTime","calculateTimeFromTaskTimes","taskTime","taskId","selectTrackedTimesWithTasks","activeProjects","workTypes","task","find","activeProject","times","sort","a","b","startTime","taskTimeDates","chain","groupBy","unix","format","mapValues","timeDates","invert","value","assigneeName","getAssigneeNameOfProject","userId","projectName","name","taskName","title","workType","assigneeId","createdTime","timeWorked","type","workTypeId","createdDate","parentProjectName","trackTime","dateCreated","selectAssignedWorkTypes","workTypeEntities","reduce","acc","selectAllMemberEntitiesFromProjects","companyId","totalMembers","company","members","forEach","member","Object","keys","memberId","assignee","lastname","endTime","pauseDuration","TimeTrackingType","ALL","INTERNAL","EXTERNAL","FilterMemberTypeKeys","values","MemberRole","EMPLOYEE","OWNER","SUPERVISOR","EXTERNALSUPERVISOR","DateFilterTypeKeys","translationKey","startMoment","now","clone","startOf","endMoment","endOf","trackEvent","TRACKED_TIME_FILTER_DATE_TODAY_CLICKED","subtract","TRACKED_TIME_FILTER_DATE_YESTERDAY_CLICKED","TRACKED_TIME_FILTER_DATE_LAST_WEEK_CLICKED","TRACKED_TIME_FILTER_DATE_LAST_MONTH_CLICKED","TRACKED_TIME_FILTER_DATE_CUSTOM_CLICKED","FilterKeys","PROJECT","MEMEBR","WORK_TYPE","DATE","ProjectItemComponent","store","folderClicked","checkedClicked","ProjectType","changes","this","project$","select","currentValue","pipe","switchMap","parent","of","projectType","FOLDER","emit","ProjectFilterDialogComponent","projectSortAndSearchHelper","data","dialogRef","trackingService","projectsFilter$","BehaviorSubject","searchKey","selectedParentProjectId","selectedProjects","selectedParentProjectId$","distinctUntilKeyChanged","selectedFilter","projects$","parentProjectId","combineLatest","selectedFilters","filteredProjects","defaultSearchCondition","length","proj","orderBy","element","toLowerCase","selectedParentProject$","mergeMap","selectedProjectsLength$","projectFilter","initalProjectFilter","next","searchInput","nativeElement","searchTerm","logSearchEvent","TRACKED_TIME_FILTER_PROJECT_SEARCH","folderId","selectedId","close","eventName","emitTrackingEvent","applyFilter","closeWithoutSaving","PrimaryButtonTextDirective","PrimaryButtonComponent","FilterComponent","providesMenu","filterClosed","filterOpened","TaskTimePipe","translateService","translatedKeyHours","instant","translatedKeyMinutes","duration","hours","Math","floor","asHours","minutes","asMinutes","drawer","$event","routes","path","component","TimeTrackingComponent","exportService","baseFileService","downloadService","alertService","dialog","TrackEventType","loading","memberType","displayedColumns","columnMappers","filtersKeysMapper","clearFilterMappers","trackEventCountMapper","TRACKED_TIME_FILTER_ASSIGNEE_SELECTED","TRACKED_TIME_FILTER_PROJECT_SELECTED","TRACKED_TIME_FILTER_WORK_TYPE_SELECTED","TRACKED_TIME_FILTER_DATE_CUSTOM_RANGE","destroy$","Subject","selectTrackedTimesWithTasks$","totalTasksTime$","totalMembersAssigned$","selectedFilters$","memberFilter","selectedMembers","workTypeFilter","selectedWorkTypes","dateFilter","selectedDateFilter","selectedDates","projectsFilter","membersFilter$","asObservable","debounceTime","filters","shareReplay","membersOfAllProjects$","filteredMembers","filterCondition","searchInMember","membersResultsNotFoundText$","selectedMembersText$","selectedMember","moreText","selectedMembersLength$","assignedWorkTypes$","selectedWorkTypesFilter$","selectedWorkTypesText$","assignedWorkTypes","selectedWorkTypesLength$","selectedDates$","selectedDatesText$","selectedDatesLength$","selectedProjectsText$","allProjects","startDateControl","endDateControl","filteredTaskTimes$","transformFiltersToTrackedTimeKeys","distinctUntilChanged","filteredResults","isTrackedTImeFilterApplicable","result","time","includes","totalTimeWorked$","takeUntil","current","isAnyFilterSelected$","lengthArray","sum","initSubscriptions","subscribe","setValue","startDate","endDate","open","width","height","autoFocus","res","afterClosed","take","toPromise","logSelectEvent","filterState","index","item","row","expandedElementId","selectedEntry","matTasks","setTimeout","paginator","complete","dispatch","sortingDataAccessor","sortHeaderId","initTaskTimesSubscription","selectedType","TRACKED_TIME_FILTER_ASSIGNEE_SEARCH","dateKey","controlName","dateSelectionValue","filterType","split","set","selectedIndividualFilters","get","isEmpty","payload","String","role","RegExp","test","mappedFilters","every","key","some","isBetween","exportFilters","filterValue","interval","createExport","resourceType","resourceId","innerCompany","pathMatch","authGuardPipe","DashboardRoutingModule","forChild","TaskService","aFireStore","projectIds","loadChunks","collectionName","fieldPath","updateAction","deleteAction","taskIds","documentPath","chunks","chunk","getChunkedDocuments","taskChunks","transformTasksToActions","collection","ref","where","stateChanges","catchError","error","console","log","updatedDocs","change","doc","deletedDocs","TasksEffects","actions$","taskService","loadTasksAndTimes$","tap","selectedIds","getAllTasks","TaskTimesEffects","getAllTaskTimes","TrackedTimesEffects","getAllTrackedTimes","MAT_MOMENT_DATE_ADAPTER_OPTIONS","providedIn","factory","useUtc","range","valueFunction","valuesArray","Array","i","MomentDateAdapter","dateLocale","_options","super","setLocale","locale","momentLocaleData","localeData","_localeData","firstDayOfWeek","longMonths","months","shortMonths","monthsShort","dates","createDate","longDaysOfWeek","weekdays","shortDaysOfWeek","weekdaysShort","narrowDaysOfWeek","weekdaysMin","date","year","month","day","style","daysInMonth","Error","_createMoment","isValid","parseFormat","displayFormat","years","add","days","Date","isDateInstance","ISO_8601","obj","isMoment","invalid","strict","utc","ɵfac","t","ɵprov","token","CompanyProjectsEffects","projectService","loadCompanyProjects","s","memberRole","getProjectStatusChangesByCompanyId","getProjectsListeners","documents","getDispatchEventsOfProjectsByCompanyId","documentChanges","addedOrChangedDocs","document","projectDoc","from","PrimaryButtonModule","DASHBOARD_FORMATS","parse","dateInput","display","monthYearLabel","dateA11yLabel","monthYearA11yLabel","DashboardModule","translate","browserLang","getBrowserLang","moment","provide","useClass","deps","useValue","forFeature"],"mappings":"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","file":"x","sourcesContent":["import { createAction, props } from '@ngrx/store';\nimport { Task, TaskTime } from 'domain-entities';\n\nexport const loadTasksAction = createAction('[Task] Loading all tasks and its times');\n\nexport const updateTasksAction = createAction('[Task] Update tasks', props<{ tasks: Task[] }>());\n\nexport const deleteTasksAction = createAction('[Task] Delete tasks', props<{ tasks: string[] }>());\n\nexport const clearTasksAction = createAction('[Task] Clear all tasks');\n\nexport const loadTaskTimesAction = createAction('[Task Time] Loading all task times');\n\nexport const updateTaskTimesAction = createAction('[Task Time] Update task times', props<{ taskTimes: TaskTime[] }>());\n\nexport const deleteTaskTimesAction = createAction('[Task Time] Delete task times', props<{ taskTimes: string[] }>());\n\nexport const clearTaskTimesAction = createAction('[Task Time] Clear all tasks times');\n","import { createEntityAdapter, EntityState } from '@ngrx/entity';\nimport { Action, createReducer, on } from '@ngrx/store';\nimport * as fromTasks from '../actions/tasks.actions';\nimport { Task, TaskTime } from 'domain-entities';\n\nconst taskEntityAdapter = createEntityAdapter<Task>();\nconst taskTimeEntityAdapter = createEntityAdapter<TaskTime>();\n\nexport const taskEntityState = taskEntityAdapter.getInitialState();\nexport const taskTimeEntityState = taskTimeEntityAdapter.getInitialState();\n\nconst tasksReducer = createReducer(taskEntityState,\n\ton(fromTasks.updateTasksAction, (state, { tasks }) => {\n\t\treturn taskEntityAdapter.upsertMany(tasks, state);\n\t}),\n\ton(fromTasks.deleteTasksAction, (state, { tasks }) => {\n\t\treturn taskEntityAdapter.removeMany(tasks, state);\n\t}),\n\ton(fromTasks.clearTasksAction, (state) => {\n\t\treturn taskEntityAdapter.removeAll(state);\n\t}),\n);\n\nconst taskTimesReducer = createReducer(taskTimeEntityState,\n\ton(fromTasks.updateTaskTimesAction, (state, { taskTimes }) => {\n\t\treturn taskTimeEntityAdapter.upsertMany(taskTimes, state);\n\t}),\n\ton(fromTasks.deleteTaskTimesAction, (state, { taskTimes }) => {\n\t\treturn taskTimeEntityAdapter.removeMany(taskTimes, state);\n\t}),\n\ton(fromTasks.clearTaskTimesAction, (state) => {\n\t\treturn taskTimeEntityAdapter.removeAll(state);\n\t}),\n);\n\nexport const tasksSelectors = taskEntityAdapter.getSelectors();\nexport const taskTimeSelectors = taskTimeEntityAdapter.getSelectors();\n\n\n// tslint:disable-next-line:typedef\nexport function reducerTasks(state: EntityState<Task> | undefined, action: Action) {\n\treturn tasksReducer(state, action);\n}\n\n// tslint:disable-next-line:typedef\nexport function reducerTaskTimes(state: EntityState<TaskTime> | undefined, action: Action) {\n\treturn taskTimesReducer(state, action);\n}\n\n\n\n","import { createAction, props } from '@ngrx/store';\nimport { TrackedTime } from 'domain-entities';\n\nexport const loadTrackedTimesAction = createAction('[Tracked Times] Loading all Tracked Times');\n\nexport const updateTrackedTimesAction = createAction('[Tracked Times] Update Tracked Times', props<{ trackedTimes: TrackedTime[] }>());\n\nexport const deleteTrackedTimesAction = createAction('[Tracked Times] Delete Tracked Times', props<{ trackedTimes: string[] }>());\n\nexport const clearTrackedTimesAction = createAction('[Tracked Times] Clear all Tracked Times');\n","import { createEntityAdapter, EntityState } from '@ngrx/entity';\nimport { Action, createReducer, on } from '@ngrx/store';\nimport * as fromTrackedTimes from '../actions/tracked-times.actions';\nimport { TrackedTime } from 'domain-entities';\n\nconst trackedTimeEntityAdapter = createEntityAdapter<TrackedTime>();\n\nexport const trackedTimeEntityState = trackedTimeEntityAdapter.getInitialState();\n\nconst trackedTimesReducer = createReducer(trackedTimeEntityState,\n\ton(fromTrackedTimes.updateTrackedTimesAction, (state, { trackedTimes }) => {\n\t\treturn trackedTimeEntityAdapter.upsertMany(trackedTimes, state);\n\t}),\n\ton(fromTrackedTimes.deleteTrackedTimesAction, (state, { trackedTimes }) => {\n\t\treturn trackedTimeEntityAdapter.removeMany(trackedTimes, state);\n\t}),\n\ton(fromTrackedTimes.clearTrackedTimesAction, (state) => {\n\t\treturn trackedTimeEntityAdapter.removeAll(state);\n\t}),\n);\n\nexport const trackedTimesSelectors = trackedTimeEntityAdapter.getSelectors();\n\n// tslint:disable-next-line:typedef\nexport function reducerTrackedTimes(state: EntityState<TrackedTime> | undefined, action: Action) {\n\treturn trackedTimesReducer(state, action);\n}\n\n\n","import { createFeatureSelector, createSelector } from '@ngrx/store';\nimport { DashboardState } from '../../../../../store/state/DashboardState';\nimport { trackedTimesSelectors } from '../reducers/tracked-times.reducer';\n\nconst dashboard = createFeatureSelector<DashboardState>('dashboard');\n\nexport const selectTrackedTimesState = createSelector(dashboard, state => state.trackedTimes);\n\nexport const selectAllTrackedTimes = createSelector(\n\tselectTrackedTimesState,\n\t(trackedTimesState) => {\n\t\tconst trackedTimes = trackedTimesSelectors.selectAll(trackedTimesState);\n\n\t\treturn trackedTimes.filter(trackedTime => trackedTime.state !== 'deleted');\n\t},\n);\n","import { createEntityAdapter, EntityState } from '@ngrx/entity';\nimport { Action, createReducer, on } from '@ngrx/store';\nimport * as fromCompanyProjects from '../actions/company-projects.actions';\nimport { Project } from 'domain-entities';\n\nconst projectEntityAdapter = createEntityAdapter<Project>();\n\nexport const trackedTimeEntityState = projectEntityAdapter.getInitialState();\n\nconst trackedTimesReducer = createReducer(trackedTimeEntityState,\n\ton(fromCompanyProjects.updateCompanyProjectsAction, (state, { projects }) => {\n\t\treturn projectEntityAdapter.upsertMany(projects, state);\n\t}),\n\ton(fromCompanyProjects.deleteCompanyProjectsAction, (state, { projects }) => {\n\t\treturn projectEntityAdapter.removeMany(projects, state);\n\t}),\n\ton(fromCompanyProjects.clearCompanyProjectsAction, (state) => {\n\t\treturn projectEntityAdapter.removeAll(state);\n\t}),\n);\n\nexport const companyProjectSelectors = projectEntityAdapter.getSelectors();\n\n// tslint:disable-next-line:typedef\nexport function reducerCompanyProjects(state: EntityState<Project> | undefined, action: Action) {\n\treturn trackedTimesReducer(state, action);\n}\n\n\n","import { createFeatureSelector, createSelector } from '@ngrx/store';\nimport { DashboardState } from '../../../../../store/state/DashboardState';\nimport { companyProjectSelectors } from '../reducers/company-projects.reducer';\nimport { Project } from '../../../../../shared/models/project.model';\n\nconst dashboard = createFeatureSelector<DashboardState>('dashboard');\n\nexport const selectCompanyProjectsEntityState = createSelector(dashboard, state => state.companyProjects);\n\nexport const selectCompanyProjectsEntities = createSelector(\n\tselectCompanyProjectsEntityState,\n\tcompanyProjectSelectors.selectEntities,\n);\n\nexport const selectCompanyProjects = createSelector(\n\tselectCompanyProjectsEntityState,\n\tcompanyProjectSelectors.selectAll,\n);\n\nexport const selectAllCompanyProjects = createSelector(\n\tselectCompanyProjects,\n\t(projects) => {\n\t\treturn projects ? projects.map(project => new Project().deserialize(project)) : [];\n\t},\n);\n\nexport const selectAllCompanyProjectIds = createSelector(\n\tselectCompanyProjectsEntityState,\n\tcompanyProjectSelectors.selectIds,\n);\n\nexport const selectCompanyProjectsByParentId = createSelector(\n\tselectCompanyProjectsEntityState,\n\tselectAllCompanyProjects,\n\t(state, projects, props) => {\n\t\tif (!props.projectId) {\n\t\t\treturn projects;\n\t\t}\n\n\t\tconst selectedProject = state.entities[props.projectId];\n\t\treturn projects.filter(project => project.parentProject === selectedProject.id);\n\t},\n);\n\nexport const selectCompanyProjectById = createSelector(\n\tselectCompanyProjectsEntities,\n\t(entities, props) => {\n\t\treturn entities[props.projectId];\n\t},\n);\n","import { createFeatureSelector, createSelector } from '@ngrx/store';\nimport { DashboardState } from '../../../../../store/state/DashboardState';\nimport { tasksSelectors, taskTimeSelectors } from '../reducers/tasks.reducer';\nimport { Task, TaskTime, TrackedTime, WorkType } from 'domain-entities';\nimport { Project } from '../../../../../shared/models/project.model';\nimport { selectAllTrackedTimes } from './tracked-times.selectors';\nimport { selectAllWorkTypeEntities, selectCompanyId } from '../../../../../store/selectors/app.selectors';\nimport { chain } from 'lodash';\nimport moment from 'moment';\nimport { selectAllCompanyProjects, selectCompanyProjectsEntities } from './company-projects.selectors';\n\nexport interface TaskTimeUI extends TaskTime {\n\tassigneeName: string;\n}\n\nexport interface TrackedTimeUI {\n\tid: string;\n\tprojectId: string;\n\tassigneeId: string;\n\tworkTypeId: string;\n\tcreatedDate: string;\n\tprojectName: string;\n\tparentProjectName: string;\n\ttaskName: string;\n\tworkType: string;\n\tassigneeName: string;\n\tcreatedTime: number;\n\ttimeWorked: number;\n\ttaskId: string;\n\ttimes: Array<TaskTimeUI | TrackedTime>;\n\ttaskTimeDates: { [id: string]: string };\n\ttype: 'task' | 'trackedTime';\n}\n\nconst dashboard = createFeatureSelector<DashboardState>('dashboard');\n\nexport const selectTasksState = createSelector(dashboard, state => state.tasks);\nexport const selectTaskTimesState = createSelector(dashboard, state => state.taskTimes);\n\n\nexport const selectAllTaskIds = createSelector(\n\tselectTasksState,\n\tstate => tasksSelectors.selectIds(state) as string[],\n);\n\nexport const selectAllTasks = createSelector(\n\tselectTasksState,\n\ttasksSelectors.selectAll,\n);\n\nexport const selectAllTaskTimes = createSelector(\n\tselectTaskTimesState,\n\ttaskTimeSelectors.selectAll,\n);\n\nexport const selectTaskTimesByTaskId = createSelector(\n\tselectTaskTimesState,\n\t(state, props) => {\n\t\tconst taskTimes = taskTimeSelectors.selectAll(state).filter(taskTime => props.taskId === taskTime.taskId);\n\t\treturn calculateTimeFromTaskTimes(taskTimes);\n\t},\n);\n\nexport const selectTotalTaskTime = createSelector(\n\tselectAllTaskTimes,\n\tselectAllTrackedTimes,\n\t(taskTimes, trackedTimes) => {\n\t\tconst totalTaskTimes = calculateTimeFromTaskTimes(taskTimes) as number;\n\t\tconst totalTrackedTimes = calculateTimeFromTaskTimes(trackedTimes) as number;\n\t\treturn totalTaskTimes + totalTrackedTimes;\n\t},\n);\n\nexport const selectTrackedTimesWithTasks = createSelector(\n\tselectAllTasks,\n\tselectCompanyProjectsEntities,\n\tselectAllTaskTimes,\n\tselectAllTrackedTimes,\n\tselectAllWorkTypeEntities,\n\t(tasks, activeProjects, taskTimes, trackedTimes, workTypes) => {\n\t\tconst transformedTasks = tasks\n\t\t\t.filter(task => taskTimes.find(taskTime => taskTime.taskId === task.id))\n\t\t\t.map(task => {\n\t\t\t\tconst activeProject = activeProjects[task.projectId] ?\n\t\t\t\t\tnew Project().deserialize(activeProjects[task.projectId])\n\t\t\t\t\t: null;\n\t\t\t\tconst parentProject = activeProjects[activeProject.parentProject] ?\n\t\t\t\t\tnew Project().deserialize(activeProjects[activeProject.parentProject])\n\t\t\t\t\t: null;\n\n\t\t\t\treturn transformToTrackedTimeUI(task, activeProject, taskTimes, parentProject);\n\t\t\t});\n\n\t\tconst transformedTrackedTimes = trackedTimes.map(trackTime => {\n\t\t\tconst activeProject = activeProjects[trackTime.projectId] ?\n\t\t\t\tnew Project().deserialize(activeProjects[trackTime.projectId])\n\t\t\t\t: null;\n\t\t\tconst parentProject = activeProjects[activeProject.parentProject] ?\n\t\t\t\tnew Project().deserialize(activeProjects[activeProject.parentProject])\n\t\t\t\t: null;\n\n\t\t\tconst selectedWorkType = workTypes[trackTime.workTypeId];\n\t\t\treturn transformTrackedTimeToTrackedTimeUI(trackTime, activeProject, selectedWorkType, parentProject);\n\t\t});\n\n\t\treturn [...transformedTasks, ...transformedTrackedTimes];\n\t},\n);\n\nexport const selectAssignedWorkTypes = createSelector(\n\tselectAllTrackedTimes,\n\tselectAllWorkTypeEntities,\n\t(trackedTimes, workTypeEntities) => {\n\t\treturn trackedTimes.reduce((acc, trackedTime) => {\n\t\t\tif (trackedTime.workTypeId && workTypeEntities[trackedTime.workTypeId]) {\n\t\t\t\tacc[trackedTime.workTypeId] = workTypeEntities[trackedTime.workTypeId];\n\t\t\t}\n\t\t\treturn acc;\n\t\t}, {});\n\t},\n);\n\nexport const selectAllMemberEntitiesFromProjects = createSelector(\n\tselectAllCompanyProjects,\n\tselectCompanyId,\n\tselectTrackedTimesWithTasks,\n\t(projects, companyId, taskTimes) => {\n\t\tconst totalMembers = projects.reduce((acc, project) => {\n\t\t\tif (project.company !== companyId) {\n\t\t\t\treturn acc;\n\t\t\t}\n\n\t\t\tproject.members.forEach(member => {\n\t\t\t\tacc[member.id] = member;\n\t\t\t});\n\n\t\t\treturn acc;\n\t\t}, {});\n\n\t\tObject.keys(totalMembers).forEach(memberId => {\n\t\t\tif (taskTimes.find(taskTime => taskTime.assigneeId === memberId)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tdelete totalMembers[memberId];\n\t\t});\n\n\t\treturn totalMembers;\n\t},\n);\n\nfunction getAssigneeNameOfProject(project: Project, assigneeId: string): string {\n\tif (!assigneeId) {\n\t\treturn '-';\n\t}\n\n\tconst assignee = project.members.find(member => member.id === assigneeId);\n\treturn assignee ? `${assignee.name} ${assignee.lastname}` : '-';\n}\n\nfunction calculateTimeFromTaskTimes(taskTimes: Array<TaskTime | TrackedTime>): number {\n\treturn taskTimes.reduce((acc, taskTime: TaskTime) => {\n\t\tacc += ((taskTime.endTime - taskTime.startTime) - ((taskTime as TrackedTime).pauseDuration || 0));\n\t\treturn acc;\n\t}, 0);\n}\n\nfunction transformToTrackedTimeUI(\n\ttask: Task,\n\tactiveProject: Project,\n\ttaskTimes: TaskTime[],\n\tparentProject: Project,\n): TrackedTimeUI {\n\tlet times = taskTimes.filter(taskTime => task.id === taskTime.taskId).sort((a, b) => a.startTime - b.startTime);\n\tconst taskTimeDates = chain(times)\n\t\t.groupBy(taskTime => moment.unix(taskTime.startTime).format('YYYY-MM-DD'))\n\t\t.mapValues(timeDates => timeDates[0].id)\n\t\t.invert()\n\t\t.value();\n\n\ttimes = times.map(taskTime => {\n\t\treturn {\n\t\t\t...taskTime,\n\t\t\tassigneeName: getAssigneeNameOfProject(activeProject, taskTime.userId),\n\t\t};\n\t});\n\n\treturn {\n\t\tid: task.id,\n\t\tprojectName: activeProject.name,\n\t\ttaskName: task.title,\n\t\tworkType: '-',\n\t\tassigneeName: getAssigneeNameOfProject(activeProject, task.assigneeId),\n\t\tcreatedTime: times[0].startTime * 1000,\n\t\ttimeWorked: calculateTimeFromTaskTimes(times),\n\t\ttaskId: task.id,\n\t\ttimes: [...times] as TaskTimeUI[],\n\t\ttype: 'task',\n\t\ttaskTimeDates: taskTimeDates,\n\t\tprojectId: activeProject.id,\n\t\tassigneeId: task.assigneeId,\n\t\tworkTypeId: null,\n\t\tcreatedDate: moment.unix(times[0].startTime).format('YYYY-MM-DD'),\n\t\tparentProjectName: parentProject ? parentProject.name : null,\n\t};\n}\n\nfunction transformTrackedTimeToTrackedTimeUI(\n\ttrackedTime: TrackedTime,\n\tactiveProject: Project,\n\tworkType: WorkType,\n\tparentProject: Project,\n): TrackedTimeUI {\n\tconst dateCreated = moment.unix(trackedTime.startTime).format('YYYY-MM-DD');\n\n\treturn {\n\t\tid: trackedTime.id,\n\t\tprojectName: activeProject.name,\n\t\ttaskName: '-',\n\t\tworkType: workType ? workType.name : '-',\n\t\tassigneeName: getAssigneeNameOfProject(activeProject, trackedTime.userId),\n\t\tcreatedTime: trackedTime.startTime * 1000,\n\t\ttimeWorked: calculateTimeFromTaskTimes([trackedTime]),\n\t\ttaskId: trackedTime.taskId,\n\t\ttimes: [trackedTime],\n\t\ttype: 'trackedTime',\n\t\ttaskTimeDates: { [trackedTime.id]: dateCreated },\n\t\tprojectId: activeProject.id,\n\t\tassigneeId: trackedTime.userId,\n\t\tworkTypeId: workType ? workType.id : null,\n\t\tcreatedDate: dateCreated,\n\t\tparentProjectName: parentProject ? parentProject.name : null,\n\t};\n}\n","import { MemberRole } from 'domain-entities';\nimport { TrackEventType } from '../../../../shared/models/track-event.type';\nimport { Moment } from 'moment';\n\nexport enum TimeTrackingType {\n\tALL = 'all',\n\tINTERNAL = 'internal',\n\tEXTERNAL = 'external'\n}\n\nexport interface WorkTypeFilterType {\n\tselectedWorkTypes: { [id: string]: string };\n}\n\nexport interface DateFilterType {\n\tselectedDateFilter: DateFilter;\n\tselectedDates: {\n\t\tstartDate: string,\n\t\tendDate: string\n\t};\n}\n\nexport interface MemberFilter {\n\ttype: TimeTrackingType;\n\tsearchKey: string;\n\tselectedMembers: { [id: string]: string };\n}\n\nexport interface DateFilter {\n\tname: string;\n\ttranslationKey: string;\n\tstartMoment?: (now: Moment) => Moment;\n\tendMoment?: (now: Moment) => Moment;\n\ttrackEvent: string;\n}\n\nexport interface ProjectsFilter {\n\tsearchKey: string;\n\tselectedParentProjectId: string;\n\tselectedProjects: { [id: string]: string };\n}\n\nexport interface TimeTrackingFilter {\n\tmemberFilter: MemberFilter;\n\tworkTypeFilter: WorkTypeFilterType;\n\tdateFilter: DateFilterType;\n\tprojectsFilter: ProjectsFilter;\n}\n\n\nexport const FilterMemberTypeKeys = {\n\t'all': [\n\t\t...Object.values(MemberRole),\n\t],\n\t'internal': [\n\t\tMemberRole.EMPLOYEE,\n\t\tMemberRole.OWNER,\n\t\tMemberRole.SUPERVISOR,\n\t],\n\t'external': [\n\t\tMemberRole.EXTERNAL,\n\t\tMemberRole.EXTERNALSUPERVISOR,\n\t],\n};\n\nexport const DateFilterTypeKeys: { [id: string]: DateFilter } = {\n\t'today': {\n\t\tname: 'today',\n\t\ttranslationKey: 'today',\n\t\tstartMoment: (now: Moment) => now.clone().startOf('day'),\n\t\tendMoment: (now: Moment) => now.clone().endOf('day'),\n\t\ttrackEvent: TrackEventType.TRACKED_TIME_FILTER_DATE_TODAY_CLICKED,\n\t},\n\t'yesterday': {\n\t\tname: 'yesterday',\n\t\ttranslationKey: 'yesterday',\n\t\tstartMoment: (now: Moment) => now.clone().subtract(1, 'days').startOf('day'),\n\t\tendMoment: (now: Moment) => now.clone().subtract(1, 'days').endOf('day'),\n\t\ttrackEvent: TrackEventType.TRACKED_TIME_FILTER_DATE_YESTERDAY_CLICKED,\n\t},\n\t'lastWeek': {\n\t\tname: 'lastWeek',\n\t\ttranslationKey: 'last-week',\n\t\tstartMoment: (now: Moment) => now.clone().subtract(1, 'weeks').startOf('isoWeek'),\n\t\tendMoment: (now: Moment) => now.clone().subtract(1, 'weeks').endOf('isoWeek'),\n\t\ttrackEvent: TrackEventType.TRACKED_TIME_FILTER_DATE_LAST_WEEK_CLICKED,\n\t},\n\t'lastMonth': {\n\t\tname: 'lastMonth',\n\t\ttranslationKey: 'last-month',\n\t\tstartMoment: (now: Moment) => now.clone().subtract(1, 'months').startOf('month'),\n\t\tendMoment: (now: Moment) => now.clone().subtract(1, 'months').endOf('month'),\n\t\ttrackEvent: TrackEventType.TRACKED_TIME_FILTER_DATE_LAST_MONTH_CLICKED,\n\t},\n\t'custom': {\n\t\tname: 'custom',\n\t\ttranslationKey: 'custom',\n\t\ttrackEvent: TrackEventType.TRACKED_TIME_FILTER_DATE_CUSTOM_CLICKED,\n\t},\n};\n\nexport enum FilterKeys {\n\tPROJECT = 'project',\n\tMEMEBR = 'member',\n\tWORK_TYPE = 'workType',\n\tDATE = 'date'\n}\n","<ng-container *ngIf=\"(project$ | async) as projectWithParent\">\n\t<div *ngIf=\"projectWithParent.parent && displayParent\"\n\t\t\t class=\"cn-filter__project-item--parent-folder d-flex align-items-center\">\n\t\t<mat-icon fontSet=\"material-icons-sharp\">folder</mat-icon>\n\t\t<div>{{projectWithParent.parent.name}}</div>\n\t</div>\n\t<div (click)=\"itemClicked(projectWithParent.project)\"\n\t\t\t [ngClass]=\"{pointer: projectWithParent.project.projectType === ProjectType.FOLDER}\" class=\"d-flex\">\n\t\t<div *ngIf=\"projectWithParent.project.projectType === ProjectType.FOLDER\"\n\t\t\t\t class=\"mr-2 cn-filter__project-item--icon\">\n\t\t\t<mat-icon fontSet=\"material-icons-sharp\">folder\n\t\t\t</mat-icon>\n\t\t</div>\n\t\t<div *ngIf=\"projectWithParent.project.projectType !== ProjectType.FOLDER\"\n\t\t\t\t class=\"mr-1 cn-filter__project-item--icon align-self-center\">\n\t\t\t<app-indicator [project]=\"projectWithParent.project\"></app-indicator>\n\t\t</div>\n\t\t<div class=\"overflow-hidden\">\n\t\t\t<div class=\"cn-filter__project-item--title text-truncate\">\n\t\t\t\t{{ projectWithParent.project.name }}\n\t\t\t</div>\n\t\t\t<div *ngIf=\"projectWithParent.project.orderNumber\" class=\"cn-filter__project-item--id text-truncate\">\n\t\t\t\t{{ projectWithParent.project.orderNumber }}\n\t\t\t</div>\n\t\t\t<div\n\t\t\t\t*ngIf=\"projectWithParent.project.street || projectWithParent.project.zipcode || projectWithParent.project.city\"\n\t\t\t\tclass=\"cn-filter__project-item--address text-truncate\">\n\t\t\t\t{{ projectWithParent.project.street }}\n\t\t\t\t, {{ projectWithParent.project.zipcode }} {{ projectWithParent.project.city }}\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\" ml-auto mr-3\">\n\t\t\t<mat-icon *ngIf=\"projectWithParent.project.projectType === ProjectType.FOLDER\"\n\t\t\t\t\t\t\t\tclass=\"pointer\">\n\t\t\t\tchevron_right\n\t\t\t</mat-icon>\n\t\t\t<div (click)=\"toggleProjectSelection()\" appEventStopPropagation class=\"pointer\">\n\t\t\t\t<mat-checkbox *ngIf=\"projectWithParent.project.projectType !== ProjectType.FOLDER\"\n\t\t\t\t\t\t\t\t\t\t\t[checked]=\"checked\" class=\"no-events\"\n\t\t\t\t></mat-checkbox>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</ng-container>\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnChanges, Output, SimpleChanges } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { Project } from '../../../../../shared/models/project.model';\nimport { AppState } from '../../../../../store/state/app.state';\nimport { Store } from '@ngrx/store';\nimport { map, switchMap } from 'rxjs/operators';\nimport { selectCompanyProjectById } from '../../store/selectors/company-projects.selectors';\nimport { ProjectType } from '../../../../../shared/models/project.type';\n\ninterface ProjectWithParent {\n\tproject: Project;\n\tparent?: Project;\n}\n\n@Component({\n\tselector: 'app-project-item',\n\ttemplateUrl: './project-item.component.html',\n\tstyleUrls: ['./project-item.component.scss'],\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProjectItemComponent implements OnChanges {\n\n\t@Input() projectId: string;\n\t@Input() checked: boolean;\n\t@Input() displayParent: boolean;\n\n\t@Output() folderClicked = new EventEmitter<void>();\n\t@Output() checkedClicked = new EventEmitter<void>();\n\n\tproject$: Observable<ProjectWithParent>;\n\n\tProjectType = ProjectType;\n\n\tconstructor(\n\t\tprivate readonly store: Store<AppState>,\n\t) {\n\t}\n\n\tngOnChanges(changes: SimpleChanges): void {\n\t\tif (!changes.projectId) {\n\t\t\treturn;\n\t\t}\n\t\tthis.project$ = this.store.select(selectCompanyProjectById, { projectId: changes.projectId.currentValue }).pipe(switchMap(project => {\n\t\t\tif (!project.parentProject) {\n\t\t\t\treturn of({ project: project });\n\t\t\t}\n\t\t\treturn this.store.select(selectCompanyProjectById, { projectId: project.parentProject }).pipe(map(parent => {\n\t\t\t\treturn { project, parent };\n\t\t\t}));\n\t\t}));\n\t}\n\n\titemClicked(project: Project): void {\n\t\tif (!(project.projectType === ProjectType.FOLDER)) {\n\t\t\treturn;\n\t\t}\n\t\tthis.folderClicked.emit();\n\t}\n\n\ttoggleProjectSelection(): void {\n\t\tthis.checkedClicked.emit();\n\t}\n\n}\n","<div class=\"d-flex justify-content-between align-items-center py-3\">\n\t<button (click)=\"applyFilter()\" mat-flat-button\n\t\t\t\t\tcolor=\"primary\">{{ 'dashboard.timeTracking.filters.apply' | translate }}</button>\n\t<mat-icon class=\"pointer\" (click)=\"closeWithoutSaving()\">close</mat-icon>\n</div>\n<div *ngIf=\"(projectsFilter$ | async) as projectsFilter\" appEventStopPropagation\n\t\t class=\"cn-filter\">\n\t<div *ngIf=\"!projectsFilter.selectedParentProjectId\" class=\"cn-search__container row no-gutters align-items-center\">\n\t\t<div class=\"col\">\n\t\t\t<input #projectsSearch (keyup)=\"onProjectSearchChange(projectsSearch.value)\" class=\"cn-search__input\" matInput\n\t\t\t\t\t\t [placeholder]=\"'dashboard.timeTracking.filters.search' | translate\"\n\t\t\t>\n\t\t</div>\n\t\t<div (click)=\"clearFilter()\"\n\t\t\t\t *ngIf=\"selectedProjectsLength$ | async\"\n\t\t\t\t class=\"col-auto cn-filter__clear font-weight-bold color-primary\">\n\t\t\t{{ 'dashboard.timeTracking.filters.clearSelections' | translate }}\n\t\t</div>\n\t</div>\n\t<div class=\"cn-filter__project-item--container\">\n\n\t\t<div *ngIf=\"(selectedParentProject$ | async) as selectedParentProject\" (click)=\"folderClicked()\"\n\t\t\t\t class=\"cn-filter__project-item folder text-truncate d-flex align-items-center pointer\">\n\t\t\t<mat-icon class=\"pointer\">keyboard_arrow_left</mat-icon>\n\t\t\t<mat-icon class=\"cn-filter__project-item--icon mr-2\" fontSet=\"material-icons-sharp\">folder</mat-icon>\n\t\t\t<div class=\"cn-filter__project-item--title text-truncate\">\n\t\t\t\t{{ selectedParentProject.name }}\n\t\t\t</div>\n\t\t</div>\n\t\t<cdk-virtual-scroll-viewport class=\"cn-filter__scroll-viewport\" itemSize=\"83\">\n\t\t\t<div *cdkVirtualFor=\"let companyProject of (projects$ | async)\"\n\t\t\t\t\t class=\"cn-filter__project-item d-flex w-100 align-items-center\">\n\t\t\t\t<div class=\"w-100\">\n\t\t\t\t\t<app-project-item\n\t\t\t\t\t\t(folderClicked)=\"folderClicked(companyProject.id)\"\n\t\t\t\t\t\t(checkedClicked)=\"toggleProjectSelection(companyProject.id)\"\n\t\t\t\t\t\t[displayParent]=\"!(selectedParentProject$ | async) && !!projectsFilter.searchKey\"\n\t\t\t\t\t\t[projectId]=\"companyProject.id\"\n\t\t\t\t\t\t[checked]=\"!!projectsFilter.selectedProjects[companyProject.id]\"></app-project-item>\n\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div *ngIf=\"(projects$ | async).length === 0\" class=\"cn-filter__empty-text\">\n\t\t\t\t{{ 'dashboard.timeTracking.filters.resultsNotFound' | translate }}\n\t\t\t</div>\n\t\t</cdk-virtual-scroll-viewport>\n\t</div>\n</div>\n","import { Component, ElementRef, Inject, Input, ViewChild } from '@angular/core';\nimport { AppState } from '../../../../../store/state/app.state';\nimport { Store } from '@ngrx/store';\nimport { selectCompanyProjectById, selectCompanyProjectsByParentId } from '../../store/selectors/company-projects.selectors';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { distinctUntilKeyChanged, map, mergeMap, switchMap } from 'rxjs/operators';\nimport { orderBy } from 'lodash';\nimport { ProjectSortAndSearchHelper } from '../../../../../work/project/project-sort-and-search-helper.service';\nimport { FilterKeys, ProjectsFilter } from '../../models/time-tracking.models';\nimport { MatDialogRef } from '@angular/material';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { TrackEventType } from '../../../../../shared/models/track-event.type';\nimport { TrackingDispatcherService } from '../../../../../shared/tracking/tracking-dispatcher.service';\n\n@Component({\n\tselector: 'app-project-filter-dialog',\n\ttemplateUrl: './project-filter-dialog.component.html',\n\tstyleUrls: ['./project-filter-dialog.component.scss', '../time-tracking/time-tracking.component.scss'],\n})\nexport class ProjectFilterDialogComponent {\n\n\t@Input() selectedProjectsInput: string[];\n\n\t@ViewChild('projectsSearch', { static: false }) searchInput: ElementRef;\n\n\tprojectsFilter$ = new BehaviorSubject<ProjectsFilter>({\n\t\tsearchKey: '',\n\t\tselectedParentProjectId: null,\n\t\tselectedProjects: {},\n\t});\n\n\tFilterKeys = FilterKeys;\n\n\tselectedParentProjectId$ = this.projectsFilter$\n\t\t.pipe(\n\t\t\tdistinctUntilKeyChanged('selectedParentProjectId'),\n\t\t\tmap(selectedFilter => selectedFilter.selectedParentProjectId),\n\t\t);\n\n\tprojects$ = this.selectedParentProjectId$.pipe(\n\t\tswitchMap(parentProjectId => combineLatest([\n\t\t\t\tthis.store.select(selectCompanyProjectsByParentId, { projectId: parentProjectId }),\n\t\t\t\tthis.projectsFilter$,\n\t\t\t]).pipe(\n\t\t\tmap(([projects, selectedFilters]) => {\n\t\t\t\tlet filteredProjects = projects;\n\t\t\t\tif (!selectedFilters.selectedParentProjectId) {\n\t\t\t\t\tfilteredProjects = projects\n\t\t\t\t\t\t.filter(project => this.projectSortAndSearchHelper.defaultSearchCondition(project, selectedFilters.searchKey));\n\t\t\t\t}\n\t\t\t\tif (!selectedFilters.searchKey && selectedFilters.searchKey.length > 0) {\n\t\t\t\t\tfilteredProjects = filteredProjects.filter(proj => !proj.parentProject);\n\t\t\t\t}\n\t\t\t\treturn orderBy(filteredProjects, [\n\t\t\t\t\telement => !selectedFilters.selectedProjects[element.id],\n\t\t\t\t\t'projectType',\n\t\t\t\t\telement => element.name.toLowerCase(),\n\t\t\t\t]);\n\t\t\t}),\n\t\t\t),\n\t\t),\n\t);\n\n\tselectedParentProject$ = this.projectsFilter$.pipe(\n\t\tmap(selectedFilters => {\n\t\t\treturn selectedFilters.selectedParentProjectId;\n\t\t}),\n\t\tmergeMap(projectId => this.store.select(selectCompanyProjectById, { projectId })),\n\t);\n\n\n\tselectedProjectsLength$ = this.projectsFilter$.pipe(\n\t\tmap(projectFilter => {\n\t\t\tconst keys = Object.keys(projectFilter.selectedProjects);\n\t\t\treturn keys.length;\n\t\t}),\n\t);\n\n\n\tconstructor(\n\t\tprivate readonly store: Store<AppState>,\n\t\tprivate readonly projectSortAndSearchHelper: ProjectSortAndSearchHelper,\n\t\t@Inject(MAT_DIALOG_DATA) public data: { selectedProjects: { [id: string]: string } },\n\t\tprivate readonly dialogRef: MatDialogRef<ProjectFilterDialogComponent>,\n\t\tprivate readonly trackingService: TrackingDispatcherService,\n\t) {\n\t\tconst initalProjectFilter: ProjectsFilter = {\n\t\t\t...this.projectsFilter$.value,\n\t\t\tselectedProjects: { ...this.data.selectedProjects },\n\t\t};\n\t\tthis.projectsFilter$.next(initalProjectFilter);\n\t}\n\n\tclearFilter(): void {\n\t\tthis.searchInput.nativeElement.value = '';\n\t\tthis.projectsFilter$.next({ ...this.projectsFilter$.value, selectedProjects: {}, searchKey: '' });\n\t}\n\n\tonProjectSearchChange(searchTerm: string): void {\n\t\tthis.projectsFilter$.next({ ...this.projectsFilter$.value, searchKey: searchTerm });\n\n\t\tif (!searchTerm) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.logSearchEvent(TrackEventType.TRACKED_TIME_FILTER_PROJECT_SEARCH, searchTerm);\n\t}\n\n\tfolderClicked(folderId: string = null): void {\n\t\tthis.projectsFilter$.next({\n\t\t\t...this.projectsFilter$.value,\n\t\t\tselectedParentProjectId: folderId,\n\t\t\tsearchKey: '',\n\t\t});\n\t}\n\n\ttoggleProjectSelection(selectedId: string): void {\n\t\tconst state = { ...this.projectsFilter$.value };\n\n\t\tif (state.selectedProjects[selectedId]) {\n\t\t\tdelete state.selectedProjects[selectedId];\n\t\t} else {\n\t\t\tstate.selectedProjects[selectedId] = selectedId;\n\t\t}\n\n\t\tthis.projectsFilter$.next(state);\n\t}\n\n\tapplyFilter(): void {\n\t\tconst selectedProjects = this.projectsFilter$.value.selectedProjects;\n\t\tthis.dialogRef.close({ selectedProjects });\n\t}\n\n\tcloseWithoutSaving(): void {\n\t\tthis.dialogRef.close();\n\t}\n\n\tprivate async logSearchEvent(eventName: TrackEventType, searchKey: string): Promise<void> {\n\t\tawait this.trackingService.emitTrackingEvent(eventName, { searchKey });\n\t}\n\n}\n","import { Directive } from '@angular/core';\n\n@Directive({\n\t// tslint:disable-next-line:directive-selector\n\tselector: '[ch-primary-button-text]',\n})\nexport class PrimaryButtonTextDirective {\n}\n","<button class=\"mat-flat-button mat-button-base mat-primary ch-primary-button\"\n\t\t\t\t[ngClass]=\"{'ch-primary-button--with-text': textContent}\">\n\t<div class=\"ch-primary-button__line\">\n\t\t<ng-template [ngIf]=\"iconName\">\n\t\t\t<mat-icon>{{iconName}}</mat-icon>\n\t\t</ng-template>\n\t\t<ng-template [ngIf]=textContent>\n\t\t\t<div class=\"ch-primary-button__text-container\">\n\t\t\t\t<ng-content select=\"span\"></ng-content>\n\t\t\t</div>\n\t\t</ng-template>\n\n\t</div>\n</button>\n","import { Component, ContentChild, Input } from '@angular/core';\nimport { PrimaryButtonTextDirective } from '../../directives/primary-button-text.directive';\n\n@Component({\n\t// tslint:disable-next-line:component-selector\n\tselector: 'ch-primary-button',\n\ttemplateUrl: './primary-button.component.html',\n\tstyleUrls: ['./primary-button.component.scss'],\n})\nexport class PrimaryButtonComponent {\n\t@Input() iconName: string;\n\t@ContentChild(PrimaryButtonTextDirective) textContent;\n}\n","<div class=\"cn-filter-dd\">\n\t<div *ngIf=\"!providesMenu\"\n\t\t\t (click)=\"onFilterOpened()\"\n\t\t\t [ngClass]=\"{'cn-filter-dd__menu-btn--active': selectedItemsLength }\"\n\t\t\t [appTrack]=\"trackingEvent\"\n\t\t\t class=\"cn-filter-dd__menu-btn d-flex align-items-center\">\n\t\t<ng-container *ngTemplateOutlet=\"menuHead\"></ng-container>\n\t</div>\n\t<div *ngIf=\"providesMenu\" [matMenuTriggerFor]=\"menu\"\n\t\t\t [ngClass]=\"{'cn-filter-dd__menu-btn&#45;&#45;active': selectedItemsLength }\"\n\t\t\t (menuClosed)=\"onFilterClosed()\"\n\t\t\t (menuOpened)=\"onFilterOpened()\"\n\t\t\t [appTrack]=\"trackingEvent\"\n\t\t\t class=\"cn-filter-dd__menu-btn d-flex align-items-center\">\n\t\t<ng-container *ngTemplateOutlet=\"menuHead\"></ng-container>\n\t</div>\n\t<mat-menu #menu=\"matMenu\">\n\t\t<div class=\"cn-filter-dd__menu-content\">\n\t\t\t<ng-content select=\".filter-content\"></ng-content>\n\t\t</div>\n\t</mat-menu>\n</div>\n\n<ng-template #menuHead>\n\t<ng-content select=\".filter-text\"></ng-content>\n\t<mat-icon class=\"ml-2\">expand_more</mat-icon>\n</ng-template>\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n\tselector: 'app-filter',\n\ttemplateUrl: './filter.component.html',\n\tstyleUrls: ['./filter.component.scss'],\n})\nexport class FilterComponent {\n\t@Input()\n\tselectedItemsLength: number;\n\n\t@Input()\n\ttrackingEvent: string;\n\n\t@Input()\n\tprovidesMenu = true;\n\n\t@Output()\n\tfilterClosed = new EventEmitter<void>();\n\n\t@Output()\n\tfilterOpened = new EventEmitter<void>();\n\n\tonFilterClosed(): void {\n\t\tthis.filterClosed.emit();\n\t}\n\n\tonFilterOpened(): void {\n\t\tthis.filterOpened.emit();\n\t}\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport moment from 'moment';\n\n@Pipe({\n\tname: 'taskTime',\n})\nexport class TaskTimePipe implements PipeTransform {\n\n\tconstructor(\n\t\tprivate readonly translateService: TranslateService,\n\t) {\n\t}\n\n\ttransform(taskTime: number = 0): string {\n\t\tconst translatedKeyHours = this.translateService.instant('dashboard.timeTracking.hours');\n\t\tconst translatedKeyMinutes = this.translateService.instant('dashboard.timeTracking.minutes');\n\t\tconst duration = moment.duration(taskTime * 1000);\n\t\tconst hours = Math.floor(duration.asHours());\n\t\tconst minutes = Math.floor(duration.asMinutes()) - (hours * 60);\n\n\t\tif (!hours) {\n\t\t\treturn `${minutes} ${translatedKeyMinutes}`;\n\t\t}\n\n\t\treturn `${hours} ${translatedKeyHours} ${minutes} ${translatedKeyMinutes}`;\n\t}\n}\n","<div class=\"row h-100 time-tracking-container\">\n\t<div class=\"col pt-3 overflow-auto h-100\">\n\t\t<mat-drawer-container class=\"h-100\" hasBackdrop=\"false\">\n\t\t\t<mat-drawer mode=\"Over\" position=\"end\">\n\t\t\t\t<ng-container [ngTemplateOutlet]=\"entryDetails\"></ng-container>\n\t\t\t</mat-drawer>\n\t\t\t<mat-drawer-content>\n\t\t\t\t<ng-container [ngTemplateOutlet]=\"timeTrackingContent\"></ng-container>\n\t\t\t</mat-drawer-content>\n\t\t</mat-drawer-container>\n\t</div>\n</div>\n\n<ng-template #entryDetails>\n\t<div *ngIf=\"selectedEntry\" class=\"entry-details\">\n\t\t<div class=\"entry-details__header d-flex align-items-center font-weight-bold\">\n\t\t\t<mat-icon (click)=\"drawer.toggle()\" class=\"pointer mr-2\">close</mat-icon>\n\t\t\t<span>{{'dashboard.timeTracking.entryDetails' | translate}}</span>\n\t\t</div>\n\t\t<div class=\"entry-details__item\">\n\t\t\t<div class=\"entry-details__item--header\">{{ 'dashboard.timeTracking.projectOrFolder' | translate }}</div>\n\t\t\t<span>\n\t\t\t\t<ng-container *ngTemplateOutlet=\"projectName;context:{project : selectedEntry}\"></ng-container>\n\t\t\t</span>\n\t\t</div>\n\t\t<div class=\"entry-details__item\">\n\t\t\t<div class=\"entry-details__item--header\">{{ 'dashboard.timeTracking.assignee' | translate }}</div>\n\t\t\t<span>{{selectedEntry.assigneeName}}</span>\n\t\t</div>\n\t\t<div class=\"entry-details__item\">\n\t\t\t<div class=\"entry-details__item--header\">{{ 'dashboard.timeTracking.taskName' | translate }}</div>\n\t\t\t<span>{{selectedEntry.taskName}}</span>\n\t\t</div>\n\t\t<div class=\"entry-details__item\">\n\t\t\t<div class=\"entry-details__item--header\">{{ 'dashboard.timeTracking.workType' | translate }}</div>\n\t\t\t<span>{{selectedEntry.workType}}</span>\n\t\t</div>\n\t\t<div *ngFor=\"let time of selectedEntry.times\" class=\"row entry-details__time-entry\">\n\t\t\t<div *ngIf=\"selectedEntry.taskTimeDates[time.id] as createdDate\" class=\"col-12 entry-details__time-entry--date\">\n\t\t\t\t{{createdDate | date : 'EEEE'}},  {{createdDate | date: 'shortDate': undefined : 'de-DE'}}\n\t\t\t</div>\n\t\t\t<div class=\"col-6\">\n\t\t\t\t{{time.startTime * 1000 | date:'H:mm'}} - {{time.endTime * 1000 | date:'H:mm'}}\n\t\t\t</div>\n\t\t\t<div class=\"col-6 text-right\">\n\t\t\t\t{{ (time.endTime - time.startTime) | taskTime}}\n\t\t\t</div>\n\t\t\t<div *ngIf=\"time.pauseDuration\" class=\"col-12 text-right\">\n\t\t\t\t- {{time.pauseDuration | taskTime}} ({{'dashboard.timeTracking.break' | translate}})\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"row entry-details__time-entry--total\">\n\t\t\t<div class=\"col-auto\">\n\t\t\t\t{{'dashboard.timeTracking.totalWork' | translate}}\n\t\t\t</div>\n\t\t\t<div class=\"col text-right\">\n\t\t\t\t<div>{{selectedEntry.timeWorked | taskTime}}</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</ng-template>\n\n<ng-template #timeTrackingContent>\n\t<div class=\"table-responsive mycraftnote-table__container pb-3\">\n\t\t<div class=\"mycraftnote-table__header\">\n\t\t\t<div [innerHTML]=\"'sidebar.time-tracking' | translate\" class=\"mt-4 mb-4 mycraftnote-table__title\"></div>\n\t\t\t<ch-primary-button *appFeatureFlag=\"'feature_times_export'\" (click)=\"exportTimes()\"\n\t\t\t\t\t\t\t\t\t\t\t\t iconName=\"vertical_align_bottom\">\n\t\t\t\t<span ch-primary-button-text>{{'dashboard.timeTracking.export' | translate}}</span></ch-primary-button>\n\t\t</div>\n\n\t\t<ng-container [ngTemplateOutlet]=\"timeTrackingFilters\"></ng-container>\n\n\t\t<table [dataSource]=\"matTasks\"\n\t\t\t\t\t [trackBy]=\"trackById\"\n\t\t\t\t\t class=\"w-100 text-left mycraftnote-table with-expandable-row\"\n\t\t\t\t\t mat-table\n\t\t\t\t\t matSort\n\t\t\t\t\t matSortActive=\"date\"\n\t\t\t\t\t matSortDirection=\"desc\"\n\t\t\t\t\t multiTemplateDataRows>\n\t\t\t<ng-container matColumnDef=\"folder-or-project\">\n\t\t\t\t<th *matHeaderCellDef mat-header-cell\n\t\t\t\t\t\tmat-sort-header>{{ 'dashboard.timeTracking.projectOrFolder' | translate }}</th>\n\t\t\t\t<td *matCellDef=\"let element\"\n\t\t\t\t\t\tclass=\"text-truncate column_name\"\n\t\t\t\t\t\tmat-cell>\n\t\t\t\t\t\t<span *ngIf=\"(element.type === 'task' && element.times.length > 0)\">\n\t\t\t\t\t\t\t<mat-icon (click)=\"expandRow(element)\"\n\t\t\t\t\t\t\t\t\t\t\t\tappEventStopPropagation\n\t\t\t\t\t\t\t\t\t\t\t\tclass=\"mr-2 color-primary pointer\">\n\t\t\t\t\t\t\t\t{{ expandedElementId === element.id ? 'expand_less' : 'expand_more'}}\n\t\t\t\t\t\t\t</mat-icon>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t<ng-container *ngTemplateOutlet=\"projectName;context:{project : element}\"></ng-container>\n\t\t\t\t</td>\n\t\t\t\t<td *matFooterCellDef mat-footer-cell></td>\n\t\t\t</ng-container>\n\n\t\t\t<ng-container matColumnDef=\"task-name\">\n\t\t\t\t<th *matHeaderCellDef mat-header-cell\n\t\t\t\t\t\tmat-sort-header>{{ 'dashboard.timeTracking.taskName' | translate }}</th>\n\t\t\t\t<td *matCellDef=\"let element\" class=\"column_task_name text-truncate\" mat-cell>\n\t\t\t\t\t{{ element.taskName }}\n\t\t\t\t</td>\n\t\t\t\t<td *matFooterCellDef mat-footer-cell></td>\n\t\t\t</ng-container>\n\n\t\t\t<ng-container matColumnDef=\"work-type\">\n\t\t\t\t<th *matHeaderCellDef mat-header-cell mat-sort-header>{{ 'dashboard.timeTracking.workType' | translate }}</th>\n\t\t\t\t<td *matCellDef=\"let element\" class=\"column_work_type text-truncate\" mat-cell>\n\t\t\t\t\t{{element.workType}}\n\t\t\t\t</td>\n\t\t\t\t<td *matFooterCellDef mat-footer-cell></td>\n\t\t\t</ng-container>\n\n\n\t\t\t<ng-container matColumnDef=\"assignee\">\n\t\t\t\t<th *matHeaderCellDef mat-header-cell mat-sort-header>{{ 'dashboard.timeTracking.assignee' | translate }}</th>\n\t\t\t\t<td *matCellDef=\"let element\" class=\"column_assignee text-truncate\" mat-cell>\n\t\t\t\t\t{{ element.assigneeName }}\n\t\t\t\t</td>\n\t\t\t\t<td *matFooterCellDef mat-footer-cell></td>\n\t\t\t</ng-container>\n\n\t\t\t<ng-container matColumnDef=\"date\">\n\t\t\t\t<th *matHeaderCellDef mat-header-cell mat-sort-header>{{ 'dashboard.timeTracking.date' | translate }}</th>\n\t\t\t\t<td *matCellDef=\"let element\" class=\"column_date\" mat-cell>\n\t\t\t\t\t{{ element.createdTime | date : 'shortDate' : undefined : 'de-DE' }}\n\t\t\t\t</td>\n\t\t\t\t<td *matFooterCellDef class=\"text-right pr-3\" mat-footer-cell>\n\t\t\t\t\t<strong>{{ 'dashboard.timeTracking.total' | translate }} : </strong>\n\t\t\t\t</td>\n\t\t\t</ng-container>\n\n\t\t\t<ng-container matColumnDef=\"time-worked\">\n\t\t\t\t<th *matHeaderCellDef mat-header-cell\n\t\t\t\t\t\tmat-sort-header>{{ 'dashboard.timeTracking.timeWorked' | translate }}</th>\n\t\t\t\t<td *matCellDef=\"let element\" class=\"column_time-spent\" mat-cell>\n\t\t\t\t\t{{ element.timeWorked | taskTime }}\n\t\t\t\t</td>\n\t\t\t\t<td *matFooterCellDef mat-footer-cell>\n\t\t\t\t\t<strong>{{ (totalTimeWorked$ | async) | taskTime }} </strong>\n\t\t\t\t</td>\n\t\t\t</ng-container>\n\n\t\t\t<ng-container matColumnDef=\"expandedDetail\">\n\t\t\t\t<td *matCellDef=\"let element\" [attr.colspan]=\"displayedColumns.length\" class=\"no-padding text-truncate\"\n\t\t\t\t\t\tmat-cell>\n\t\t\t\t\t<ng-container *ngTemplateOutlet=\"shortTable;context:{element : element}\"></ng-container>\n\t\t\t\t</td>\n\t\t\t</ng-container>\n\n\t\t\t<tr *matHeaderRowDef=\"displayedColumns\" class=\"table-row-header\" mat-header-row></tr>\n\t\t\t<tr (click)=\"viewEntryDetails(row)\"\n\t\t\t\t\t*matRowDef=\"let row; columns: displayedColumns\"\n\t\t\t\t\tclass=\"table-row\" mat-row></tr>\n\t\t\t<tr *matRowDef=\"let row; columns: ['expandedDetail']\" [class.expanded]=\"expandedElementId === row.id\"\n\t\t\t\t\tclass=\"table-row expanded-row\"\n\t\t\t\t\tmat-row></tr>\n\t\t\t<tr *matFooterRowDef=\"displayedColumns\" class=\"table-row-footer\" mat-footer-row></tr>\n\t\t</table>\n\t\t<mat-paginator [length]=\"matTasks.data.length\" [pageSizeOptions]=\"[10, 25, 50]\" [pageSize]=\"10\"></mat-paginator>\n\t</div>\n</ng-template>\n\n<ng-template #timeTrackingFilters>\n\t<div [ngClass]=\"{ 'mb-2' : (isAnyFilterSelected$ | async)}\"\n\t\t\t class=\"d-flex align-items-center montserrat-text-medium filters-container flex-wrap\">\n\t\t<div class=\"mr-3\">\n\t\t\t{{'dashboard.timeTracking.filterBy' | translate}} :\n\t\t</div>\n\t\t<app-filter\n\t\t\t(filterOpened)=\"openProjectFilterDialog()\"\n\t\t\t[providesMenu]=\"false\"\n\t\t\t[selectedItemsLength]=\"selectedProjectsLength$ | async\"\n\t\t\t[trackingEvent]=\"TrackEventType.TRACKED_TIME_FILTER_PROJECT_CLICKED\">\n\t\t\t<div class=\"filter-text d-flex align-items-center\">\n\t\t\t\t<mat-icon class=\"mr-2\" svgIcon=\"sidebar-project\"></mat-icon>\n\t\t\t\t<span>{{ (selectedProjectsText$ | async) || 'dashboard.timeTracking.projectOrFolder' | translate }}</span>\n\t\t\t</div>\n\t\t</app-filter>\n\t\t<app-filter (filterClosed)=\"logSelectEvent(TrackEventType.TRACKED_TIME_FILTER_ASSIGNEE_SELECTED)\"\n\t\t\t\t\t\t\t\t[selectedItemsLength]=\"selectedMembersLength$ | async\"\n\t\t\t\t\t\t\t\t[trackingEvent]=\"TrackEventType.TRACKED_TIME_FILTER_ASSIGNEE_CLICKED\">\n\t\t\t<div class=\"filter-text d-flex align-items-center\">\n\t\t\t\t<mat-icon class=\"mr-2\">person_outline</mat-icon>\n\t\t\t\t<span>{{ (selectedMembersText$ | async) || ('dashboard.timeTracking.assignee' | translate) }}</span>\n\t\t\t</div>\n\t\t\t<div class=\"filter-content\">\n\t\t\t\t<ng-container [ngTemplateOutlet]=\"membersFilterContent\"></ng-container>\n\t\t\t</div>\n\t\t</app-filter>\n\t\t<app-filter (filterClosed)=\"logSelectEvent(TrackEventType.TRACKED_TIME_FILTER_WORK_TYPE_SELECTED)\"\n\t\t\t\t\t\t\t\t[selectedItemsLength]=\"selectedWorkTypesLength$ | async\"\n\t\t\t\t\t\t\t\t[trackingEvent]=\"TrackEventType.TRACKED_TIME_FILTER_WORK_TYPE_CLICKED\">\n\t\t\t<div class=\"filter-text d-flex align-items-center\">\n\t\t\t\t<mat-icon class=\"mr-2\" fontSet=\"material-icons-sharp\">calendar_today</mat-icon>\n\t\t\t\t<span>{{ (selectedWorkTypesText$ | async) || ('dashboard.timeTracking.workType' | translate) }}</span>\n\t\t\t</div>\n\t\t\t<div class=\"filter-content\">\n\t\t\t\t<ng-container [ngTemplateOutlet]=\"workTypeFilterContent\"></ng-container>\n\t\t\t</div>\n\t\t</app-filter>\n\t\t<app-filter [selectedItemsLength]=\"selectedDatesLength$ | async\"\n\t\t\t\t\t\t\t\t[trackingEvent]=\"TrackEventType.TRACKED_TIME_FILTER_DATE_CLICKED\">\n\t\t\t<div class=\"filter-text d-flex align-items-center\">\n\t\t\t\t<mat-icon class=\"mr-2\" fontSet=\"material-icons-sharp\">calendar_today</mat-icon>\n\t\t\t\t<span>{{ (selectedDatesText$ | async) || 'dashboard.timeTracking.date' | translate }}</span>\n\t\t\t</div>\n\t\t\t<div class=\"filter-content\">\n\t\t\t\t<ng-container [ngTemplateOutlet]=\"dateFilterContent\"></ng-container>\n\t\t\t</div>\n\t\t</app-filter>\n\t\t<div *ngIf=\"selectedDates$ | async\">\n\t\t\t<mat-form-field appearance=\"outline\" class=\"cn-filter__form-field\">\n\t\t\t\t<input (dateChange)=\"changeDate('startDate', $event.value)\" [formControl]=\"startDateControl\"\n\t\t\t\t\t\t\t [matDatepicker]=\"startDate\"\n\t\t\t\t\t\t\t [max]=\"endDateControl.value\" matInput\n\t\t\t\t\t\t\t [placeholder]=\"'dashboard.timeTracking.filters.startDate'| translate\" />\n\t\t\t\t<mat-datepicker-toggle [for]=\"startDate\" matSuffix></mat-datepicker-toggle>\n\t\t\t\t<mat-datepicker #startDate></mat-datepicker>\n\t\t\t</mat-form-field>\n\t\t\t<mat-form-field appearance=\"outline\" class=\"cn-filter__form-field\">\n\t\t\t\t<input (dateChange)=\"changeDate('endDate', $event.value)\" [formControl]=\"endDateControl\"\n\t\t\t\t\t\t\t [matDatepicker]=\"endDate\"\n\t\t\t\t\t\t\t [min]=\"startDateControl.value\" matInput\n\t\t\t\t\t\t\t [placeholder]=\"'dashboard.timeTracking.filters.endDate'| translate\" />\n\t\t\t\t<mat-datepicker-toggle [for]=\"endDate\" matSuffix></mat-datepicker-toggle>\n\t\t\t\t<mat-datepicker #endDate></mat-datepicker>\n\t\t\t</mat-form-field>\n\t\t</div>\n\n\t\t<div\n\t\t\t*ngIf=\"isAnyFilterSelected$ | async\"\n\t\t\tclass=\"d-flex w-100 mt-2\">\n\t\t\t<div class=\"mr-3 invisible\">\n\t\t\t\t{{'dashboard.timeTracking.filterBy' | translate}} :\n\t\t\t</div>\n\t\t\t<div (click)=\"clearAllFilters()\"\n\t\t\t\t\t class=\"p-0 mt-2 cn-filter__clear font-weight-bold color-primary\">\n\t\t\t\t{{ 'dashboard.timeTracking.filters.clearSelections' | translate }}\n\t\t\t</div>\n\t\t</div>\n\t</div>\n\n</ng-template>\n\n<ng-template #shortTable let-element=\"element\">\n\t<table class=\"w-100 sub-table\">\n\t\t<tr *ngFor=\"let time of element.times\">\n\t\t\t<td class=\"invisible\"> {{ element.projectName }} </td>\n\t\t\t<td class=\"invisible\"> {{ element.taskName }} </td>\n\t\t\t<td class=\"invisible\"> {{ element.workType }} </td>\n\t\t\t<td class=\"column_assignee\"> {{ time.assigneeName }} </td>\n\t\t\t<td class=\"column_date\"> {{ time.startTime * 1000 | date : 'shortDate' : undefined : 'de-DE' }} </td>\n\t\t\t<td class=\"column_time-spent\"> {{ (time.endTime - time.startTime) | taskTime }} </td>\n\t\t</tr>\n\t</table>\n</ng-template>\n\n<ng-template #membersFilterContent>\n\t<div *ngIf=\"(selectedFilters$ | async)?.memberFilter.selectedMembers as selectedMembers\" appEventStopPropagation\n\t\t\t class=\"cn-filter\">\n\t\t<div class=\"cn-search__container row no-gutters align-items-center\">\n\t\t\t<div class=\"col\">\n\t\t\t\t<input #memberSearch (keyup)=\"onMemberSearchChange(memberSearch.value)\" class=\"cn-search__input\" matInput\n\t\t\t\t\t\t\t [placeholder]=\"'dashboard.timeTracking.filters.search' | translate\">\n\t\t\t</div>\n\t\t\t<div (click)=\" clearFilterSelection(FilterKeys.MEMEBR)\"\n\t\t\t\t\t *ngIf=\"selectedMembersLength$ | async\"\n\t\t\t\t\t class=\"col-auto cn-filter__clear font-weight-bold color-primary\">\n\t\t\t\t{{ 'dashboard.timeTracking.filters.clearSelections' | translate }}\n\t\t\t</div>\n\t\t</div>\n\t\t<mat-radio-group\n\t\t\t(change)=\"onFilterTypeChanged(memberType)\"\n\t\t\t[(ngModel)]=\"memberType\"\n\t\t\tclass=\"cn-filter__type--group\">\n\t\t\t<mat-radio-button [value]=\"TimeTrackingType.ALL\" class=\"cn-filter__type--button\">\n\t\t\t\t{{'dashboard.timeTracking.filters.allAssignees' | translate}}\n\t\t\t</mat-radio-button>\n\t\t\t<mat-radio-button [value]=\"TimeTrackingType.INTERNAL\" class=\"cn-filter__type--button\">\n\t\t\t\t{{'dashboard.timeTracking.filters.onlyInternalAssignees' | translate}}\n\t\t\t</mat-radio-button>\n\t\t\t<mat-radio-button [value]=\"TimeTrackingType.EXTERNAL\" class=\"cn-filter__type--button\">\n\t\t\t\t{{'dashboard.timeTracking.filters.onlyExternalAssignees' | translate}}\n\t\t\t</mat-radio-button>\n\t\t</mat-radio-group>\n\n\t\t<div class=\"cn-filter__line-break\"></div>\n\n\t\t<div *ngIf=\"!(membersResultsNotFoundText$ | async); else emptyMembersResults;\" class=\"cn-filter__members\">\n\t\t\t<div *ngFor=\"let member of (membersOfAllProjects$ | async)\" class=\"cn-filter__type--button text-truncate\">\n\t\t\t\t<mat-checkbox (change)=\"toggleMemberSelection(member)\"\n\t\t\t\t\t\t\t\t\t\t\t[checked]=\"!!selectedMembers[member.id]\"\n\t\t\t\t\t\t\t\t\t\t\tclass=\"text-truncate\">{{member.name}} {{member.lastname}}</mat-checkbox>\n\t\t\t</div>\n\t\t</div>\n\n\t</div>\n</ng-template>\n\n<ng-template #workTypeFilterContent>\n\t<div *ngIf=\"(selectedWorkTypesFilter$ | async) as selectedWorkTypes\" appEventStopPropagation class=\"cn-filter\">\n\t\t<div (click)=\"clearFilterSelection(FilterKeys.WORK_TYPE)\"\n\t\t\t\t *ngIf=\"selectedWorkTypesLength$ | async\"\n\t\t\t\t class=\"col-auto cn-filter__clear font-weight-bold pt-2 pb-2\">\n\t\t\t{{ 'dashboard.timeTracking.filters.clearSelections' | translate }}\n\t\t</div>\n\t\t<div class=\"cn-filter__members\">\n\t\t\t<div *ngFor=\"let workType of (assignedWorkTypes$ | async)\" class=\"cn-filter__type--button text-truncate\">\n\t\t\t\t<mat-checkbox\n\t\t\t\t\t(change)=\"toggleWorkTypeSelection(workType)\"\n\t\t\t\t\t[checked]=\"!!selectedWorkTypes[workType.id]\"\n\t\t\t\t\tclass=\"text-truncate\">{{workType.name}}</mat-checkbox>\n\t\t\t</div>\n\t\t\t<div *ngIf=\"(assignedWorkTypes$ | async).length === 0\" class=\"cn-filter__empty-text\">\n\t\t\t\t{{ 'dashboard.timeTracking.filters.createAnEntryToFilter' | translate }}\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</ng-template>\n\n<ng-template #dateFilterContent>\n\t<div class=\"cn-filter\">\n\t\t<div (click)=\"applyDateFilter()\" class=\"cn-filter__type--date pointer\">\n\t\t\t{{ 'dashboard.timeTracking.filters.allTime' | translate}}\n\t\t</div>\n\t\t<div (click)=\"applyDateFilter(dateKey.name)\" *ngFor=\"let dateKey of dateFilterKeys\"\n\t\t\t\t [appTrack]=\"dateKey.trackEvent\" class=\"cn-filter__type--date pointer\">\n\t\t\t{{ 'dashboard.timeTracking.filters.' + dateKey.translationKey | translate }}\n\t\t</div>\n\t</div>\n</ng-template>\n\n\n<ng-template #emptyMembersResults>\n\t<div class=\"cn-filter__empty-text\">\n\t\t{{membersResultsNotFoundText$ | async}}\n\t</div>\n</ng-template>\n\n<ng-template #projectName let-project=\"project\">\n\t<span *ngIf=\"project.parentProjectName\">\n\t\t<strong>{{project.parentProjectName}}</strong> /\n\t</span>\n\t{{project.projectName}}\n</ng-template>\n\n\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { redirectUnauthenticatedToLogin } from '../../../shared/helper/route-guard-functions';\nimport { TimeTrackingComponent } from './components/time-tracking/time-tracking.component';\n\nconst routes: Routes = [\n\t{\n\t\tpath: '',\n\t\tcomponent: TimeTrackingComponent,\n\t\tpathMatch: 'full',\n\t\tdata: {\n\t\t\tauthGuardPipe: redirectUnauthenticatedToLogin,\n\t\t},\n\t},\n];\n\n@NgModule({\n\timports: [RouterModule.forChild(routes)],\n\texports: [RouterModule],\n})\nexport class DashboardRoutingModule {\n}\n","import { AfterViewInit, Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { AppState } from '../../../../../store/state/app.state';\nimport {\n\tselectAllMemberEntitiesFromProjects,\n\tselectAssignedWorkTypes,\n\tselectTotalTaskTime,\n\tselectTrackedTimesWithTasks,\n\tTrackedTimeUI,\n} from '../../store/selectors/dashboard.selectors';\nimport { BehaviorSubject, combineLatest, Observable, Subject } from 'rxjs';\nimport { MatDialog, MatDrawer, MatPaginator, MatSort, MatTableDataSource } from '@angular/material';\nimport { Export, Member, Task, WorkType } from 'domain-entities';\nimport { debounceTime, distinctUntilChanged, distinctUntilKeyChanged, filter, map, shareReplay, take, takeUntil } from 'rxjs/operators';\nimport { TranslateService } from '@ngx-translate/core';\nimport {\n\tDateFilter,\n\tDateFilterTypeKeys,\n\tFilterKeys,\n\tFilterMemberTypeKeys,\n\tMemberFilter,\n\tProjectsFilter,\n\tTimeTrackingFilter,\n\tTimeTrackingType,\n} from '../../models/time-tracking.models';\nimport moment, { Moment } from 'moment';\nimport { FormControl } from '@angular/forms';\nimport { selectCompanyProjectsEntities } from '../../store/selectors/company-projects.selectors';\nimport { ProjectType } from '../../../../../shared/models/project.type';\nimport { orderBy, sum, set, isEmpty, get } from 'lodash';\nimport { ProjectSortAndSearchHelper } from '../../../../../work/project/project-sort-and-search-helper.service';\nimport { TrackingDispatcherService } from '../../../../../shared/tracking/tracking-dispatcher.service';\nimport { TrackEventType } from '../../../../../shared/models/track-event.type';\nimport { ProjectFilterDialogComponent } from '../project-filter-dialog/project-filter-dialog.component';\nimport { addFeedbackButton, removeFeedbackButton } from '../../../../../shared/widgets/feedback-button/store/feedback-buttons.actions';\nimport { selectAuthState, selectCompany } from '../../../../../store/selectors/app.selectors';\nimport { CreationExport, ExportService } from '../../../../../shared/firebase/export.service';\nimport { selectedFinalizedExportById, selectExportById } from '../../../../../store/selectors/export.seletors';\nimport { FileDownloadService } from '../../../../../shared/file-download/file-download.service';\nimport { BaseFileService } from '../../../../../shared/helper/base-file.service';\nimport { AlertService } from '../../../../../shared/alert/alert.service';\n\n@Component({\n\tselector: 'app-time-tracking',\n\ttemplateUrl: './time-tracking.component.html',\n\tstyleUrls: ['./time-tracking.component.scss'],\n})\nexport class TimeTrackingComponent implements OnDestroy, OnInit, AfterViewInit {\n\t@ViewChild(MatPaginator) paginator: MatPaginator;\n\t@ViewChild(MatSort) sort: MatSort;\n\t@ViewChild(MatDrawer) drawer: MatDrawer;\n\n\n\tProjectType = ProjectType;\n\tTimeTrackingType = TimeTrackingType;\n\tTrackEventType = TrackEventType;\n\tFilterKeys = FilterKeys;\n\n\tloading = true;\n\tselectedEntry: TrackedTimeUI;\n\tmemberType: TimeTrackingType = TimeTrackingType.ALL;\n\n\tdisplayedColumns = [\n\t\t'folder-or-project',\n\t\t'task-name',\n\t\t'work-type',\n\t\t'assignee',\n\t\t'date',\n\t\t'time-worked',\n\t];\n\n\tcolumnMappers = {\n\t\t'folder-or-project': (data) => `${(data['parentProjectName'] || 'z').toLowerCase()} ${data['projectName'].toLowerCase()}`,\n\t\t'task-name': (data) => data['taskName'].toLowerCase(),\n\t\t'work-type': (data) => data['workType'].toLowerCase(),\n\t\t'assignee': (data) => data['assigneeName'].toLowerCase(),\n\t\t'date': (data) => data['createdTime'],\n\t\t'time-worked': (data) => data['timeWorked'],\n\t};\n\n\tfiltersKeysMapper = {\n\t\t'projectId': 'projectsFilter.selectedProjects',\n\t\t'assigneeId': 'memberFilter.selectedMembers',\n\t\t'workTypeId': 'workTypeFilter.selectedWorkTypes',\n\t\t'createdDate': 'dateFilter.selectedDates',\n\t};\n\n\tclearFilterMappers = {\n\t\t[FilterKeys.PROJECT]: this.filtersKeysMapper.projectId,\n\t\t[FilterKeys.MEMEBR]: this.filtersKeysMapper.assigneeId,\n\t\t[FilterKeys.WORK_TYPE]: this.filtersKeysMapper.workTypeId,\n\t};\n\n\ttrackEventCountMapper = {\n\t\t[TrackEventType.TRACKED_TIME_FILTER_ASSIGNEE_SELECTED]: this.filtersKeysMapper.assigneeId,\n\t\t[TrackEventType.TRACKED_TIME_FILTER_PROJECT_SELECTED]: this.filtersKeysMapper.projectId,\n\t\t[TrackEventType.TRACKED_TIME_FILTER_WORK_TYPE_SELECTED]: this.filtersKeysMapper.workTypeId,\n\t\t[TrackEventType.TRACKED_TIME_FILTER_DATE_CUSTOM_RANGE]: this.filtersKeysMapper.createdDate,\n\t};\n\n\texpandedElementId: string;\n\tmatTasks: MatTableDataSource<TrackedTimeUI>;\n\tdestroy$ = new Subject();\n\tselectTrackedTimesWithTasks$ = this.store.select(selectTrackedTimesWithTasks);\n\ttotalTasksTime$: Observable<number> = this.store.select(selectTotalTaskTime);\n\ttotalMembersAssigned$ = this.store.select(selectAllMemberEntitiesFromProjects);\n\tselectedFilters$ = new BehaviorSubject<TimeTrackingFilter>({\n\t\tmemberFilter: {\n\t\t\ttype: TimeTrackingType.ALL,\n\t\t\tselectedMembers: {},\n\t\t\tsearchKey: '',\n\t\t},\n\t\tworkTypeFilter: {\n\t\t\tselectedWorkTypes: {},\n\t\t},\n\t\tdateFilter: {\n\t\t\tselectedDateFilter: null,\n\t\t\tselectedDates: null,\n\t\t},\n\t\tprojectsFilter: {\n\t\t\tsearchKey: '',\n\t\t\tselectedParentProjectId: null,\n\t\t\tselectedProjects: {},\n\t\t},\n\t});\n\n\tmembersFilter$ = this.selectedFilters$.asObservable().pipe(\n\t\tdebounceTime(300),\n\t\tmap((filters: TimeTrackingFilter) => filters.memberFilter),\n\t\tshareReplay(1),\n\t);\n\n\tmembersOfAllProjects$ = combineLatest([\n\t\tthis.membersFilter$,\n\t\tthis.totalMembersAssigned$,\n\t]).pipe(\n\t\tmap(([memberFilter, members]) => {\n\t\t\tconst filteredMembers = Object.values(members)\n\t\t\t\t.filter((member: Member) => this.filterCondition(member, memberFilter))\n\t\t\t\t.filter((member: Member) => this.searchInMember(member as Member, memberFilter.searchKey));\n\t\t\treturn orderBy(filteredMembers, [\n\t\t\t\t(member: Member) => !memberFilter.selectedMembers[member.id],\n\t\t\t\t(member: Member) => member.name.toLowerCase(),\n\t\t\t\t(member: Member) => member.lastname.toLowerCase(),\n\t\t\t]);\n\t\t}),\n\t\tshareReplay(1));\n\n\tmembersResultsNotFoundText$ = combineLatest([\n\t\tthis.membersOfAllProjects$,\n\t\tthis.totalMembersAssigned$,\n\t]).pipe(map(([members, totalMembers]) => {\n\t\tconst totalMembersLength = Object.values(totalMembers).length;\n\n\t\tif (totalMembersLength === 0) {\n\t\t\treturn this.translateService.instant('dashboard.timeTracking.filters.createAnEntryToFilter');\n\t\t}\n\n\t\tif (members.length === 0) {\n\t\t\treturn this.translateService.instant('dashboard.timeTracking.filters.resultsNotFound');\n\t\t}\n\t\treturn null;\n\t}));\n\n\tselectedMembersText$ = combineLatest([\n\t\tthis.membersFilter$,\n\t\tthis.totalMembersAssigned$,\n\t]).pipe(map(([memberFilter, members]) => {\n\t\tconst selectedMembers = Object.values(memberFilter.selectedMembers);\n\n\t\tif (selectedMembers.length > 0) {\n\t\t\tconst selectedMember = members[selectedMembers[0]];\n\t\t\tconst moreText = selectedMembers.length > 1\n\t\t\t\t? ` & ${selectedMembers.length - 1} ${this.translateService.instant('dashboard.timeTracking.more')}`\n\t\t\t\t: '';\n\n\t\t\treturn `${selectedMember.name} ${selectedMember.lastname}${moreText}`;\n\t\t}\n\t\treturn null;\n\t}));\n\n\tselectedMembersLength$ = this.membersFilter$.pipe(map(memberFilter => {\n\t\treturn Object.keys(memberFilter.selectedMembers).length;\n\t}));\n\n\tassignedWorkTypes$ = this.store.select(selectAssignedWorkTypes).pipe(map(workTypes => {\n\t\treturn Object.values(workTypes);\n\t}));\n\n\tselectedWorkTypesFilter$ = this.selectedFilters$.asObservable().pipe(\n\t\tmap((filters: TimeTrackingFilter) => filters.workTypeFilter.selectedWorkTypes),\n\t\tshareReplay(1),\n\t);\n\n\tselectedWorkTypesText$ = combineLatest([\n\t\tthis.selectedWorkTypesFilter$,\n\t\tthis.store.select(selectAssignedWorkTypes),\n\t]).pipe(map(([selectedWorkTypes, assignedWorkTypes]) => {\n\t\tconst selectedMembers = Object.values(selectedWorkTypes);\n\n\t\tif (selectedMembers.length > 0) {\n\t\t\tconst selectedMember: WorkType = assignedWorkTypes[selectedMembers[0]];\n\t\t\tconst moreText = selectedMembers.length > 1\n\t\t\t\t? ` & ${selectedMembers.length - 1} ${this.translateService.instant('dashboard.timeTracking.more')}`\n\t\t\t\t: '';\n\n\t\t\treturn `${selectedMember.name}${moreText}`;\n\t\t}\n\t\treturn null;\n\t}));\n\n\tselectedWorkTypesLength$ = this.selectedWorkTypesFilter$.pipe(map(selectedWorkTypes => {\n\t\treturn Object.keys(selectedWorkTypes).length;\n\t}));\n\n\tselectedDates$ = this.selectedFilters$\n\t\t.pipe(map(selectedFilters => {\n\t\t\treturn selectedFilters.dateFilter.selectedDates;\n\t\t}));\n\n\tselectedDatesText$ = this.selectedFilters$\n\t\t.pipe(map(selectedFilters => {\n\t\t\tconst selectedFilter = selectedFilters.dateFilter.selectedDateFilter;\n\t\t\treturn selectedFilter ? this.translateService.instant(`dashboard.timeTracking.filters.${selectedFilter.translationKey}`) : null;\n\t\t}));\n\n\tselectedDatesLength$ = this.selectedFilters$.pipe(map(selectedFilters => {\n\t\tconst selectedFilter = selectedFilters.dateFilter.selectedDateFilter;\n\t\treturn selectedFilter ? 1 : 0;\n\t}));\n\n\tprojectsFilter$: Observable<ProjectsFilter> = this.selectedFilters$\n\t\t.pipe(\n\t\t\tmap(selectedFilter => selectedFilter.projectsFilter),\n\t\t\tdebounceTime(300),\n\t\t\tshareReplay(1),\n\t\t);\n\n\tselectedParentProjectId$ = this.projectsFilter$\n\t\t.pipe(\n\t\t\tdistinctUntilKeyChanged('selectedParentProjectId'),\n\t\t\tmap(selectedFilter => selectedFilter.selectedParentProjectId),\n\t\t);\n\n\n\tselectedProjectsText$ = combineLatest([\n\t\tthis.projectsFilter$.pipe(map(projectFilter => projectFilter.selectedProjects)),\n\t\tthis.store.select(selectCompanyProjectsEntities),\n\t]).pipe(map(([selectedProjects, allProjects]) => {\n\t\tconst projects = Object.values(selectedProjects);\n\n\t\tif (projects.length > 0) {\n\t\t\tconst selectedProject = allProjects[projects[0]];\n\t\t\tconst moreText = projects.length > 1\n\t\t\t\t? ` & ${projects.length - 1} ${this.translateService.instant('dashboard.timeTracking.more')}`\n\t\t\t\t: '';\n\n\t\t\treturn `${selectedProject.name}${moreText}`;\n\t\t}\n\t\treturn null;\n\t}));\n\n\n\tselectedProjectsLength$ = this.projectsFilter$.pipe(\n\t\tmap(projectFilter => Object.keys(projectFilter.selectedProjects).length),\n\t);\n\n\tstartDateControl = new FormControl(moment());\n\tendDateControl = new FormControl(moment());\n\n\tfilteredTaskTimes$ = combineLatest([\n\t\tthis.selectedFilters$.pipe(\n\t\t\tmap(selectedProjects => this.transformFiltersToTrackedTimeKeys(selectedProjects)),\n\t\t\tdistinctUntilChanged(),\n\t\t),\n\t\tthis.selectTrackedTimesWithTasks$,\n\t]).pipe(\n\t\tmap(([selectedFilters, taskTimes]) => {\n\t\t\tconst filteredResults = taskTimes\n\t\t\t\t.filter(taskTime => this.isTrackedTImeFilterApplicable(selectedFilters, taskTime));\n\n\t\t\tif (selectedFilters['assigneeId'].length === 0) {\n\t\t\t\treturn filteredResults;\n\t\t\t}\n\n\t\t\treturn filteredResults.map(result => {\n\t\t\t\tconst times = result.times.filter(time => selectedFilters['assigneeId'].includes(time.userId));\n\t\t\t\treturn { ...result, times: [...times] };\n\t\t\t});\n\t\t}),\n\t\tshareReplay(1),\n\t);\n\n\ttotalTimeWorked$ = this.filteredTaskTimes$\n\t\t.pipe(\n\t\t\ttakeUntil(this.destroy$),\n\t\t\tmap(taskTimes => taskTimes.reduce((acc, current) => {\n\t\t\t\tif (current.type === 'task') {\n\t\t\t\t\tcurrent.times.forEach(taskTime => {\n\t\t\t\t\t\tacc = acc + (taskTime.endTime - taskTime.startTime);\n\t\t\t\t\t});\n\t\t\t\t\treturn acc;\n\t\t\t\t}\n\t\t\t\treturn acc + current.timeWorked;\n\t\t\t}, 0)),\n\t\t);\n\n\tisAnyFilterSelected$ = combineLatest([\n\t\tthis.selectedProjectsLength$,\n\t\tthis.selectedMembersLength$,\n\t\tthis.selectedWorkTypesLength$,\n\t\tthis.selectedDatesLength$,\n\t]).pipe(map(lengthArray => !!sum(lengthArray)));\n\n\tget dateFilterKeys(): DateFilter[] {\n\t\treturn Object.values(DateFilterTypeKeys);\n\t}\n\n\tconstructor(\n\t\tprivate readonly store: Store<AppState>,\n\t\tprivate readonly translateService: TranslateService,\n\t\tprivate readonly projectSortAndSearchHelper: ProjectSortAndSearchHelper,\n\t\tprivate readonly trackingService: TrackingDispatcherService,\n\t\tprivate readonly exportService: ExportService,\n\t\tprivate readonly baseFileService: BaseFileService,\n\t\tprivate readonly downloadService: FileDownloadService,\n\t\tprivate readonly alertService: AlertService,\n\t\tprivate readonly dialog: MatDialog,\n\t) {\n\t\tthis.initSubscriptions();\n\t}\n\n\tinitSubscriptions(): void {\n\t\tthis.selectedDates$\n\t\t\t.pipe(takeUntil(this.destroy$))\n\t\t\t.subscribe(selectedDates => {\n\t\t\t\tif (!selectedDates) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis.startDateControl.setValue(moment(selectedDates.startDate));\n\t\t\t\tthis.endDateControl.setValue(moment(selectedDates.endDate));\n\t\t\t});\n\t}\n\n\tasync openProjectFilterDialog(): Promise<void> {\n\t\tconst dialogRef = this.dialog.open(ProjectFilterDialogComponent, {\n\t\t\twidth: '500px',\n\t\t\theight: '670px',\n\t\t\tdata: { selectedProjects: this.selectedFilters$.value.projectsFilter.selectedProjects },\n\t\t\tautoFocus: false,\n\t\t});\n\t\tconst res = await dialogRef.afterClosed().take(1).toPromise();\n\t\tthis.logSelectEvent(TrackEventType.TRACKED_TIME_FILTER_PROJECT_SELECTED);\n\t\tif (!res) {\n\t\t\treturn;\n\t\t}\n\t\tconst state = this.selectedFilters$.value;\n\t\tconst filterState: TimeTrackingFilter = {\n\t\t\t...state,\n\t\t\tprojectsFilter: { ...state.projectsFilter, selectedProjects: res.selectedProjects },\n\t\t};\n\t\tthis.selectedFilters$.next(filterState);\n\n\t}\n\n\ttrackById(index: number, item: Task): string {\n\t\treturn item.id;\n\t}\n\n\texpandRow(row: TrackedTimeUI): void {\n\t\tthis.expandedElementId = this.expandedElementId === row.id ? null : row.id;\n\t}\n\n\tviewEntryDetails(row: TrackedTimeUI): void {\n\t\tthis.selectedEntry = row;\n\t\tthis.drawer.open();\n\t}\n\n\tinitTaskTimesSubscription(): void {\n\t\tthis.filteredTaskTimes$\n\t\t\t.pipe(takeUntil(this.destroy$))\n\t\t\t.subscribe((taskTimes) => {\n\t\t\t\tthis.matTasks.data = taskTimes;\n\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tthis.matTasks.sort = this.sort;\n\t\t\t\t\tthis.matTasks.paginator = this.paginator;\n\t\t\t\t});\n\t\t\t});\n\t}\n\n\tngOnDestroy(): void {\n\t\tthis.destroy$.next();\n\t\tthis.destroy$.complete();\n\t\tthis.store.dispatch(removeFeedbackButton());\n\n\t}\n\n\tngOnInit(): void {\n\t\tthis.matTasks = new MatTableDataSource<TrackedTimeUI>([]);\n\t\tthis.matTasks.sortingDataAccessor = (data, sortHeaderId) => this.columnMappers[sortHeaderId](data);\n\t\tthis.store.dispatch(addFeedbackButton());\n\t}\n\n\tngAfterViewInit(): void {\n\t\tthis.initTaskTimesSubscription();\n\t}\n\n\tonFilterTypeChanged(selectedType: TimeTrackingType): void {\n\t\tconst state = { ...this.selectedFilters$.value };\n\t\tstate.memberFilter = { ...state.memberFilter, type: selectedType };\n\n\t\tthis.selectedFilters$.next(state);\n\t}\n\n\ttoggleMemberSelection(member: Member): void {\n\t\tconst state = { ...this.selectedFilters$.value };\n\n\t\tif (state.memberFilter.selectedMembers[member.id]) {\n\t\t\tdelete state.memberFilter.selectedMembers[member.id];\n\t\t} else {\n\t\t\tstate.memberFilter.selectedMembers[member.id] = member.id;\n\t\t}\n\n\t\tstate.memberFilter = { ...state.memberFilter, selectedMembers: { ...state.memberFilter.selectedMembers } };\n\n\t\tthis.selectedFilters$.next(state);\n\t}\n\n\tonMemberSearchChange(searchTerm: string): void {\n\t\tconst state = { ...this.selectedFilters$.value };\n\n\t\tstate.memberFilter = { ...state.memberFilter, searchKey: searchTerm };\n\n\t\tthis.selectedFilters$.next(state);\n\n\t\tif (!searchTerm) {\n\t\t\treturn;\n\t\t}\n\t\tthis.logSearchEvent(TrackEventType.TRACKED_TIME_FILTER_ASSIGNEE_SEARCH, searchTerm);\n\t}\n\n\ttoggleWorkTypeSelection(workType: WorkType): void {\n\t\tconst state = { ...this.selectedFilters$.value };\n\n\t\tif (state.workTypeFilter.selectedWorkTypes[workType.id]) {\n\t\t\tdelete state.workTypeFilter.selectedWorkTypes[workType.id];\n\t\t} else {\n\t\t\tstate.workTypeFilter.selectedWorkTypes[workType.id] = workType.id;\n\t\t}\n\n\t\tstate.workTypeFilter = { ...state.workTypeFilter, selectedWorkTypes: { ...state.workTypeFilter.selectedWorkTypes } };\n\n\t\tthis.selectedFilters$.next(state);\n\t}\n\n\tapplyDateFilter(dateKey: string = null): void {\n\t\tconst dateFilter = DateFilterTypeKeys[dateKey] || null;\n\t\tconst state = { ...this.selectedFilters$.value };\n\t\tlet selectedDates = null;\n\n\t\tif (dateFilter) {\n\t\t\tconst now = moment();\n\t\t\tselectedDates = {\n\t\t\t\tstartDate: dateFilter.startMoment ? dateFilter.startMoment(now).format('YYYY-MM-DD') : null,\n\t\t\t\tendDate: dateFilter.endMoment ? dateFilter.endMoment(now).format('YYYY-MM-DD') : null,\n\t\t\t};\n\t\t}\n\n\t\tstate.dateFilter = {\n\t\t\tselectedDateFilter: dateFilter ? { ...dateFilter } : null,\n\t\t\tselectedDates: selectedDates ? { ...selectedDates } : null,\n\t\t};\n\n\t\tthis.selectedFilters$.next(state);\n\t}\n\n\tchangeDate(controlName: string, value: Moment): void {\n\t\tconst state = { ...this.selectedFilters$.value };\n\t\tconst dateSelectionValue = value || moment();\n\t\tconst selectedDates = { ...state.dateFilter.selectedDates, [controlName]: dateSelectionValue.format('YYYY-MM-DD') };\n\n\t\tstate.dateFilter = {\n\t\t\t...state.dateFilter,\n\t\t\tselectedDates: { ...selectedDates },\n\t\t\tselectedDateFilter: DateFilterTypeKeys['custom'],\n\t\t};\n\n\t\tthis.selectedFilters$.next(state);\n\t\tthis.logSelectEvent(TrackEventType.TRACKED_TIME_FILTER_DATE_CUSTOM_RANGE);\n\t}\n\n\tfolderClicked(folderId: string = null): void {\n\t\tconst state = { ...this.selectedFilters$.value };\n\n\t\tstate.projectsFilter = {\n\t\t\t...state.projectsFilter,\n\t\t\tselectedParentProjectId: folderId,\n\t\t};\n\n\t\tthis.selectedFilters$.next(state);\n\t}\n\n\ttoggleProjectSelection(selectedId: string): void {\n\t\tconst state = { ...this.selectedFilters$.value };\n\n\t\tif (state.projectsFilter.selectedProjects[selectedId]) {\n\t\t\tdelete state.projectsFilter.selectedProjects[selectedId];\n\t\t} else {\n\t\t\tstate.projectsFilter.selectedProjects[selectedId] = selectedId;\n\t\t}\n\n\t\tstate.projectsFilter = { ...state.projectsFilter, selectedProjects: { ...state.projectsFilter.selectedProjects } };\n\n\t\tthis.selectedFilters$.next(state);\n\t}\n\n\tonProjectSearchChange(searchTerm: string): void {\n\t\tconst state = { ...this.selectedFilters$.value };\n\n\t\tstate.projectsFilter = { ...state.projectsFilter, searchKey: searchTerm };\n\n\t\tthis.selectedFilters$.next(state);\n\n\t\tif (!searchTerm) {\n\t\t\treturn;\n\t\t}\n\t\tthis.logSearchEvent(TrackEventType.TRACKED_TIME_FILTER_PROJECT_SEARCH, searchTerm);\n\t}\n\n\tclearAllFilters(): void {\n\t\tconst state = this.selectedFilters$.value;\n\n\t\tstate.projectsFilter = { ...state.projectsFilter, selectedProjects: {} };\n\t\tstate.memberFilter = { ...state.memberFilter, selectedMembers: {} };\n\t\tstate.workTypeFilter = { ...state.workTypeFilter, selectedWorkTypes: {} };\n\t\tstate.dateFilter = { ...state.dateFilter, selectedDates: null, selectedDateFilter: null };\n\n\t\tthis.selectedFilters$.next(state);\n\t}\n\n\tclearFilterSelection(filter: FilterKeys): void {\n\t\tconst state = this.selectedFilters$.value;\n\t\tconst selectedFilter = this.clearFilterMappers[filter];\n\t\tconst filterType = selectedFilter.split('.')[0];\n\n\t\tset(state, selectedFilter, {});\n\t\tstate[filterType] = { ...state[filterType] };\n\n\t\tthis.selectedFilters$.next(state);\n\t}\n\n\tlogSearchEvent(eventName: TrackEventType, searchKey: string): void {\n\t\tthis.trackingService.emitTrackingEvent(eventName, { searchKey });\n\t}\n\n\tlogSelectEvent(eventName: TrackEventType): void {\n\t\tconst selectedFilters = this.selectedFilters$.value;\n\t\tconst selectedIndividualFilters = get(selectedFilters, this.trackEventCountMapper[eventName]);\n\n\t\tif (!selectedIndividualFilters || isEmpty(selectedIndividualFilters)) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet payload = {\n\t\t\t'count': String(Object.keys(selectedIndividualFilters).length),\n\t\t};\n\n\t\tif (eventName === TrackEventType.TRACKED_TIME_FILTER_DATE_CUSTOM_RANGE) {\n\t\t\tpayload = { ...selectedIndividualFilters };\n\t\t}\n\n\t\tthis.trackingService.emitTrackingEvent(\n\t\t\teventName,\n\t\t\t{ ...payload },\n\t\t);\n\t}\n\n\tprivate filterCondition(member: Member, memberFilter: MemberFilter): boolean {\n\t\treturn (!!memberFilter.selectedMembers[member.id]\n\t\t\t|| FilterMemberTypeKeys[memberFilter.type].includes(member.role));\n\t}\n\n\tprivate searchInMember(member: Member, searchTerm: string): boolean {\n\t\treturn (searchTerm === ''\n\t\t\t|| new RegExp(searchTerm.toLowerCase())\n\t\t\t\t.test(`${member.name} ${member.lastname}`.toLowerCase()));\n\t}\n\n\tprivate isTrackedTImeFilterApplicable(mappedFilters: { [id: string]: string[] }, trackedTime: TrackedTimeUI): boolean {\n\t\treturn Object.keys(mappedFilters).every(key => {\n\t\t\tconst filters = mappedFilters[key];\n\n\t\t\tif (filters.length === 0) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tif (key === 'assigneeId' && trackedTime.type === 'task') {\n\t\t\t\treturn trackedTime.times.some(trackTime => filters.includes(trackTime.userId));\n\t\t\t}\n\n\t\t\treturn filters.includes(trackedTime[key])\n\t\t\t\t|| moment(trackedTime[key]).isBetween(filters[0], filters[1]);\n\t\t});\n\t}\n\n\tprivate transformFiltersToTrackedTimeKeys(selectedFilters): any {\n\t\tconst filterKeys = Object.keys(this.filtersKeysMapper);\n\n\t\treturn filterKeys.reduce((acc, current) => {\n\t\t\tconst mappedFilters = get(selectedFilters, this.filtersKeysMapper[current]);\n\t\t\tacc[current] = mappedFilters ? Object.values(mappedFilters) : [];\n\t\t\treturn acc;\n\t\t}, {});\n\t}\n\n\n\tprivate async exportTimes(): Promise<void> {\n\t\tconst exportFilters = {};\n\t\tconst filterValue = this.selectedFilters$.value;\n\t\tif (filterValue.dateFilter.selectedDates) {\n\t\t\tconst interval = {};\n\t\t\tinterval['start'] = moment(filterValue.dateFilter.selectedDates.startDate).unix();\n\t\t\tinterval['end'] = moment(filterValue.dateFilter.selectedDates.endDate).unix();\n\t\t\texportFilters['interval'] = interval;\n\t\t}\n\t\tif (Object.keys(filterValue.memberFilter.selectedMembers).length > 0) {\n\t\t\texportFilters['assignees'] = Object.keys(filterValue.memberFilter.selectedMembers);\n\t\t}\n\t\tif (Object.keys(filterValue.projectsFilter.selectedProjects).length > 0) {\n\t\t\texportFilters['projects'] = Object.values(filterValue.projectsFilter.selectedProjects);\n\t\t}\n\t\tif (Object.keys(filterValue.workTypeFilter.selectedWorkTypes).length > 0) {\n\t\t\texportFilters['workTypes'] = Object.values(filterValue.workTypeFilter.selectedWorkTypes);\n\t\t}\n\n\t\tconst company = await this.store.select(selectCompany).pipe(filter(innerCompany => !!innerCompany.id), take(1)).toPromise();\n\t\tconst createExport: CreationExport = {\n\t\t\tformat: 'application/csv',\n\t\t\tresourceType: 'times',\n\t\t\tresourceId: company.id,\n\t\t\tfilter: exportFilters,\n\t\t};\n\t\tawait this.exportService.createExport(createExport, 'export.times.info', 'export.times.error');\n\t}\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { combineLatest, Observable, of } from 'rxjs';\nimport { AngularFirestore } from '@angular/fire/firestore';\nimport { Task, TaskTime, TrackedTime } from 'domain-entities';\nimport { catchError, map } from 'rxjs/operators';\nimport { chunk } from 'lodash';\nimport * as fromTasks from '../store/actions/tasks.actions';\nimport * as fromTrackedTimes from '../store/actions/tracked-times.actions';\nimport { Store } from '@ngrx/store';\nimport { AppState } from '../../../../store/state/app.state';\n\ninterface DocumentActions<T> {\n\tupdatedDocs: T[];\n\tdeletedDocs: string[];\n}\n\ninterface DocumentPath {\n\tcollectionName: string;\n\tfieldPath: string;\n\tupdateAction: Function;\n\tdeleteAction: Function;\n}\n\n@Injectable({\n\tprovidedIn: 'root',\n})\nexport class TaskService {\n\n\tconstructor(\n\t\tprivate readonly aFireStore: AngularFirestore,\n\t\tprivate readonly store: Store<AppState>,\n\t) {\n\t}\n\n\tgetAllTasks(projectIds: string[]): void {\n\t\tthis.loadChunks<Task>(projectIds, {\n\t\t\tcollectionName: 'tasks',\n\t\t\tfieldPath: 'projectId',\n\t\t\tupdateAction: (tasks) => fromTasks.updateTasksAction({ tasks }),\n\t\t\tdeleteAction: (tasks) => fromTasks.deleteTasksAction({ tasks }),\n\t\t});\n\t}\n\n\tgetAllTaskTimes(taskIds: string[]): void {\n\t\tthis.loadChunks<TaskTime>(taskIds, {\n\t\t\tcollectionName: 'taskTimes',\n\t\t\tfieldPath: 'taskId',\n\t\t\tupdateAction: (taskTimes) => fromTasks.updateTaskTimesAction({ taskTimes }),\n\t\t\tdeleteAction: (taskTimes) => fromTasks.deleteTaskTimesAction({ taskTimes }),\n\t\t});\n\t}\n\n\tgetAllTrackedTimes(projectIds: string[]): void {\n\t\tthis.loadChunks<TrackedTime>(projectIds, {\n\t\t\tcollectionName: 'trackedTimes',\n\t\t\tfieldPath: 'projectId',\n\t\t\tupdateAction: (trackedTimes) => fromTrackedTimes.updateTrackedTimesAction({ trackedTimes }),\n\t\t\tdeleteAction: (trackedTimes) => fromTrackedTimes.deleteTrackedTimesAction({ trackedTimes }),\n\t\t});\n\t}\n\n\tprivate loadChunks<T>(projectIds: string[], documentPath: DocumentPath): void {\n\t\tconst chunks = chunk<string>(projectIds, 10);\n\n\t\tcombineLatest(chunks.map(chunk => this.getChunkedDocuments<T>(chunk, documentPath)))\n\t\t\t.subscribe(taskChunks => this.transformTasksToActions<T>(taskChunks, documentPath));\n\t}\n\n\tprivate getChunkedDocuments<T>(projectIds: string[], documentPath: DocumentPath): Observable<DocumentActions<T>> {\n\t\treturn this.aFireStore.collection<T>(\n\t\t\tdocumentPath.collectionName,\n\t\t\tref => ref.where(documentPath.fieldPath, 'in', projectIds),\n\t\t).stateChanges()\n\t\t\t.pipe(\n\t\t\t\tcatchError(error => {\n\t\t\t\t\tconsole.log(documentPath, error); // TODO: Will remove after fixing the firebase rules\n\t\t\t\t\treturn of([]);\n\t\t\t\t}),\n\t\t\t\tmap(changes => {\n\t\t\t\t\tconst updatedDocs = changes.filter(change => ['added', 'modified'].includes(change.type)).map(change => change.payload.doc.data());\n\t\t\t\t\tconst deletedDocs = changes.filter(change => ['removed'].includes(change.type)).map(change => change.payload.doc.id);\n\t\t\t\t\treturn { updatedDocs, deletedDocs };\n\t\t\t\t}),\n\t\t\t);\n\t}\n\n\tprivate transformTasksToActions<T>(taskChunks: Array<DocumentActions<T>>, documentPath: DocumentPath): void {\n\t\tlet updatedDocs = [];\n\t\tlet deletedDocs = [];\n\n\t\ttaskChunks.forEach(chunk => {\n\t\t\tupdatedDocs = [...updatedDocs, ...chunk.updatedDocs];\n\t\t\tdeletedDocs = [...deletedDocs, ...chunk.deletedDocs];\n\t\t});\n\n\t\tthis.store.dispatch(documentPath.updateAction(updatedDocs));\n\t\tthis.store.dispatch(documentPath.deleteAction(deletedDocs));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Actions, Effect, ofType } from '@ngrx/effects';\nimport { Action, Store } from '@ngrx/store';\nimport * as fromTasks from '../actions/tasks.actions';\nimport { debounceTime, switchMap, tap } from 'rxjs/operators';\nimport { TaskService } from '../../services/task.service';\nimport { AppState } from '../../../../../store/state/app.state';\nimport { selectAllCompanyProjectIds } from '../selectors/company-projects.selectors';\n\n@Injectable()\nexport class TasksEffects {\n\n\tconstructor(\n\t\tprivate readonly actions$: Actions,\n\t\tprivate readonly store: Store<AppState>,\n\t\tprivate readonly taskService: TaskService,\n\t) {\n\t}\n\n\t@Effect({ dispatch: false })\n\tloadTasksAndTimes$ = this.actions$.pipe(\n\t\tofType(fromTasks.loadTasksAction),\n\t\tswitchMap(() => this.store.select(selectAllCompanyProjectIds).pipe(debounceTime(300))),\n\t\ttap(() => this.store.dispatch(fromTasks.clearTasksAction())),\n\t\ttap(selectedIds => this.taskService.getAllTasks(selectedIds as string[])),\n\t);\n\n\tngrxOnInitEffects(): Action {\n\t\treturn fromTasks.loadTasksAction();\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Actions, Effect, ofType } from '@ngrx/effects';\nimport { Action, Store } from '@ngrx/store';\nimport * as fromTasks from '../actions/tasks.actions';\nimport { debounceTime, switchMap, tap } from 'rxjs/operators';\nimport { TaskService } from '../../services/task.service';\nimport { AppState } from '../../../../../store/state/app.state';\nimport { selectAllTaskIds } from '../selectors/dashboard.selectors';\n\n@Injectable()\nexport class TaskTimesEffects {\n\n\tconstructor(\n\t\tprivate readonly actions$: Actions,\n\t\tprivate readonly store: Store<AppState>,\n\t\tprivate readonly taskService: TaskService,\n\t) {\n\t}\n\n\t@Effect({ dispatch: false })\n\tloadTasksAndTimes$ = this.actions$.pipe(\n\t\tofType(fromTasks.loadTaskTimesAction),\n\t\tswitchMap(() => this.store.select(selectAllTaskIds).pipe(debounceTime(300))),\n\t\ttap(() => this.store.dispatch(fromTasks.clearTaskTimesAction())),\n\t\ttap(selectedIds => this.taskService.getAllTaskTimes(selectedIds)),\n\t);\n\n\tngrxOnInitEffects(): Action {\n\t\treturn fromTasks.loadTaskTimesAction();\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Actions, Effect, ofType } from '@ngrx/effects';\nimport { Action, Store } from '@ngrx/store';\nimport * as fromTrackedTimes from '../actions/tracked-times.actions';\nimport { debounceTime, switchMap, tap } from 'rxjs/operators';\nimport { TaskService } from '../../services/task.service';\nimport { AppState } from '../../../../../store/state/app.state';\nimport { selectAllCompanyProjectIds } from '../selectors/company-projects.selectors';\n\n@Injectable()\nexport class TrackedTimesEffects {\n\n\tconstructor(\n\t\tprivate readonly actions$: Actions,\n\t\tprivate readonly store: Store<AppState>,\n\t\tprivate readonly taskService: TaskService,\n\t) {\n\t}\n\n\t@Effect({ dispatch: false })\n\tloadTasksAndTimes$ = this.actions$.pipe(\n\t\tofType(fromTrackedTimes.loadTrackedTimesAction),\n\t\tswitchMap(() => this.store.select(selectAllCompanyProjectIds).pipe(debounceTime(300))),\n\t\ttap(() => this.store.dispatch(fromTrackedTimes.clearTrackedTimesAction())),\n\t\ttap(selectedIds => this.taskService.getAllTrackedTimes(selectedIds as string[])),\n\t);\n\n\tngrxOnInitEffects(): Action {\n\t\treturn fromTrackedTimes.loadTrackedTimesAction();\n\t}\n}\n","import { InjectionToken, Injectable, Optional, Inject, NgModule } from '@angular/core';\nimport { DateAdapter, MAT_DATE_LOCALE, MAT_DATE_FORMATS } from '@angular/material/core';\nimport * as _rollupMoment from 'moment';\nimport _rollupMoment__default, {  } from 'moment';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material-moment-adapter/adapter/moment-date-adapter.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nimport * as ɵngcc0 from '@angular/core';\nconst moment = _rollupMoment__default || _rollupMoment;\n/**\n * Configurable options for {\\@see MomentDateAdapter}.\n * @record\n */\nfunction MatMomentDateAdapterOptions() { }\nif (false) {\n    /**\n     * When enabled, the dates have to match the format exactly.\n     * See https://momentjs.com/guides/#/parsing/strict-mode/.\n     * @type {?|undefined}\n     */\n    MatMomentDateAdapterOptions.prototype.strict;\n    /**\n     * Turns the use of utc dates on or off.\n     * Changing this will change how Angular Material components like DatePicker output dates.\n     * {\\@default false}\n     * @type {?|undefined}\n     */\n    MatMomentDateAdapterOptions.prototype.useUtc;\n}\n/**\n * InjectionToken for moment date adapter to configure options.\n * @type {?}\n */\nconst MAT_MOMENT_DATE_ADAPTER_OPTIONS = new InjectionToken('MAT_MOMENT_DATE_ADAPTER_OPTIONS', {\n    providedIn: 'root',\n    factory: MAT_MOMENT_DATE_ADAPTER_OPTIONS_FACTORY\n});\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction MAT_MOMENT_DATE_ADAPTER_OPTIONS_FACTORY() {\n    return {\n        useUtc: false\n    };\n}\n/**\n * Creates an array and fills it with values.\n * @template T\n * @param {?} length\n * @param {?} valueFunction\n * @return {?}\n */\nfunction range(length, valueFunction) {\n    /** @type {?} */\n    const valuesArray = Array(length);\n    for (let i = 0; i < length; i++) {\n        valuesArray[i] = valueFunction(i);\n    }\n    return valuesArray;\n}\n/**\n * Adapts Moment.js Dates for use with Angular Material.\n */\nclass MomentDateAdapter extends DateAdapter {\n    /**\n     * @param {?} dateLocale\n     * @param {?=} _options\n     */\n    constructor(dateLocale, _options) {\n        super();\n        this._options = _options;\n        this.setLocale(dateLocale || moment.locale());\n    }\n    /**\n     * @param {?} locale\n     * @return {?}\n     */\n    setLocale(locale) {\n        super.setLocale(locale);\n        /** @type {?} */\n        let momentLocaleData = moment.localeData(locale);\n        this._localeData = {\n            firstDayOfWeek: momentLocaleData.firstDayOfWeek(),\n            longMonths: momentLocaleData.months(),\n            shortMonths: momentLocaleData.monthsShort(),\n            dates: range(31, (/**\n             * @param {?} i\n             * @return {?}\n             */\n            (i) => this.createDate(2017, 0, i + 1).format('D'))),\n            longDaysOfWeek: momentLocaleData.weekdays(),\n            shortDaysOfWeek: momentLocaleData.weekdaysShort(),\n            narrowDaysOfWeek: momentLocaleData.weekdaysMin(),\n        };\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    getYear(date) {\n        return this.clone(date).year();\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    getMonth(date) {\n        return this.clone(date).month();\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    getDate(date) {\n        return this.clone(date).date();\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    getDayOfWeek(date) {\n        return this.clone(date).day();\n    }\n    /**\n     * @param {?} style\n     * @return {?}\n     */\n    getMonthNames(style) {\n        // Moment.js doesn't support narrow month names, so we just use short if narrow is requested.\n        return style == 'long' ? this._localeData.longMonths : this._localeData.shortMonths;\n    }\n    /**\n     * @return {?}\n     */\n    getDateNames() {\n        return this._localeData.dates;\n    }\n    /**\n     * @param {?} style\n     * @return {?}\n     */\n    getDayOfWeekNames(style) {\n        if (style == 'long') {\n            return this._localeData.longDaysOfWeek;\n        }\n        if (style == 'short') {\n            return this._localeData.shortDaysOfWeek;\n        }\n        return this._localeData.narrowDaysOfWeek;\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    getYearName(date) {\n        return this.clone(date).format('YYYY');\n    }\n    /**\n     * @return {?}\n     */\n    getFirstDayOfWeek() {\n        return this._localeData.firstDayOfWeek;\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    getNumDaysInMonth(date) {\n        return this.clone(date).daysInMonth();\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    clone(date) {\n        return date.clone().locale(this.locale);\n    }\n    /**\n     * @param {?} year\n     * @param {?} month\n     * @param {?} date\n     * @return {?}\n     */\n    createDate(year, month, date) {\n        // Moment.js will create an invalid date if any of the components are out of bounds, but we\n        // explicitly check each case so we can throw more descriptive errors.\n        if (month < 0 || month > 11) {\n            throw Error(`Invalid month index \"${month}\". Month index has to be between 0 and 11.`);\n        }\n        if (date < 1) {\n            throw Error(`Invalid date \"${date}\". Date has to be greater than 0.`);\n        }\n        /** @type {?} */\n        const result = this._createMoment({ year, month, date }).locale(this.locale);\n        // If the result isn't valid, the date must have been out of bounds for this month.\n        if (!result.isValid()) {\n            throw Error(`Invalid date \"${date}\" for month with index \"${month}\".`);\n        }\n        return result;\n    }\n    /**\n     * @return {?}\n     */\n    today() {\n        return this._createMoment().locale(this.locale);\n    }\n    /**\n     * @param {?} value\n     * @param {?} parseFormat\n     * @return {?}\n     */\n    parse(value, parseFormat) {\n        if (value && typeof value == 'string') {\n            return this._createMoment(value, parseFormat, this.locale);\n        }\n        return value ? this._createMoment(value).locale(this.locale) : null;\n    }\n    /**\n     * @param {?} date\n     * @param {?} displayFormat\n     * @return {?}\n     */\n    format(date, displayFormat) {\n        date = this.clone(date);\n        if (!this.isValid(date)) {\n            throw Error('MomentDateAdapter: Cannot format invalid date.');\n        }\n        return date.format(displayFormat);\n    }\n    /**\n     * @param {?} date\n     * @param {?} years\n     * @return {?}\n     */\n    addCalendarYears(date, years) {\n        return this.clone(date).add({ years });\n    }\n    /**\n     * @param {?} date\n     * @param {?} months\n     * @return {?}\n     */\n    addCalendarMonths(date, months) {\n        return this.clone(date).add({ months });\n    }\n    /**\n     * @param {?} date\n     * @param {?} days\n     * @return {?}\n     */\n    addCalendarDays(date, days) {\n        return this.clone(date).add({ days });\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    toIso8601(date) {\n        return this.clone(date).format();\n    }\n    /**\n     * Returns the given value if given a valid Moment or null. Deserializes valid ISO 8601 strings\n     * (https://www.ietf.org/rfc/rfc3339.txt) and valid Date objects into valid Moments and empty\n     * string into null. Returns an invalid date for all other values.\n     * @param {?} value\n     * @return {?}\n     */\n    deserialize(value) {\n        /** @type {?} */\n        let date;\n        if (value instanceof Date) {\n            date = this._createMoment(value).locale(this.locale);\n        }\n        else if (this.isDateInstance(value)) {\n            // Note: assumes that cloning also sets the correct locale.\n            return this.clone(value);\n        }\n        if (typeof value === 'string') {\n            if (!value) {\n                return null;\n            }\n            date = this._createMoment(value, moment.ISO_8601).locale(this.locale);\n        }\n        if (date && this.isValid(date)) {\n            return this._createMoment(date).locale(this.locale);\n        }\n        return super.deserialize(value);\n    }\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    isDateInstance(obj) {\n        return moment.isMoment(obj);\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    isValid(date) {\n        return this.clone(date).isValid();\n    }\n    /**\n     * @return {?}\n     */\n    invalid() {\n        return moment.invalid();\n    }\n    /**\n     * Creates a Moment instance while respecting the current UTC settings.\n     * @private\n     * @param {?} date\n     * @param {?=} format\n     * @param {?=} locale\n     * @return {?}\n     */\n    _createMoment(date, format, locale) {\n        const { strict, useUtc } = this._options || {};\n        return useUtc\n            ? moment.utc(date, format, locale, strict)\n            : moment(date, format, locale, strict);\n    }\n}\nMomentDateAdapter.ɵfac = function MomentDateAdapter_Factory(t) { return new (t || MomentDateAdapter)(ɵngcc0.ɵɵinject(MAT_DATE_LOCALE, 8), ɵngcc0.ɵɵinject(MAT_MOMENT_DATE_ADAPTER_OPTIONS, 8)); };\nMomentDateAdapter.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: MomentDateAdapter, factory: MomentDateAdapter.ɵfac });\n/** @nocollapse */\nMomentDateAdapter.ctorParameters = () => [\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DATE_LOCALE,] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_MOMENT_DATE_ADAPTER_OPTIONS,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MomentDateAdapter, [{\n        type: Injectable\n    }], function () { return [{ type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_DATE_LOCALE]\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_MOMENT_DATE_ADAPTER_OPTIONS]\n            }] }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    MomentDateAdapter.prototype._localeData;\n    /**\n     * @type {?}\n     * @private\n     */\n    MomentDateAdapter.prototype._options;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material-moment-adapter/adapter/moment-date-formats.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @type {?} */\nconst MAT_MOMENT_DATE_FORMATS = {\n    parse: {\n        dateInput: 'l',\n    },\n    display: {\n        dateInput: 'l',\n        monthYearLabel: 'MMM YYYY',\n        dateA11yLabel: 'LL',\n        monthYearA11yLabel: 'MMMM YYYY',\n    },\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material-moment-adapter/adapter/index.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MomentDateModule {\n}\nMomentDateModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MomentDateModule });\nMomentDateModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MomentDateModule_Factory(t) { return new (t || MomentDateModule)(); }, providers: [\n        {\n            provide: DateAdapter,\n            useClass: MomentDateAdapter,\n            deps: [MAT_DATE_LOCALE, MAT_MOMENT_DATE_ADAPTER_OPTIONS]\n        }\n    ] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MomentDateModule, [{\n        type: NgModule,\n        args: [{\n                providers: [\n                    {\n                        provide: DateAdapter,\n                        useClass: MomentDateAdapter,\n                        deps: [MAT_DATE_LOCALE, MAT_MOMENT_DATE_ADAPTER_OPTIONS]\n                    }\n                ]\n            }]\n    }], null, null); })();\nconst ɵ0 = MAT_MOMENT_DATE_FORMATS;\nclass MatMomentDateModule {\n}\nMatMomentDateModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatMomentDateModule });\nMatMomentDateModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatMomentDateModule_Factory(t) { return new (t || MatMomentDateModule)(); }, providers: [{ provide: MAT_DATE_FORMATS, useValue: ɵ0 }], imports: [[MomentDateModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatMomentDateModule, { imports: [MomentDateModule] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatMomentDateModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MomentDateModule],\n                providers: [{ provide: MAT_DATE_FORMATS, useValue: ɵ0 }]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material-moment-adapter/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_MOMENT_DATE_ADAPTER_OPTIONS, MAT_MOMENT_DATE_ADAPTER_OPTIONS_FACTORY, MAT_MOMENT_DATE_FORMATS, MatMomentDateModule, MomentDateAdapter, MomentDateModule };\n\n//# sourceMappingURL=material-moment-adapter.js.map","import { Injectable } from '@angular/core';\nimport { Actions, Effect, ofType } from '@ngrx/effects';\nimport { Action, Store } from '@ngrx/store';\nimport * as fromCompanyProjects from '../actions/company-projects.actions';\nimport { filter, mergeMap, switchMap, tap } from 'rxjs/operators';\nimport { AppState } from '../../../../../store/state/app.state';\nimport { selectCompanyId, selectUserRole } from '../../../../../store/selectors/app.selectors';\nimport { ProjectService } from '../../../../../shared/firebase/project.service';\nimport { DocumentChangeAction } from '@angular/fire/firestore';\nimport { MemberRole, Project } from 'domain-entities';\nimport { combineLatest, from, Observable } from 'rxjs';\n\n@Injectable()\nexport class CompanyProjectsEffects {\n\n\tconstructor(\n\t\tprivate readonly actions$: Actions,\n\t\tprivate readonly store: Store<AppState>,\n\t\tprivate readonly projectService: ProjectService,\n\t) {\n\t}\n\n\t@Effect()\n\tloadCompanyProjects = this.actions$.pipe(\n\t\tofType(fromCompanyProjects.loadCompanyProjectsAction),\n\t\tmergeMap(() => combineLatest([\n\t\t\tthis.store.select(selectCompanyId).pipe(filter(companyId => !!companyId)),\n\t\t\tthis.store.select(selectUserRole).pipe(filter(memberRole => !!memberRole)),\n\t\t])),\n\t\ttap(() => this.store.dispatch(fromCompanyProjects.clearCompanyProjectsAction())),\n\t\tswitchMap(([companyId, memberRole]) => {\n\t\t\tif (memberRole === MemberRole.OWNER) {\n\t\t\t\treturn this.projectService.getProjectStatusChangesByCompanyId(companyId);\n\t\t\t}\n\n\t\t\treturn this.projectService.getProjectsListeners('active', 'project');\n\t\t}),\n\t\tswitchMap(documents => this.getDispatchEventsOfProjectsByCompanyId(documents)),\n\t);\n\n\tngrxOnInitEffects(): Action {\n\t\treturn fromCompanyProjects.loadCompanyProjectsAction();\n\t}\n\n\tprivate getDispatchEventsOfProjectsByCompanyId(documentChanges: DocumentChangeAction<Project>[]): Observable<Action> {\n\t\tconst addedOrChangedDocs = documentChanges\n\t\t\t.filter(document => ['added', 'changed'].includes(document.type))\n\t\t\t.map(projectDoc => projectDoc.payload.doc.data());\n\t\tconst deletedDocs = documentChanges\n\t\t\t.filter(document => ['removed'].includes(document.type))\n\t\t\t.map(document => document.payload.doc.id);\n\n\t\treturn from([\n\t\t\tfromCompanyProjects.updateCompanyProjectsAction({ projects: addedOrChangedDocs }),\n\t\t\tfromCompanyProjects.deleteCompanyProjectsAction({ projects: deletedDocs }),\n\t\t]);\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { PrimaryButtonComponent } from './components/primary-button/primary-button.component';\nimport { CommonModule } from '@angular/common';\nimport { MatButtonModule, MatIconModule } from '@angular/material';\nimport { PrimaryButtonTextDirective } from './directives/primary-button-text.directive';\n\n/**\n * This button serves as a template for the Crafthaus primary button which is why it's\n * more generic then it would have to be for its current use in the dashboard.\n *\n * Once a primary button is available from the Crafthaus repo this button will be deleted\n * and replaced.\n */\n\n@NgModule({\n\tdeclarations: [PrimaryButtonComponent, PrimaryButtonTextDirective],\n\texports: [\n\t\tPrimaryButtonComponent,\n\t\tPrimaryButtonTextDirective,\n\t],\n\timports: [\n\t\tCommonModule,\n\t\tMatButtonModule,\n\t\tMatIconModule,\n\t],\n})\nexport class PrimaryButtonModule {\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TimeTrackingComponent } from './components/time-tracking/time-tracking.component';\nimport { DashboardRoutingModule } from './dashboard.routing.module';\nimport { SharedModule } from '../../../shared/shared.module';\nimport { TaskService } from './services/task.service';\nimport { StoreModule } from '@ngrx/store';\nimport { reducerTasks, reducerTaskTimes } from './store/reducers/tasks.reducer';\nimport { EffectsModule } from '@ngrx/effects';\nimport { TasksEffects } from './store/effects/tasks.effects';\nimport { TaskTimesEffects } from './store/effects/task-times.effects';\nimport { DateAdapter, MAT_DATE_FORMATS, MAT_DATE_LOCALE, MatDatepickerModule, MatTableModule } from '@angular/material';\nimport { TaskTimePipe } from './pipes/task-time.pipe';\nimport { ProjectNamePipe } from './pipes/project-name.pipe';\nimport { AssigneeNamePipe } from './pipes/assignee-name.pipe';\nimport { reducerTrackedTimes } from './store/reducers/tracked-times.reducer';\nimport { TrackedTimesEffects } from './store/effects/tracked-times.effects';\nimport { FilterComponent } from './components/filter/filter.component';\nimport { MAT_MOMENT_DATE_ADAPTER_OPTIONS, MomentDateAdapter } from '@angular/material-moment-adapter';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { reducerCompanyProjects } from './store/reducers/company-projects.reducer';\nimport { CompanyProjectsEffects } from './store/effects/company-projects.effects';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport * as moment from 'moment';\nimport { TranslateService } from '@ngx-translate/core';\nimport { ProjectItemComponent } from './components/project-item/project-item.component';\nimport { ProjectFilterDialogComponent } from './components/project-filter-dialog/project-filter-dialog.component';\nimport { PrimaryButtonModule } from './components/primary-button/primary-button.module';\n\nexport const DASHBOARD_FORMATS = {\n\tparse: {\n\t\tdateInput: 'LL',\n\t},\n\tdisplay: {\n\t\tdateInput: 'dddd L',\n\t\tmonthYearLabel: 'MMM YYYY',\n\t\tdateA11yLabel: 'LL',\n\t\tmonthYearA11yLabel: 'MMMM YYYY',\n\t},\n};\n\n@NgModule({\n\tdeclarations: [\n\t\tTimeTrackingComponent,\n\t\tTaskTimePipe,\n\t\tProjectNamePipe,\n\t\tAssigneeNamePipe,\n\t\tFilterComponent,\n\t\tProjectItemComponent,\n\t\tProjectFilterDialogComponent,\n\t],\n\timports: [\n\t\tCommonModule,\n\t\tDashboardRoutingModule,\n\t\tSharedModule,\n\t\tMatTableModule,\n\t\tMatDatepickerModule,\n\t\tReactiveFormsModule,\n\t\tStoreModule.forFeature('dashboard', {\n\t\t\t'tasks': reducerTasks,\n\t\t\t'taskTimes': reducerTaskTimes,\n\t\t\t'trackedTimes': reducerTrackedTimes,\n\t\t\t'companyProjects': reducerCompanyProjects,\n\t\t}),\n\t\tEffectsModule.forFeature([\n\t\t\tTasksEffects,\n\t\t\tTaskTimesEffects,\n\t\t\tTrackedTimesEffects,\n\t\t\tCompanyProjectsEffects,\n\t\t]),\n\t\tScrollingModule,\n\t\tPrimaryButtonModule,\n\t],\n\texports: [\n\t\tDashboardRoutingModule,\n\t],\n\tproviders: [\n\t\tTaskService,\n\t\t{\n\t\t\tprovide: DateAdapter,\n\t\t\tuseClass: MomentDateAdapter,\n\t\t\tdeps: [MAT_DATE_LOCALE, MAT_MOMENT_DATE_ADAPTER_OPTIONS],\n\t\t},\n\t\t{ provide: MAT_DATE_FORMATS, useValue: DASHBOARD_FORMATS },\n\t],\n\tentryComponents: [ProjectFilterDialogComponent],\n})\n\n\nexport class DashboardModule {\n\tconstructor(\n\t\tprivate translate: TranslateService,\n\t) {\n\t\tconst browserLang = translate.getBrowserLang().includes('de') ? 'de' : 'en';\n\t\tmoment.locale(browserLang);\n\t}\n}\n"]}