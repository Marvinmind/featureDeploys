{"version":3,"sources":["webpack:///src/app/modules/features/dashboard/store/actions/tasks.actions.ts","webpack:///src/app/modules/features/dashboard/store/reducers/tasks.reducer.ts","webpack:///src/app/modules/features/dashboard/store/actions/tracked-times.actions.ts","webpack:///src/app/modules/features/dashboard/store/reducers/tracked-times.reducer.ts","webpack:///src/app/modules/features/dashboard/store/selectors/tracked-times.selectors.ts","webpack:///src/app/modules/features/dashboard/store/reducers/company-projects.reducer.ts","webpack:///src/app/modules/features/dashboard/store/selectors/company-projects.selectors.ts","webpack:///src/app/modules/features/dashboard/store/selectors/dashboard.selectors.ts","webpack:///src/app/modules/features/dashboard/models/time-tracking.models.ts","webpack:///src/app/modules/features/dashboard/components/project-item/project-item.component.html","webpack:///src/app/modules/features/dashboard/components/project-item/project-item.component.ts","webpack:///src/app/modules/features/dashboard/components/project-filter-dialog/project-filter-dialog.component.html","webpack:///src/app/modules/features/dashboard/components/project-filter-dialog/project-filter-dialog.component.ts","webpack:///src/app/modules/features/dashboard/components/primary-button/directives/primary-button-text.directive.ts","webpack:///src/app/modules/features/dashboard/components/primary-button/components/primary-button/primary-button.component.html","webpack:///src/app/modules/features/dashboard/components/primary-button/components/primary-button/primary-button.component.ts","webpack:///src/app/modules/features/dashboard/components/filter/filter.component.html","webpack:///src/app/modules/features/dashboard/components/filter/filter.component.ts","webpack:///src/app/modules/features/dashboard/pipes/task-time.pipe.ts","webpack:///src/app/modules/features/dashboard/components/time-tracking/time-tracking.component.html","webpack:///src/app/modules/features/dashboard/dashboard.routing.module.ts","webpack:///src/app/modules/features/dashboard/components/time-tracking/time-tracking.component.ts","webpack:///src/app/modules/features/dashboard/services/task.service.ts","webpack:///src/app/modules/features/dashboard/store/effects/task-times.effects.ts","webpack:///src/app/modules/features/dashboard/store/effects/tasks.effects.ts","webpack:///src/app/modules/features/dashboard/store/effects/tracked-times.effects.ts","webpack:///node_modules/@angular/material-moment-adapter/__ivy_ngcc__/fesm2015/material-moment-adapter.js","webpack:///src/app/modules/features/dashboard/components/primary-button/primary-button.module.ts","webpack:///src/app/modules/features/dashboard/store/effects/company-projects.effects.ts","webpack:///src/app/modules/features/dashboard/dashboard.module.ts"],"names":["loadTasksAction","updateTasksAction","deleteTasksAction","clearTasksAction","loadTaskTimesAction","updateTaskTimesAction","deleteTaskTimesAction","clearTaskTimesAction","taskEntityAdapter","taskTimeEntityAdapter","taskEntityState","getInitialState","taskTimeEntityState","tasksReducer","state","tasks","upsertMany","removeMany","removeAll","taskTimesReducer","taskTimes","tasksSelectors","getSelectors","taskTimeSelectors","reducerTasks","action","reducerTaskTimes","loadTrackedTimesAction","updateTrackedTimesAction","deleteTrackedTimesAction","clearTrackedTimesAction","trackedTimeEntityAdapter","trackedTimeEntityState","trackedTimesReducer","trackedTimes","trackedTimesSelectors","reducerTrackedTimes","dashboard","selectTrackedTimesState","selectAllTrackedTimes","trackedTimesState","selectAll","filter","trackedTime","projectEntityAdapter","projects","companyProjectSelectors","reducerCompanyProjects","selectCompanyProjectsEntityState","companyProjects","selectCompanyProjectsEntities","selectEntities","selectCompanyProjects","selectAllCompanyProjects","map","project","deserialize","selectAllCompanyProjectIds","selectIds","selectCompanyProjectsByParentId","props","projectId","selectedProject","entities","parentProject","id","selectCompanyProjectById","selectTasksState","selectTaskTimesState","selectAllTaskIds","selectAllTasks","selectAllTaskTimes","selectTotalTaskTime","calculateTimeFromTaskTimes","taskTime","taskId","selectTrackedTimesWithTasks","activeProjects","workTypes","task","find","activeProject","times","sort","a","b","startTime","taskTimeDates","chain","groupBy","unix","format","mapValues","timeDates","invert","value","assigneeName","getAssigneeNameOfProject","userId","projectName","name","taskName","title","workType","assigneeId","createdTime","timeWorked","type","workTypeId","createdDate","parentProjectName","trackTime","dateCreated","selectAssignedWorkTypes","workTypeEntities","reduce","acc","selectAllMemberEntitiesFromProjects","companyId","totalMembers","company","members","forEach","member","Object","keys","memberId","assignee","lastname","endTime","pauseDuration","TimeTrackingType","ALL","INTERNAL","EXTERNAL","FilterMemberTypeKeys","values","MemberRole","EMPLOYEE","OWNER","SUPERVISOR","EXTERNALSUPERVISOR","DateFilterTypeKeys","translationKey","startMoment","now","clone","startOf","endMoment","endOf","trackEvent","TRACKED_TIME_FILTER_DATE_TODAY_CLICKED","subtract","TRACKED_TIME_FILTER_DATE_YESTERDAY_CLICKED","TRACKED_TIME_FILTER_DATE_LAST_WEEK_CLICKED","TRACKED_TIME_FILTER_DATE_LAST_MONTH_CLICKED","TRACKED_TIME_FILTER_DATE_CUSTOM_CLICKED","FilterKeys","PROJECT","MEMEBR","WORK_TYPE","DATE","ProjectItemComponent","store","folderClicked","checkedClicked","ProjectType","changes","this","project$","select","currentValue","pipe","switchMap","parent","of","projectType","FOLDER","emit","ProjectFilterDialogComponent","PrimaryButtonTextDirective","projectSortAndSearchHelper","data","dialogRef","trackingService","projectsFilter$","BehaviorSubject","searchKey","selectedParentProjectId","selectedProjects","selectedParentProjectId$","distinctUntilKeyChanged","selectedFilter","projects$","parentProjectId","combineLatest","selectedFilters","filteredProjects","defaultSearchCondition","length","proj","orderBy","element","toLowerCase","selectedParentProject$","mergeMap","selectedProjectsLength$","projectFilter","initalProjectFilter","next","searchInput","nativeElement","searchTerm","logSearchEvent","TRACKED_TIME_FILTER_PROJECT_SEARCH","folderId","selectedId","close","eventName","emitTrackingEvent","applyFilter","closeWithoutSaving","PrimaryButtonComponent","FilterComponent","TaskTimePipe","providesMenu","filterClosed","filterOpened","translateService","translatedKeyHours","instant","translatedKeyMinutes","duration","hours","Math","floor","asHours","minutes","asMinutes","drawer","$event","TimeTrackingComponent","DashboardRoutingModule","TaskService","TaskTimesEffects","TasksEffects","TrackedTimesEffects","routes","path","component","exportService","baseFileService","downloadService","alertService","dialog","TrackEventType","loading","memberType","displayedColumns","columnMappers","filtersKeysMapper","clearFilterMappers","trackEventCountMapper","TRACKED_TIME_FILTER_ASSIGNEE_SELECTED","TRACKED_TIME_FILTER_PROJECT_SELECTED","TRACKED_TIME_FILTER_WORK_TYPE_SELECTED","TRACKED_TIME_FILTER_DATE_CUSTOM_RANGE","destroy$","Subject","selectTrackedTimesWithTasks$","totalTasksTime$","totalMembersAssigned$","selectedFilters$","memberFilter","selectedMembers","workTypeFilter","selectedWorkTypes","dateFilter","selectedDateFilter","selectedDates","projectsFilter","membersFilter$","asObservable","debounceTime","filters","shareReplay","membersOfAllProjects$","filteredMembers","filterCondition","searchInMember","membersResultsNotFoundText$","selectedMembersText$","selectedMember","moreText","selectedMembersLength$","assignedWorkTypes$","selectedWorkTypesFilter$","selectedWorkTypesText$","assignedWorkTypes","selectedWorkTypesLength$","selectedDates$","selectedDatesText$","selectedDatesLength$","selectedProjectsText$","allProjects","startDateControl","endDateControl","filteredTaskTimes$","transformFiltersToTrackedTimeKeys","distinctUntilChanged","filteredResults","isTrackedTImeFilterApplicable","result","time","includes","totalTimeWorked$","takeUntil","current","isAnyFilterSelected$","lengthArray","sum","initSubscriptions","subscribe","setValue","startDate","endDate","res","open","width","height","autoFocus","afterClosed","take","toPromise","logSelectEvent","filterState","index","item","row","expandedElementId","selectedEntry","matTasks","setTimeout","paginator","complete","dispatch","sortingDataAccessor","sortHeaderId","initTaskTimesSubscription","selectedType","TRACKED_TIME_FILTER_ASSIGNEE_SEARCH","dateKey","controlName","dateSelectionValue","filterType","split","set","selectedIndividualFilters","get","isEmpty","payload","String","role","RegExp","test","mappedFilters","every","key","some","isBetween","resourceId","exportFilters","filterValue","interval","innerCompany","createExport","resourceType","pathMatch","authGuardPipe","forChild","aFireStore","projectIds","loadChunks","collectionName","fieldPath","updateAction","deleteAction","taskIds","documentPath","chunks","chunk","getChunkedDocuments","taskChunks","transformTasksToActions","collection","ref","where","stateChanges","catchError","error","console","log","updatedDocs","change","doc","deletedDocs","actions$","taskService","loadTasksAndTimes$","tap","selectedIds","getAllTasks","getAllTaskTimes","getAllTrackedTimes","MAT_MOMENT_DATE_ADAPTER_OPTIONS","providedIn","factory","useUtc","range","valueFunction","valuesArray","Array","i","MomentDateAdapter","PrimaryButtonModule","CompanyProjectsEffects","DashboardModule","dateLocale","_options","super","setLocale","locale","momentLocaleData","localeData","_localeData","firstDayOfWeek","longMonths","months","shortMonths","monthsShort","dates","createDate","longDaysOfWeek","weekdays","shortDaysOfWeek","weekdaysShort","narrowDaysOfWeek","weekdaysMin","date","year","month","day","style","daysInMonth","Error","_createMoment","isValid","parseFormat","displayFormat","years","add","days","Date","isDateInstance","ISO_8601","obj","isMoment","invalid","strict","utc","ɵfac","t","ɵprov","token","projectService","loadCompanyProjects","s","memberRole","getProjectStatusChangesByCompanyId","getProjectsListeners","documents","getDispatchEventsOfProjectsByCompanyId","documentChanges","addedOrChangedDocs","document","projectDoc","from","DASHBOARD_FORMATS","parse","dateInput","display","monthYearLabel","dateA11yLabel","monthYearA11yLabel","translate","browserLang","getBrowserLang","moment","provide","useClass","deps","useValue","forFeature"],"mappings":"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","file":"x","sourcesContent":["import { createAction, props } from '@ngrx/store';\nimport { Task, TaskTime } from 'domain-entities';\n\nexport const loadTasksAction = createAction('[Task] Loading all tasks and its times');\n\nexport const updateTasksAction = createAction('[Task] Update tasks', props<{ tasks: Task[] }>());\n\nexport const deleteTasksAction = createAction('[Task] Delete tasks', props<{ tasks: string[] }>());\n\nexport const clearTasksAction = createAction('[Task] Clear all tasks');\n\nexport const loadTaskTimesAction = createAction('[Task Time] Loading all task times');\n\nexport const updateTaskTimesAction = createAction('[Task Time] Update task times', props<{ taskTimes: TaskTime[] }>());\n\nexport const deleteTaskTimesAction = createAction('[Task Time] Delete task times', props<{ taskTimes: string[] }>());\n\nexport const clearTaskTimesAction = createAction('[Task Time] Clear all tasks times');\n","import { createEntityAdapter, EntityState } from '@ngrx/entity';\nimport { Action, createReducer, on } from '@ngrx/store';\nimport * as fromTasks from '../actions/tasks.actions';\nimport { Task, TaskTime } from 'domain-entities';\n\nconst taskEntityAdapter = createEntityAdapter<Task>();\nconst taskTimeEntityAdapter = createEntityAdapter<TaskTime>();\n\nexport const taskEntityState = taskEntityAdapter.getInitialState();\nexport const taskTimeEntityState = taskTimeEntityAdapter.getInitialState();\n\nconst tasksReducer = createReducer(taskEntityState,\n\ton(fromTasks.updateTasksAction, (state, { tasks }) => {\n\t\treturn taskEntityAdapter.upsertMany(tasks, state);\n\t}),\n\ton(fromTasks.deleteTasksAction, (state, { tasks }) => {\n\t\treturn taskEntityAdapter.removeMany(tasks, state);\n\t}),\n\ton(fromTasks.clearTasksAction, (state) => {\n\t\treturn taskEntityAdapter.removeAll(state);\n\t}),\n);\n\nconst taskTimesReducer = createReducer(taskTimeEntityState,\n\ton(fromTasks.updateTaskTimesAction, (state, { taskTimes }) => {\n\t\treturn taskTimeEntityAdapter.upsertMany(taskTimes, state);\n\t}),\n\ton(fromTasks.deleteTaskTimesAction, (state, { taskTimes }) => {\n\t\treturn taskTimeEntityAdapter.removeMany(taskTimes, state);\n\t}),\n\ton(fromTasks.clearTaskTimesAction, (state) => {\n\t\treturn taskTimeEntityAdapter.removeAll(state);\n\t}),\n);\n\nexport const tasksSelectors = taskEntityAdapter.getSelectors();\nexport const taskTimeSelectors = taskTimeEntityAdapter.getSelectors();\n\n\n// tslint:disable-next-line:typedef\nexport function reducerTasks(state: EntityState<Task> | undefined, action: Action) {\n\treturn tasksReducer(state, action);\n}\n\n// tslint:disable-next-line:typedef\nexport function reducerTaskTimes(state: EntityState<TaskTime> | undefined, action: Action) {\n\treturn taskTimesReducer(state, action);\n}\n\n\n\n","import { createAction, props } from '@ngrx/store';\nimport { TrackedTime } from 'domain-entities';\n\nexport const loadTrackedTimesAction = createAction('[Tracked Times] Loading all Tracked Times');\n\nexport const updateTrackedTimesAction = createAction('[Tracked Times] Update Tracked Times', props<{ trackedTimes: TrackedTime[] }>());\n\nexport const deleteTrackedTimesAction = createAction('[Tracked Times] Delete Tracked Times', props<{ trackedTimes: string[] }>());\n\nexport const clearTrackedTimesAction = createAction('[Tracked Times] Clear all Tracked Times');\n","import { createEntityAdapter, EntityState } from '@ngrx/entity';\nimport { Action, createReducer, on } from '@ngrx/store';\nimport * as fromTrackedTimes from '../actions/tracked-times.actions';\nimport { TrackedTime } from 'domain-entities';\n\nconst trackedTimeEntityAdapter = createEntityAdapter<TrackedTime>();\n\nexport const trackedTimeEntityState = trackedTimeEntityAdapter.getInitialState();\n\nconst trackedTimesReducer = createReducer(trackedTimeEntityState,\n\ton(fromTrackedTimes.updateTrackedTimesAction, (state, { trackedTimes }) => {\n\t\treturn trackedTimeEntityAdapter.upsertMany(trackedTimes, state);\n\t}),\n\ton(fromTrackedTimes.deleteTrackedTimesAction, (state, { trackedTimes }) => {\n\t\treturn trackedTimeEntityAdapter.removeMany(trackedTimes, state);\n\t}),\n\ton(fromTrackedTimes.clearTrackedTimesAction, (state) => {\n\t\treturn trackedTimeEntityAdapter.removeAll(state);\n\t}),\n);\n\nexport const trackedTimesSelectors = trackedTimeEntityAdapter.getSelectors();\n\n// tslint:disable-next-line:typedef\nexport function reducerTrackedTimes(state: EntityState<TrackedTime> | undefined, action: Action) {\n\treturn trackedTimesReducer(state, action);\n}\n\n\n","import { createFeatureSelector, createSelector } from '@ngrx/store';\nimport { DashboardState } from '../../../../../store/state/DashboardState';\nimport { trackedTimesSelectors } from '../reducers/tracked-times.reducer';\n\nconst dashboard = createFeatureSelector<DashboardState>('dashboard');\n\nexport const selectTrackedTimesState = createSelector(dashboard, state => state.trackedTimes);\n\nexport const selectAllTrackedTimes = createSelector(\n\tselectTrackedTimesState,\n\t(trackedTimesState) => {\n\t\tconst trackedTimes = trackedTimesSelectors.selectAll(trackedTimesState);\n\n\t\treturn trackedTimes.filter(trackedTime => trackedTime.state !== 'deleted');\n\t},\n);\n","import { createEntityAdapter, EntityState } from '@ngrx/entity';\nimport { Action, createReducer, on } from '@ngrx/store';\nimport * as fromCompanyProjects from '../actions/company-projects.actions';\nimport { Project } from 'domain-entities';\n\nconst projectEntityAdapter = createEntityAdapter<Project>();\n\nexport const trackedTimeEntityState = projectEntityAdapter.getInitialState();\n\nconst trackedTimesReducer = createReducer(trackedTimeEntityState,\n\ton(fromCompanyProjects.updateCompanyProjectsAction, (state, { projects }) => {\n\t\treturn projectEntityAdapter.upsertMany(projects, state);\n\t}),\n\ton(fromCompanyProjects.deleteCompanyProjectsAction, (state, { projects }) => {\n\t\treturn projectEntityAdapter.removeMany(projects, state);\n\t}),\n\ton(fromCompanyProjects.clearCompanyProjectsAction, (state) => {\n\t\treturn projectEntityAdapter.removeAll(state);\n\t}),\n);\n\nexport const companyProjectSelectors = projectEntityAdapter.getSelectors();\n\n// tslint:disable-next-line:typedef\nexport function reducerCompanyProjects(state: EntityState<Project> | undefined, action: Action) {\n\treturn trackedTimesReducer(state, action);\n}\n\n\n","import { createFeatureSelector, createSelector } from '@ngrx/store';\nimport { DashboardState } from '../../../../../store/state/DashboardState';\nimport { companyProjectSelectors } from '../reducers/company-projects.reducer';\nimport { Project } from '../../../../../shared/models/project.model';\n\nconst dashboard = createFeatureSelector<DashboardState>('dashboard');\n\nexport const selectCompanyProjectsEntityState = createSelector(dashboard, state => state.companyProjects);\n\nexport const selectCompanyProjectsEntities = createSelector(\n\tselectCompanyProjectsEntityState,\n\tcompanyProjectSelectors.selectEntities,\n);\n\nexport const selectCompanyProjects = createSelector(\n\tselectCompanyProjectsEntityState,\n\tcompanyProjectSelectors.selectAll,\n);\n\nexport const selectAllCompanyProjects = createSelector(\n\tselectCompanyProjects,\n\t(projects) => {\n\t\treturn projects ? projects.map(project => new Project().deserialize(project)) : [];\n\t},\n);\n\nexport const selectAllCompanyProjectIds = createSelector(\n\tselectCompanyProjectsEntityState,\n\tcompanyProjectSelectors.selectIds,\n);\n\nexport const selectCompanyProjectsByParentId = createSelector(\n\tselectCompanyProjectsEntityState,\n\tselectAllCompanyProjects,\n\t(state, projects, props) => {\n\t\tif (!props.projectId) {\n\t\t\treturn projects;\n\t\t}\n\n\t\tconst selectedProject = state.entities[props.projectId];\n\t\treturn projects.filter(project => project.parentProject === selectedProject.id);\n\t},\n);\n\nexport const selectCompanyProjectById = createSelector(\n\tselectCompanyProjectsEntities,\n\t(entities, props) => {\n\t\treturn entities[props.projectId];\n\t},\n);\n","import { createFeatureSelector, createSelector } from '@ngrx/store';\nimport { DashboardState } from '../../../../../store/state/DashboardState';\nimport { tasksSelectors, taskTimeSelectors } from '../reducers/tasks.reducer';\nimport { Task, TaskTime, TrackedTime, WorkType } from 'domain-entities';\nimport { Project } from '../../../../../shared/models/project.model';\nimport { selectAllTrackedTimes } from './tracked-times.selectors';\nimport { selectAllWorkTypeEntities, selectCompanyId } from '../../../../../store/selectors/app.selectors';\nimport { chain } from 'lodash';\nimport moment from 'moment';\nimport { selectAllCompanyProjects, selectCompanyProjectsEntities } from './company-projects.selectors';\n\nexport interface TaskTimeUI extends TaskTime {\n\tassigneeName: string;\n}\n\nexport interface TrackedTimeUI {\n\tid: string;\n\tprojectId: string;\n\tassigneeId: string;\n\tworkTypeId: string;\n\tcreatedDate: string;\n\tprojectName: string;\n\tparentProjectName: string;\n\ttaskName: string;\n\tworkType: string;\n\tassigneeName: string;\n\tcreatedTime: number;\n\ttimeWorked: number;\n\ttaskId: string;\n\ttimes: Array<TaskTimeUI | TrackedTime>;\n\ttaskTimeDates: { [id: string]: string };\n\ttype: 'task' | 'trackedTime';\n}\n\nconst dashboard = createFeatureSelector<DashboardState>('dashboard');\n\nexport const selectTasksState = createSelector(dashboard, state => state.tasks);\nexport const selectTaskTimesState = createSelector(dashboard, state => state.taskTimes);\n\n\nexport const selectAllTaskIds = createSelector(\n\tselectTasksState,\n\tstate => tasksSelectors.selectIds(state) as string[],\n);\n\nexport const selectAllTasks = createSelector(\n\tselectTasksState,\n\ttasksSelectors.selectAll,\n);\n\nexport const selectAllTaskTimes = createSelector(\n\tselectTaskTimesState,\n\ttaskTimeSelectors.selectAll,\n);\n\nexport const selectTaskTimesByTaskId = createSelector(\n\tselectTaskTimesState,\n\t(state, props) => {\n\t\tconst taskTimes = taskTimeSelectors.selectAll(state).filter(taskTime => props.taskId === taskTime.taskId);\n\t\treturn calculateTimeFromTaskTimes(taskTimes);\n\t},\n);\n\nexport const selectTotalTaskTime = createSelector(\n\tselectAllTaskTimes,\n\tselectAllTrackedTimes,\n\t(taskTimes, trackedTimes) => {\n\t\tconst totalTaskTimes = calculateTimeFromTaskTimes(taskTimes) as number;\n\t\tconst totalTrackedTimes = calculateTimeFromTaskTimes(trackedTimes) as number;\n\t\treturn totalTaskTimes + totalTrackedTimes;\n\t},\n);\n\nexport const selectTrackedTimesWithTasks = createSelector(\n\tselectAllTasks,\n\tselectCompanyProjectsEntities,\n\tselectAllTaskTimes,\n\tselectAllTrackedTimes,\n\tselectAllWorkTypeEntities,\n\t(tasks, activeProjects, taskTimes, trackedTimes, workTypes) => {\n\t\tconst transformedTasks = tasks\n\t\t\t.filter(task => taskTimes.find(taskTime => taskTime.taskId === task.id))\n\t\t\t.map(task => {\n\t\t\t\tconst activeProject = activeProjects[task.projectId] ?\n\t\t\t\t\tnew Project().deserialize(activeProjects[task.projectId])\n\t\t\t\t\t: null;\n\t\t\t\tconst parentProject = activeProjects[activeProject.parentProject] ?\n\t\t\t\t\tnew Project().deserialize(activeProjects[activeProject.parentProject])\n\t\t\t\t\t: null;\n\n\t\t\t\treturn transformToTrackedTimeUI(task, activeProject, taskTimes, parentProject);\n\t\t\t});\n\n\t\tconst transformedTrackedTimes = trackedTimes.map(trackTime => {\n\t\t\tconst activeProject = activeProjects[trackTime.projectId] ?\n\t\t\t\tnew Project().deserialize(activeProjects[trackTime.projectId])\n\t\t\t\t: null;\n\t\t\tconst parentProject = activeProjects[activeProject.parentProject] ?\n\t\t\t\tnew Project().deserialize(activeProjects[activeProject.parentProject])\n\t\t\t\t: null;\n\n\t\t\tconst selectedWorkType = workTypes[trackTime.workTypeId];\n\t\t\treturn transformTrackedTimeToTrackedTimeUI(trackTime, activeProject, selectedWorkType, parentProject);\n\t\t});\n\n\t\treturn [...transformedTasks, ...transformedTrackedTimes];\n\t},\n);\n\nexport const selectAssignedWorkTypes = createSelector(\n\tselectAllTrackedTimes,\n\tselectAllWorkTypeEntities,\n\t(trackedTimes, workTypeEntities) => {\n\t\treturn trackedTimes.reduce((acc, trackedTime) => {\n\t\t\tif (trackedTime.workTypeId && workTypeEntities[trackedTime.workTypeId]) {\n\t\t\t\tacc[trackedTime.workTypeId] = workTypeEntities[trackedTime.workTypeId];\n\t\t\t}\n\t\t\treturn acc;\n\t\t}, {});\n\t},\n);\n\nexport const selectAllMemberEntitiesFromProjects = createSelector(\n\tselectAllCompanyProjects,\n\tselectCompanyId,\n\tselectTrackedTimesWithTasks,\n\t(projects, companyId, taskTimes) => {\n\t\tconst totalMembers = projects.reduce((acc, project) => {\n\t\t\tif (project.company !== companyId) {\n\t\t\t\treturn acc;\n\t\t\t}\n\n\t\t\tproject.members.forEach(member => {\n\t\t\t\tacc[member.id] = member;\n\t\t\t});\n\n\t\t\treturn acc;\n\t\t}, {});\n\n\t\tObject.keys(totalMembers).forEach(memberId => {\n\t\t\tif (taskTimes.find(taskTime => taskTime.assigneeId === memberId)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tdelete totalMembers[memberId];\n\t\t});\n\n\t\treturn totalMembers;\n\t},\n);\n\nfunction getAssigneeNameOfProject(project: Project, assigneeId: string): string {\n\tif (!assigneeId) {\n\t\treturn '-';\n\t}\n\n\tconst assignee = project.members.find(member => member.id === assigneeId);\n\treturn assignee ? `${assignee.name} ${assignee.lastname}` : '-';\n}\n\nfunction calculateTimeFromTaskTimes(taskTimes: Array<TaskTime | TrackedTime>): number {\n\treturn taskTimes.reduce((acc, taskTime: TaskTime) => {\n\t\tacc += ((taskTime.endTime - taskTime.startTime) - ((taskTime as TrackedTime).pauseDuration || 0));\n\t\treturn acc;\n\t}, 0);\n}\n\nfunction transformToTrackedTimeUI(\n\ttask: Task,\n\tactiveProject: Project,\n\ttaskTimes: TaskTime[],\n\tparentProject: Project,\n): TrackedTimeUI {\n\tlet times = taskTimes.filter(taskTime => task.id === taskTime.taskId).sort((a, b) => a.startTime - b.startTime);\n\tconst taskTimeDates = chain(times)\n\t\t.groupBy(taskTime => moment.unix(taskTime.startTime).format('YYYY-MM-DD'))\n\t\t.mapValues(timeDates => timeDates[0].id)\n\t\t.invert()\n\t\t.value();\n\n\ttimes = times.map(taskTime => {\n\t\treturn {\n\t\t\t...taskTime,\n\t\t\tassigneeName: getAssigneeNameOfProject(activeProject, taskTime.userId),\n\t\t};\n\t});\n\n\treturn {\n\t\tid: task.id,\n\t\tprojectName: activeProject.name,\n\t\ttaskName: task.title,\n\t\tworkType: '-',\n\t\tassigneeName: getAssigneeNameOfProject(activeProject, task.assigneeId),\n\t\tcreatedTime: times[0].startTime * 1000,\n\t\ttimeWorked: calculateTimeFromTaskTimes(times),\n\t\ttaskId: task.id,\n\t\ttimes: [...times] as TaskTimeUI[],\n\t\ttype: 'task',\n\t\ttaskTimeDates: taskTimeDates,\n\t\tprojectId: activeProject.id,\n\t\tassigneeId: task.assigneeId,\n\t\tworkTypeId: null,\n\t\tcreatedDate: moment.unix(times[0].startTime).format('YYYY-MM-DD'),\n\t\tparentProjectName: parentProject ? parentProject.name : null,\n\t};\n}\n\nfunction transformTrackedTimeToTrackedTimeUI(\n\ttrackedTime: TrackedTime,\n\tactiveProject: Project,\n\tworkType: WorkType,\n\tparentProject: Project,\n): TrackedTimeUI {\n\tconst dateCreated = moment.unix(trackedTime.startTime).format('YYYY-MM-DD');\n\n\treturn {\n\t\tid: trackedTime.id,\n\t\tprojectName: activeProject.name,\n\t\ttaskName: '-',\n\t\tworkType: workType ? workType.name : '-',\n\t\tassigneeName: getAssigneeNameOfProject(activeProject, trackedTime.userId),\n\t\tcreatedTime: trackedTime.startTime * 1000,\n\t\ttimeWorked: calculateTimeFromTaskTimes([trackedTime]),\n\t\ttaskId: trackedTime.taskId,\n\t\ttimes: [trackedTime],\n\t\ttype: 'trackedTime',\n\t\ttaskTimeDates: { [trackedTime.id]: dateCreated },\n\t\tprojectId: activeProject.id,\n\t\tassigneeId: trackedTime.userId,\n\t\tworkTypeId: workType ? workType.id : null,\n\t\tcreatedDate: dateCreated,\n\t\tparentProjectName: parentProject ? parentProject.name : null,\n\t};\n}\n","import { MemberRole } from 'domain-entities';\nimport { TrackEventType } from '../../../../shared/models/track-event.type';\nimport { Moment } from 'moment';\n\nexport enum TimeTrackingType {\n\tALL = 'all',\n\tINTERNAL = 'internal',\n\tEXTERNAL = 'external'\n}\n\nexport interface WorkTypeFilterType {\n\tselectedWorkTypes: { [id: string]: string };\n}\n\nexport interface DateFilterType {\n\tselectedDateFilter: DateFilter;\n\tselectedDates: {\n\t\tstartDate: string,\n\t\tendDate: string\n\t};\n}\n\nexport interface MemberFilter {\n\ttype: TimeTrackingType;\n\tsearchKey: string;\n\tselectedMembers: { [id: string]: string };\n}\n\nexport interface DateFilter {\n\tname: string;\n\ttranslationKey: string;\n\tstartMoment?: (now: Moment) => Moment;\n\tendMoment?: (now: Moment) => Moment;\n\ttrackEvent: string;\n}\n\nexport interface ProjectsFilter {\n\tsearchKey: string;\n\tselectedParentProjectId: string;\n\tselectedProjects: { [id: string]: string };\n}\n\nexport interface TimeTrackingFilter {\n\tmemberFilter: MemberFilter;\n\tworkTypeFilter: WorkTypeFilterType;\n\tdateFilter: DateFilterType;\n\tprojectsFilter: ProjectsFilter;\n}\n\n\nexport const FilterMemberTypeKeys = {\n\t'all': [\n\t\t...Object.values(MemberRole),\n\t],\n\t'internal': [\n\t\tMemberRole.EMPLOYEE,\n\t\tMemberRole.OWNER,\n\t\tMemberRole.SUPERVISOR,\n\t],\n\t'external': [\n\t\tMemberRole.EXTERNAL,\n\t\tMemberRole.EXTERNALSUPERVISOR,\n\t],\n};\n\nexport const DateFilterTypeKeys: { [id: string]: DateFilter } = {\n\t'today': {\n\t\tname: 'today',\n\t\ttranslationKey: 'today',\n\t\tstartMoment: (now: Moment) => now.clone().startOf('day'),\n\t\tendMoment: (now: Moment) => now.clone().endOf('day'),\n\t\ttrackEvent: TrackEventType.TRACKED_TIME_FILTER_DATE_TODAY_CLICKED,\n\t},\n\t'yesterday': {\n\t\tname: 'yesterday',\n\t\ttranslationKey: 'yesterday',\n\t\tstartMoment: (now: Moment) => now.clone().subtract(1, 'days').startOf('day'),\n\t\tendMoment: (now: Moment) => now.clone().subtract(1, 'days').endOf('day'),\n\t\ttrackEvent: TrackEventType.TRACKED_TIME_FILTER_DATE_YESTERDAY_CLICKED,\n\t},\n\t'lastWeek': {\n\t\tname: 'lastWeek',\n\t\ttranslationKey: 'last-week',\n\t\tstartMoment: (now: Moment) => now.clone().subtract(1, 'weeks').startOf('isoWeek'),\n\t\tendMoment: (now: Moment) => now.clone().subtract(1, 'weeks').endOf('isoWeek'),\n\t\ttrackEvent: TrackEventType.TRACKED_TIME_FILTER_DATE_LAST_WEEK_CLICKED,\n\t},\n\t'lastMonth': {\n\t\tname: 'lastMonth',\n\t\ttranslationKey: 'last-month',\n\t\tstartMoment: (now: Moment) => now.clone().subtract(1, 'months').startOf('month'),\n\t\tendMoment: (now: Moment) => now.clone().subtract(1, 'months').endOf('month'),\n\t\ttrackEvent: TrackEventType.TRACKED_TIME_FILTER_DATE_LAST_MONTH_CLICKED,\n\t},\n\t'custom': {\n\t\tname: 'custom',\n\t\ttranslationKey: 'custom',\n\t\ttrackEvent: TrackEventType.TRACKED_TIME_FILTER_DATE_CUSTOM_CLICKED,\n\t},\n};\n\nexport enum FilterKeys {\n\tPROJECT = 'project',\n\tMEMEBR = 'member',\n\tWORK_TYPE = 'workType',\n\tDATE = 'date'\n}\n","<ng-container *ngIf=\"(project$ | async) as projectWithParent\">\n\t<div *ngIf=\"projectWithParent.parent && displayParent\"\n\t\t\t class=\"cn-filter__project-item--parent-folder d-flex align-items-center\">\n\t\t<mat-icon fontSet=\"material-icons-sharp\">folder</mat-icon>\n\t\t<div>{{projectWithParent.parent.name}}</div>\n\t</div>\n\t<div (click)=\"itemClicked(projectWithParent.project)\"\n\t\t\t [ngClass]=\"{pointer: projectWithParent.project.projectType === ProjectType.FOLDER}\" class=\"d-flex\">\n\t\t<div *ngIf=\"projectWithParent.project.projectType === ProjectType.FOLDER\"\n\t\t\t\t class=\"mr-2 cn-filter__project-item--icon\">\n\t\t\t<mat-icon fontSet=\"material-icons-sharp\">folder\n\t\t\t</mat-icon>\n\t\t</div>\n\t\t<div *ngIf=\"projectWithParent.project.projectType !== ProjectType.FOLDER\"\n\t\t\t\t class=\"mr-1 cn-filter__project-item--icon align-self-center\">\n\t\t\t<app-indicator [project]=\"projectWithParent.project\"></app-indicator>\n\t\t</div>\n\t\t<div class=\"overflow-hidden\">\n\t\t\t<div class=\"cn-filter__project-item--title text-truncate\">\n\t\t\t\t{{ projectWithParent.project.name }}\n\t\t\t</div>\n\t\t\t<div *ngIf=\"projectWithParent.project.orderNumber\" class=\"cn-filter__project-item--id text-truncate\">\n\t\t\t\t{{ projectWithParent.project.orderNumber }}\n\t\t\t</div>\n\t\t\t<div\n\t\t\t\t*ngIf=\"projectWithParent.project.street || projectWithParent.project.zipcode || projectWithParent.project.city\"\n\t\t\t\tclass=\"cn-filter__project-item--address text-truncate\">\n\t\t\t\t{{ projectWithParent.project.street }}\n\t\t\t\t, {{ projectWithParent.project.zipcode }} {{ projectWithParent.project.city }}\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\" ml-auto mr-3\">\n\t\t\t<mat-icon *ngIf=\"projectWithParent.project.projectType === ProjectType.FOLDER\"\n\t\t\t\t\t\t\t\tclass=\"pointer\">\n\t\t\t\tchevron_right\n\t\t\t</mat-icon>\n\t\t\t<div (click)=\"toggleProjectSelection()\" appEventStopPropagation class=\"pointer\">\n\t\t\t\t<mat-checkbox *ngIf=\"projectWithParent.project.projectType !== ProjectType.FOLDER\"\n\t\t\t\t\t\t\t\t\t\t\t[checked]=\"checked\" class=\"no-events\"\n\t\t\t\t></mat-checkbox>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</ng-container>\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnChanges, Output, SimpleChanges } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { Project } from '../../../../../shared/models/project.model';\nimport { AppState } from '../../../../../store/state/app.state';\nimport { Store } from '@ngrx/store';\nimport { map, switchMap } from 'rxjs/operators';\nimport { selectCompanyProjectById } from '../../store/selectors/company-projects.selectors';\nimport { ProjectType } from '../../../../../shared/models/project.type';\n\ninterface ProjectWithParent {\n\tproject: Project;\n\tparent?: Project;\n}\n\n@Component({\n\tselector: 'app-project-item',\n\ttemplateUrl: './project-item.component.html',\n\tstyleUrls: ['./project-item.component.scss'],\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProjectItemComponent implements OnChanges {\n\n\t@Input() projectId: string;\n\t@Input() checked: boolean;\n\t@Input() displayParent: boolean;\n\n\t@Output() folderClicked = new EventEmitter<void>();\n\t@Output() checkedClicked = new EventEmitter<void>();\n\n\tproject$: Observable<ProjectWithParent>;\n\n\tProjectType = ProjectType;\n\n\tconstructor(\n\t\tprivate readonly store: Store<AppState>,\n\t) {\n\t}\n\n\tngOnChanges(changes: SimpleChanges): void {\n\t\tif (!changes.projectId) {\n\t\t\treturn;\n\t\t}\n\t\tthis.project$ = this.store.select(selectCompanyProjectById, { projectId: changes.projectId.currentValue }).pipe(switchMap(project => {\n\t\t\tif (!project.parentProject) {\n\t\t\t\treturn of({ project: project });\n\t\t\t}\n\t\t\treturn this.store.select(selectCompanyProjectById, { projectId: project.parentProject }).pipe(map(parent => {\n\t\t\t\treturn { project, parent };\n\t\t\t}));\n\t\t}));\n\t}\n\n\titemClicked(project: Project): void {\n\t\tif (!(project.projectType === ProjectType.FOLDER)) {\n\t\t\treturn;\n\t\t}\n\t\tthis.folderClicked.emit();\n\t}\n\n\ttoggleProjectSelection(): void {\n\t\tthis.checkedClicked.emit();\n\t}\n\n}\n","<div class=\"d-flex justify-content-between align-items-center py-3\">\n\t<button (click)=\"applyFilter()\" mat-flat-button\n\t\t\t\t\tcolor=\"primary\">{{ 'dashboard.timeTracking.filters.apply' | translate }}</button>\n\t<mat-icon class=\"pointer\" (click)=\"closeWithoutSaving()\">close</mat-icon>\n</div>\n<div *ngIf=\"(projectsFilter$ | async) as projectsFilter\" appEventStopPropagation\n\t\t class=\"cn-filter\">\n\t<div *ngIf=\"!projectsFilter.selectedParentProjectId\" class=\"cn-search__container row no-gutters align-items-center\">\n\t\t<div class=\"col\">\n\t\t\t<input #projectsSearch (keyup)=\"onProjectSearchChange(projectsSearch.value)\" class=\"cn-search__input\" matInput\n\t\t\t\t\t\t [placeholder]=\"'dashboard.timeTracking.filters.search' | translate\"\n\t\t\t>\n\t\t</div>\n\t\t<div (click)=\"clearFilter()\"\n\t\t\t\t *ngIf=\"selectedProjectsLength$ | async\"\n\t\t\t\t class=\"col-auto cn-filter__clear font-weight-bold color-primary\">\n\t\t\t{{ 'dashboard.timeTracking.filters.clearSelections' | translate }}\n\t\t</div>\n\t</div>\n\t<div class=\"cn-filter__project-item--container\">\n\n\t\t<div *ngIf=\"(selectedParentProject$ | async) as selectedParentProject\" (click)=\"folderClicked()\"\n\t\t\t\t class=\"cn-filter__project-item folder text-truncate d-flex align-items-center pointer\">\n\t\t\t<mat-icon class=\"pointer\">keyboard_arrow_left</mat-icon>\n\t\t\t<mat-icon class=\"cn-filter__project-item--icon mr-2\" fontSet=\"material-icons-sharp\">folder</mat-icon>\n\t\t\t<div class=\"cn-filter__project-item--title text-truncate\">\n\t\t\t\t{{ selectedParentProject.name }}\n\t\t\t</div>\n\t\t</div>\n\t\t<cdk-virtual-scroll-viewport class=\"cn-filter__scroll-viewport\" itemSize=\"83\">\n\t\t\t<div *cdkVirtualFor=\"let companyProject of (projects$ | async)\"\n\t\t\t\t\t class=\"cn-filter__project-item d-flex w-100 align-items-center\">\n\t\t\t\t<div class=\"w-100\">\n\t\t\t\t\t<app-project-item\n\t\t\t\t\t\t(folderClicked)=\"folderClicked(companyProject.id)\"\n\t\t\t\t\t\t(checkedClicked)=\"toggleProjectSelection(companyProject.id)\"\n\t\t\t\t\t\t[displayParent]=\"!(selectedParentProject$ | async) && !!projectsFilter.searchKey\"\n\t\t\t\t\t\t[projectId]=\"companyProject.id\"\n\t\t\t\t\t\t[checked]=\"!!projectsFilter.selectedProjects[companyProject.id]\"></app-project-item>\n\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div *ngIf=\"(projects$ | async).length === 0\" class=\"cn-filter__empty-text\">\n\t\t\t\t{{ 'dashboard.timeTracking.filters.resultsNotFound' | translate }}\n\t\t\t</div>\n\t\t</cdk-virtual-scroll-viewport>\n\t</div>\n</div>\n","import { Component, ElementRef, Inject, Input, ViewChild } from '@angular/core';\nimport { AppState } from '../../../../../store/state/app.state';\nimport { Store } from '@ngrx/store';\nimport { selectCompanyProjectById, selectCompanyProjectsByParentId } from '../../store/selectors/company-projects.selectors';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { distinctUntilKeyChanged, map, mergeMap, switchMap } from 'rxjs/operators';\nimport { orderBy } from 'lodash';\nimport { ProjectSortAndSearchHelper } from '../../../../../work/project/project-sort-and-search-helper.service';\nimport { FilterKeys, ProjectsFilter } from '../../models/time-tracking.models';\nimport { MatDialogRef } from '@angular/material';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { TrackEventType } from '../../../../../shared/models/track-event.type';\nimport { TrackingDispatcherService } from '../../../../../shared/tracking/tracking-dispatcher.service';\n\n@Component({\n\tselector: 'app-project-filter-dialog',\n\ttemplateUrl: './project-filter-dialog.component.html',\n\tstyleUrls: ['./project-filter-dialog.component.scss', '../time-tracking/time-tracking.component.scss'],\n})\nexport class ProjectFilterDialogComponent {\n\n\t@Input() selectedProjectsInput: string[];\n\n\t@ViewChild('projectsSearch', { static: false }) searchInput: ElementRef;\n\n\tprojectsFilter$ = new BehaviorSubject<ProjectsFilter>({\n\t\tsearchKey: '',\n\t\tselectedParentProjectId: null,\n\t\tselectedProjects: {},\n\t});\n\n\tFilterKeys = FilterKeys;\n\n\tselectedParentProjectId$ = this.projectsFilter$\n\t\t.pipe(\n\t\t\tdistinctUntilKeyChanged('selectedParentProjectId'),\n\t\t\tmap(selectedFilter => selectedFilter.selectedParentProjectId),\n\t\t);\n\n\tprojects$ = this.selectedParentProjectId$.pipe(\n\t\tswitchMap(parentProjectId => combineLatest([\n\t\t\t\tthis.store.select(selectCompanyProjectsByParentId, { projectId: parentProjectId }),\n\t\t\t\tthis.projectsFilter$,\n\t\t\t]).pipe(\n\t\t\tmap(([projects, selectedFilters]) => {\n\t\t\t\tlet filteredProjects = projects;\n\t\t\t\tif (!selectedFilters.selectedParentProjectId) {\n\t\t\t\t\tfilteredProjects = projects\n\t\t\t\t\t\t.filter(project => this.projectSortAndSearchHelper.defaultSearchCondition(project, selectedFilters.searchKey));\n\t\t\t\t}\n\t\t\t\tif (!selectedFilters.searchKey && selectedFilters.searchKey.length > 0) {\n\t\t\t\t\tfilteredProjects = filteredProjects.filter(proj => !proj.parentProject);\n\t\t\t\t}\n\t\t\t\treturn orderBy(filteredProjects, [\n\t\t\t\t\telement => !selectedFilters.selectedProjects[element.id],\n\t\t\t\t\t'projectType',\n\t\t\t\t\telement => element.name.toLowerCase(),\n\t\t\t\t]);\n\t\t\t}),\n\t\t\t),\n\t\t),\n\t);\n\n\tselectedParentProject$ = this.projectsFilter$.pipe(\n\t\tmap(selectedFilters => {\n\t\t\treturn selectedFilters.selectedParentProjectId;\n\t\t}),\n\t\tmergeMap(projectId => this.store.select(selectCompanyProjectById, { projectId })),\n\t);\n\n\n\tselectedProjectsLength$ = this.projectsFilter$.pipe(\n\t\tmap(projectFilter => {\n\t\t\tconst keys = Object.keys(projectFilter.selectedProjects);\n\t\t\treturn keys.length;\n\t\t}),\n\t);\n\n\n\tconstructor(\n\t\tprivate readonly store: Store<AppState>,\n\t\tprivate readonly projectSortAndSearchHelper: ProjectSortAndSearchHelper,\n\t\t@Inject(MAT_DIALOG_DATA) public data: { selectedProjects: { [id: string]: string } },\n\t\tprivate readonly dialogRef: MatDialogRef<ProjectFilterDialogComponent>,\n\t\tprivate readonly trackingService: TrackingDispatcherService,\n\t) {\n\t\tconst initalProjectFilter: ProjectsFilter = {\n\t\t\t...this.projectsFilter$.value,\n\t\t\tselectedProjects: { ...this.data.selectedProjects },\n\t\t};\n\t\tthis.projectsFilter$.next(initalProjectFilter);\n\t}\n\n\tclearFilter(): void {\n\t\tthis.searchInput.nativeElement.value = '';\n\t\tthis.projectsFilter$.next({ ...this.projectsFilter$.value, selectedProjects: {}, searchKey: '' });\n\t}\n\n\tonProjectSearchChange(searchTerm: string): void {\n\t\tthis.projectsFilter$.next({ ...this.projectsFilter$.value, searchKey: searchTerm });\n\n\t\tif (!searchTerm) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.logSearchEvent(TrackEventType.TRACKED_TIME_FILTER_PROJECT_SEARCH, searchTerm);\n\t}\n\n\tfolderClicked(folderId: string = null): void {\n\t\tthis.projectsFilter$.next({\n\t\t\t...this.projectsFilter$.value,\n\t\t\tselectedParentProjectId: folderId,\n\t\t\tsearchKey: '',\n\t\t});\n\t}\n\n\ttoggleProjectSelection(selectedId: string): void {\n\t\tconst state = { ...this.projectsFilter$.value };\n\n\t\tif (state.selectedProjects[selectedId]) {\n\t\t\tdelete state.selectedProjects[selectedId];\n\t\t} else {\n\t\t\tstate.selectedProjects[selectedId] = selectedId;\n\t\t}\n\n\t\tthis.projectsFilter$.next(state);\n\t}\n\n\tapplyFilter(): void {\n\t\tconst selectedProjects = this.projectsFilter$.value.selectedProjects;\n\t\tthis.dialogRef.close({ selectedProjects });\n\t}\n\n\tcloseWithoutSaving(): void {\n\t\tthis.dialogRef.close();\n\t}\n\n\tprivate async logSearchEvent(eventName: TrackEventType, searchKey: string): Promise<void> {\n\t\tawait this.trackingService.emitTrackingEvent(eventName, { searchKey });\n\t}\n\n}\n","import { Directive } from '@angular/core';\n\n@Directive({\n\t// tslint:disable-next-line:directive-selector\n\tselector: '[ch-primary-button-text]',\n})\nexport class PrimaryButtonTextDirective {\n}\n","<button class=\"mat-flat-button mat-button-base mat-primary ch-primary-button\"\n\t\t\t\t[ngClass]=\"{'ch-primary-button--with-text': textContent}\">\n\t<div class=\"ch-primary-button__line\">\n\t\t<ng-template [ngIf]=\"iconName\">\n\t\t\t<mat-icon>{{iconName}}</mat-icon>\n\t\t</ng-template>\n\t\t<ng-template [ngIf]=textContent>\n\t\t\t<div class=\"ch-primary-button__text-container\">\n\t\t\t\t<ng-content select=\"span\"></ng-content>\n\t\t\t</div>\n\t\t</ng-template>\n\n\t</div>\n</button>\n","import { Component, ContentChild, Input } from '@angular/core';\nimport { PrimaryButtonTextDirective } from '../../directives/primary-button-text.directive';\n\n@Component({\n\t// tslint:disable-next-line:component-selector\n\tselector: 'ch-primary-button',\n\ttemplateUrl: './primary-button.component.html',\n\tstyleUrls: ['./primary-button.component.scss'],\n})\nexport class PrimaryButtonComponent {\n\t@Input() iconName: string;\n\t@ContentChild(PrimaryButtonTextDirective) textContent;\n}\n","<div class=\"cn-filter-dd\">\n\t<div *ngIf=\"!providesMenu\"\n\t\t\t (click)=\"onFilterOpened()\"\n\t\t\t [ngClass]=\"{'cn-filter-dd__menu-btn--active': selectedItemsLength }\"\n\t\t\t [appTrack]=\"trackingEvent\"\n\t\t\t class=\"cn-filter-dd__menu-btn d-flex align-items-center\">\n\t\t<ng-container *ngTemplateOutlet=\"menuHead\"></ng-container>\n\t</div>\n\t<div *ngIf=\"providesMenu\" [matMenuTriggerFor]=\"menu\"\n\t\t\t [ngClass]=\"{'cn-filter-dd__menu-btn&#45;&#45;active': selectedItemsLength }\"\n\t\t\t (menuClosed)=\"onFilterClosed()\"\n\t\t\t (menuOpened)=\"onFilterOpened()\"\n\t\t\t [appTrack]=\"trackingEvent\"\n\t\t\t class=\"cn-filter-dd__menu-btn d-flex align-items-center\">\n\t\t<ng-container *ngTemplateOutlet=\"menuHead\"></ng-container>\n\t</div>\n\t<mat-menu #menu=\"matMenu\">\n\t\t<div class=\"cn-filter-dd__menu-content\">\n\t\t\t<ng-content select=\".filter-content\"></ng-content>\n\t\t</div>\n\t</mat-menu>\n</div>\n\n<ng-template #menuHead>\n\t<ng-content select=\".filter-text\"></ng-content>\n\t<mat-icon class=\"ml-2\">expand_more</mat-icon>\n</ng-template>\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n\tselector: 'app-filter',\n\ttemplateUrl: './filter.component.html',\n\tstyleUrls: ['./filter.component.scss'],\n})\nexport class FilterComponent {\n\t@Input()\n\tselectedItemsLength: number;\n\n\t@Input()\n\ttrackingEvent: string;\n\n\t@Input()\n\tprovidesMenu = true;\n\n\t@Output()\n\tfilterClosed = new EventEmitter<void>();\n\n\t@Output()\n\tfilterOpened = new EventEmitter<void>();\n\n\tonFilterClosed(): void {\n\t\tthis.filterClosed.emit();\n\t}\n\n\tonFilterOpened(): void {\n\t\tthis.filterOpened.emit();\n\t}\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport moment from 'moment';\n\n@Pipe({\n\tname: 'taskTime',\n})\nexport class TaskTimePipe implements PipeTransform {\n\n\tconstructor(\n\t\tprivate readonly translateService: TranslateService,\n\t) {\n\t}\n\n\ttransform(taskTime: number = 0): string {\n\t\tconst translatedKeyHours = this.translateService.instant('dashboard.timeTracking.hours');\n\t\tconst translatedKeyMinutes = this.translateService.instant('dashboard.timeTracking.minutes');\n\t\tconst duration = moment.duration(taskTime * 1000);\n\t\tconst hours = Math.floor(duration.asHours());\n\t\tconst minutes = Math.floor(duration.asMinutes()) - (hours * 60);\n\n\t\tif (!hours) {\n\t\t\treturn `${minutes} ${translatedKeyMinutes}`;\n\t\t}\n\n\t\treturn `${hours} ${translatedKeyHours} ${minutes} ${translatedKeyMinutes}`;\n\t}\n}\n","<div class=\"row h-100 time-tracking-container\">\n\t<div class=\"col pt-3 overflow-auto h-100\">\n\t\t<mat-drawer-container class=\"h-100\" hasBackdrop=\"false\">\n\t\t\t<mat-drawer mode=\"Over\" position=\"end\">\n\t\t\t\t<ng-container [ngTemplateOutlet]=\"entryDetails\"></ng-container>\n\t\t\t</mat-drawer>\n\t\t\t<mat-drawer-content>\n\t\t\t\t<ng-container [ngTemplateOutlet]=\"timeTrackingContent\"></ng-container>\n\t\t\t</mat-drawer-content>\n\t\t</mat-drawer-container>\n\t</div>\n</div>\n\n<ng-template #entryDetails>\n\t<div *ngIf=\"selectedEntry\" class=\"entry-details\">\n\t\t<div class=\"entry-details__header d-flex align-items-center font-weight-bold\">\n\t\t\t<mat-icon (click)=\"drawer.toggle()\" class=\"pointer mr-2\">close</mat-icon>\n\t\t\t<span>{{'dashboard.timeTracking.entryDetails' | translate}}</span>\n\t\t</div>\n\t\t<div class=\"entry-details__item\">\n\t\t\t<div class=\"entry-details__item--header\">{{ 'dashboard.timeTracking.projectOrFolder' | translate }}</div>\n\t\t\t<span>\n\t\t\t\t<ng-container *ngTemplateOutlet=\"projectName;context:{project : selectedEntry}\"></ng-container>\n\t\t\t</span>\n\t\t</div>\n\t\t<div class=\"entry-details__item\">\n\t\t\t<div class=\"entry-details__item--header\">{{ 'dashboard.timeTracking.assignee' | translate }}</div>\n\t\t\t<span>{{selectedEntry.assigneeName}}</span>\n\t\t</div>\n\t\t<div class=\"entry-details__item\">\n\t\t\t<div class=\"entry-details__item--header\">{{ 'dashboard.timeTracking.taskName' | translate }}</div>\n\t\t\t<span>{{selectedEntry.taskName}}</span>\n\t\t</div>\n\t\t<div class=\"entry-details__item\">\n\t\t\t<div class=\"entry-details__item--header\">{{ 'dashboard.timeTracking.workType' | translate }}</div>\n\t\t\t<span>{{selectedEntry.workType}}</span>\n\t\t</div>\n\t\t<div *ngFor=\"let time of selectedEntry.times\" class=\"row entry-details__time-entry\">\n\t\t\t<div *ngIf=\"selectedEntry.taskTimeDates[time.id] as createdDate\" class=\"col-12 entry-details__time-entry--date\">\n\t\t\t\t{{createdDate | date : 'EEEE'}},  {{createdDate | date: 'shortDate': undefined : 'de-DE'}}\n\t\t\t</div>\n\t\t\t<div class=\"col-6\">\n\t\t\t\t{{time.startTime * 1000 | date:'H:mm'}} - {{time.endTime * 1000 | date:'H:mm'}}\n\t\t\t</div>\n\t\t\t<div class=\"col-6 text-right\">\n\t\t\t\t{{ (time.endTime - time.startTime) | taskTime}}\n\t\t\t</div>\n\t\t\t<div *ngIf=\"time.pauseDuration\" class=\"col-12 text-right\">\n\t\t\t\t- {{time.pauseDuration | taskTime}} ({{'dashboard.timeTracking.break' | translate}})\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"row entry-details__time-entry--total\">\n\t\t\t<div class=\"col-auto\">\n\t\t\t\t{{'dashboard.timeTracking.totalWork' | translate}}\n\t\t\t</div>\n\t\t\t<div class=\"col text-right\">\n\t\t\t\t<div>{{selectedEntry.timeWorked | taskTime}}</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</ng-template>\n\n<ng-template #timeTrackingContent>\n\t<div class=\"table-responsive mycraftnote-table__container pb-3\">\n\t\t<div class=\"mycraftnote-table__header\">\n\t\t\t<div [innerHTML]=\"'sidebar.time-tracking' | translate\" class=\"mt-4 mb-4 mycraftnote-table__title\"></div>\n\t\t\t<ch-primary-button *appFeatureFlag=\"'feature_times_export'\" (click)=\"exportTimes()\"\n\t\t\t\t\t\t\t\t\t\t\t\t iconName=\"vertical_align_bottom\">\n\t\t\t\t<span ch-primary-button-text>{{'dashboard.timeTracking.export' | translate}}</span></ch-primary-button>\n\t\t</div>\n\n\t\t<ng-container [ngTemplateOutlet]=\"timeTrackingFilters\"></ng-container>\n\n\t\t<table [dataSource]=\"matTasks\"\n\t\t\t\t\t [trackBy]=\"trackById\"\n\t\t\t\t\t class=\"w-100 text-left mycraftnote-table with-expandable-row\"\n\t\t\t\t\t mat-table\n\t\t\t\t\t matSort\n\t\t\t\t\t matSortActive=\"date\"\n\t\t\t\t\t matSortDirection=\"desc\"\n\t\t\t\t\t multiTemplateDataRows>\n\t\t\t<ng-container matColumnDef=\"folder-or-project\">\n\t\t\t\t<th *matHeaderCellDef mat-header-cell\n\t\t\t\t\t\tmat-sort-header>{{ 'dashboard.timeTracking.projectOrFolder' | translate }}</th>\n\t\t\t\t<td *matCellDef=\"let element\"\n\t\t\t\t\t\tclass=\"text-truncate column_name\"\n\t\t\t\t\t\tmat-cell>\n\t\t\t\t\t\t<span *ngIf=\"(element.type === 'task' && element.times.length > 0)\">\n\t\t\t\t\t\t\t<mat-icon (click)=\"expandRow(element)\"\n\t\t\t\t\t\t\t\t\t\t\t\tappEventStopPropagation\n\t\t\t\t\t\t\t\t\t\t\t\tclass=\"mr-2 color-primary pointer\">\n\t\t\t\t\t\t\t\t{{ expandedElementId === element.id ? 'expand_less' : 'expand_more'}}\n\t\t\t\t\t\t\t</mat-icon>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t<ng-container *ngTemplateOutlet=\"projectName;context:{project : element}\"></ng-container>\n\t\t\t\t</td>\n\t\t\t\t<td *matFooterCellDef mat-footer-cell></td>\n\t\t\t</ng-container>\n\n\t\t\t<ng-container matColumnDef=\"task-name\">\n\t\t\t\t<th *matHeaderCellDef mat-header-cell\n\t\t\t\t\t\tmat-sort-header>{{ 'dashboard.timeTracking.taskName' | translate }}</th>\n\t\t\t\t<td *matCellDef=\"let element\" class=\"column_task_name text-truncate\" mat-cell>\n\t\t\t\t\t{{ element.taskName }}\n\t\t\t\t</td>\n\t\t\t\t<td *matFooterCellDef mat-footer-cell></td>\n\t\t\t</ng-container>\n\n\t\t\t<ng-container matColumnDef=\"work-type\">\n\t\t\t\t<th *matHeaderCellDef mat-header-cell mat-sort-header>{{ 'dashboard.timeTracking.workType' | translate }}</th>\n\t\t\t\t<td *matCellDef=\"let element\" class=\"column_work_type text-truncate\" mat-cell>\n\t\t\t\t\t{{element.workType}}\n\t\t\t\t</td>\n\t\t\t\t<td *matFooterCellDef mat-footer-cell></td>\n\t\t\t</ng-container>\n\n\n\t\t\t<ng-container matColumnDef=\"assignee\">\n\t\t\t\t<th *matHeaderCellDef mat-header-cell mat-sort-header>{{ 'dashboard.timeTracking.assignee' | translate }}</th>\n\t\t\t\t<td *matCellDef=\"let element\" class=\"column_assignee text-truncate\" mat-cell>\n\t\t\t\t\t{{ element.assigneeName }}\n\t\t\t\t</td>\n\t\t\t\t<td *matFooterCellDef mat-footer-cell></td>\n\t\t\t</ng-container>\n\n\t\t\t<ng-container matColumnDef=\"date\">\n\t\t\t\t<th *matHeaderCellDef mat-header-cell mat-sort-header>{{ 'dashboard.timeTracking.date' | translate }}</th>\n\t\t\t\t<td *matCellDef=\"let element\" class=\"column_date\" mat-cell>\n\t\t\t\t\t{{ element.createdTime | date : 'shortDate' : undefined : 'de-DE' }}\n\t\t\t\t</td>\n\t\t\t\t<td *matFooterCellDef class=\"text-right pr-3\" mat-footer-cell>\n\t\t\t\t\t<strong>{{ 'dashboard.timeTracking.total' | translate }} : </strong>\n\t\t\t\t</td>\n\t\t\t</ng-container>\n\n\t\t\t<ng-container matColumnDef=\"time-worked\">\n\t\t\t\t<th *matHeaderCellDef mat-header-cell\n\t\t\t\t\t\tmat-sort-header>{{ 'dashboard.timeTracking.timeWorked' | translate }}</th>\n\t\t\t\t<td *matCellDef=\"let element\" class=\"column_time-spent\" mat-cell>\n\t\t\t\t\t{{ element.timeWorked | taskTime }}\n\t\t\t\t</td>\n\t\t\t\t<td *matFooterCellDef mat-footer-cell>\n\t\t\t\t\t<strong>{{ (totalTimeWorked$ | async) | taskTime }} </strong>\n\t\t\t\t</td>\n\t\t\t</ng-container>\n\n\t\t\t<ng-container matColumnDef=\"expandedDetail\">\n\t\t\t\t<td *matCellDef=\"let element\" [attr.colspan]=\"displayedColumns.length\" class=\"no-padding text-truncate\"\n\t\t\t\t\t\tmat-cell>\n\t\t\t\t\t<ng-container *ngTemplateOutlet=\"shortTable;context:{element : element}\"></ng-container>\n\t\t\t\t</td>\n\t\t\t</ng-container>\n\n\t\t\t<tr *matHeaderRowDef=\"displayedColumns\" class=\"table-row-header\" mat-header-row></tr>\n\t\t\t<tr (click)=\"viewEntryDetails(row)\"\n\t\t\t\t\t*matRowDef=\"let row; columns: displayedColumns\"\n\t\t\t\t\tclass=\"table-row\" mat-row></tr>\n\t\t\t<tr *matRowDef=\"let row; columns: ['expandedDetail']\" [class.expanded]=\"expandedElementId === row.id\"\n\t\t\t\t\tclass=\"table-row expanded-row\"\n\t\t\t\t\tmat-row></tr>\n\t\t\t<tr *matFooterRowDef=\"displayedColumns\" class=\"table-row-footer\" mat-footer-row></tr>\n\t\t</table>\n\t\t<mat-paginator [length]=\"matTasks.data.length\" [pageSizeOptions]=\"[10, 25, 50]\" [pageSize]=\"10\"></mat-paginator>\n\t</div>\n</ng-template>\n\n<ng-template #timeTrackingFilters>\n\t<div [ngClass]=\"{ 'mb-2' : (isAnyFilterSelected$ | async)}\"\n\t\t\t class=\"d-flex align-items-center montserrat-text-medium filters-container flex-wrap\">\n\t\t<div class=\"mr-3\">\n\t\t\t{{'dashboard.timeTracking.filterBy' | translate}} :\n\t\t</div>\n\t\t<app-filter\n\t\t\t(filterOpened)=\"openProjectFilterDialog()\"\n\t\t\t[providesMenu]=\"false\"\n\t\t\t[selectedItemsLength]=\"selectedProjectsLength$ | async\"\n\t\t\t[trackingEvent]=\"TrackEventType.TRACKED_TIME_FILTER_PROJECT_CLICKED\">\n\t\t\t<div class=\"filter-text d-flex align-items-center\">\n\t\t\t\t<mat-icon class=\"mr-2\" svgIcon=\"sidebar-project\"></mat-icon>\n\t\t\t\t<span>{{ (selectedProjectsText$ | async) || 'dashboard.timeTracking.projectOrFolder' | translate }}</span>\n\t\t\t</div>\n\t\t</app-filter>\n\t\t<app-filter (filterClosed)=\"logSelectEvent(TrackEventType.TRACKED_TIME_FILTER_ASSIGNEE_SELECTED)\"\n\t\t\t\t\t\t\t\t[selectedItemsLength]=\"selectedMembersLength$ | async\"\n\t\t\t\t\t\t\t\t[trackingEvent]=\"TrackEventType.TRACKED_TIME_FILTER_ASSIGNEE_CLICKED\">\n\t\t\t<div class=\"filter-text d-flex align-items-center\">\n\t\t\t\t<mat-icon class=\"mr-2\">person_outline</mat-icon>\n\t\t\t\t<span>{{ (selectedMembersText$ | async) || ('dashboard.timeTracking.assignee' | translate) }}</span>\n\t\t\t</div>\n\t\t\t<div class=\"filter-content\">\n\t\t\t\t<ng-container [ngTemplateOutlet]=\"membersFilterContent\"></ng-container>\n\t\t\t</div>\n\t\t</app-filter>\n\t\t<app-filter (filterClosed)=\"logSelectEvent(TrackEventType.TRACKED_TIME_FILTER_WORK_TYPE_SELECTED)\"\n\t\t\t\t\t\t\t\t[selectedItemsLength]=\"selectedWorkTypesLength$ | async\"\n\t\t\t\t\t\t\t\t[trackingEvent]=\"TrackEventType.TRACKED_TIME_FILTER_WORK_TYPE_CLICKED\">\n\t\t\t<div class=\"filter-text d-flex align-items-center\">\n\t\t\t\t<mat-icon class=\"mr-2\" fontSet=\"material-icons-sharp\">calendar_today</mat-icon>\n\t\t\t\t<span>{{ (selectedWorkTypesText$ | async) || ('dashboard.timeTracking.workType' | translate) }}</span>\n\t\t\t</div>\n\t\t\t<div class=\"filter-content\">\n\t\t\t\t<ng-container [ngTemplateOutlet]=\"workTypeFilterContent\"></ng-container>\n\t\t\t</div>\n\t\t</app-filter>\n\t\t<app-filter [selectedItemsLength]=\"selectedDatesLength$ | async\"\n\t\t\t\t\t\t\t\t[trackingEvent]=\"TrackEventType.TRACKED_TIME_FILTER_DATE_CLICKED\">\n\t\t\t<div class=\"filter-text d-flex align-items-center\">\n\t\t\t\t<mat-icon class=\"mr-2\" fontSet=\"material-icons-sharp\">calendar_today</mat-icon>\n\t\t\t\t<span>{{ (selectedDatesText$ | async) || 'dashboard.timeTracking.date' | translate }}</span>\n\t\t\t</div>\n\t\t\t<div class=\"filter-content\">\n\t\t\t\t<ng-container [ngTemplateOutlet]=\"dateFilterContent\"></ng-container>\n\t\t\t</div>\n\t\t</app-filter>\n\t\t<div *ngIf=\"selectedDates$ | async\">\n\t\t\t<mat-form-field appearance=\"outline\" class=\"cn-filter__form-field\">\n\t\t\t\t<input (dateChange)=\"changeDate('startDate', $event.value)\" [formControl]=\"startDateControl\"\n\t\t\t\t\t\t\t [matDatepicker]=\"startDate\"\n\t\t\t\t\t\t\t [max]=\"endDateControl.value\" matInput\n\t\t\t\t\t\t\t [placeholder]=\"'dashboard.timeTracking.filters.startDate'| translate\" />\n\t\t\t\t<mat-datepicker-toggle [for]=\"startDate\" matSuffix></mat-datepicker-toggle>\n\t\t\t\t<mat-datepicker #startDate></mat-datepicker>\n\t\t\t</mat-form-field>\n\t\t\t<mat-form-field appearance=\"outline\" class=\"cn-filter__form-field\">\n\t\t\t\t<input (dateChange)=\"changeDate('endDate', $event.value)\" [formControl]=\"endDateControl\"\n\t\t\t\t\t\t\t [matDatepicker]=\"endDate\"\n\t\t\t\t\t\t\t [min]=\"startDateControl.value\" matInput\n\t\t\t\t\t\t\t [placeholder]=\"'dashboard.timeTracking.filters.endDate'| translate\" />\n\t\t\t\t<mat-datepicker-toggle [for]=\"endDate\" matSuffix></mat-datepicker-toggle>\n\t\t\t\t<mat-datepicker #endDate></mat-datepicker>\n\t\t\t</mat-form-field>\n\t\t</div>\n\n\t\t<div\n\t\t\t*ngIf=\"isAnyFilterSelected$ | async\"\n\t\t\tclass=\"d-flex w-100 mt-2\">\n\t\t\t<div class=\"mr-3 invisible\">\n\t\t\t\t{{'dashboard.timeTracking.filterBy' | translate}} :\n\t\t\t</div>\n\t\t\t<div (click)=\"clearAllFilters()\"\n\t\t\t\t\t class=\"p-0 mt-2 cn-filter__clear font-weight-bold color-primary\">\n\t\t\t\t{{ 'dashboard.timeTracking.filters.clearSelections' | translate }}\n\t\t\t</div>\n\t\t</div>\n\t</div>\n\n</ng-template>\n\n<ng-template #shortTable let-element=\"element\">\n\t<table class=\"w-100 sub-table\">\n\t\t<tr *ngFor=\"let time of element.times\">\n\t\t\t<td class=\"invisible\"> {{ element.projectName }} </td>\n\t\t\t<td class=\"invisible\"> {{ element.taskName }} </td>\n\t\t\t<td class=\"invisible\"> {{ element.workType }} </td>\n\t\t\t<td class=\"column_assignee\"> {{ time.assigneeName }} </td>\n\t\t\t<td class=\"column_date\"> {{ time.startTime * 1000 | date : 'shortDate' : undefined : 'de-DE' }} </td>\n\t\t\t<td class=\"column_time-spent\"> {{ (time.endTime - time.startTime) | taskTime }} </td>\n\t\t</tr>\n\t</table>\n</ng-template>\n\n<ng-template #membersFilterContent>\n\t<div *ngIf=\"(selectedFilters$ | async)?.memberFilter.selectedMembers as selectedMembers\" appEventStopPropagation\n\t\t\t class=\"cn-filter\">\n\t\t<div class=\"cn-search__container row no-gutters align-items-center\">\n\t\t\t<div class=\"col\">\n\t\t\t\t<input #memberSearch (keyup)=\"onMemberSearchChange(memberSearch.value)\" class=\"cn-search__input\" matInput\n\t\t\t\t\t\t\t [placeholder]=\"'dashboard.timeTracking.filters.search' | translate\">\n\t\t\t</div>\n\t\t\t<div (click)=\" clearFilterSelection(FilterKeys.MEMEBR)\"\n\t\t\t\t\t *ngIf=\"selectedMembersLength$ | async\"\n\t\t\t\t\t class=\"col-auto cn-filter__clear font-weight-bold color-primary\">\n\t\t\t\t{{ 'dashboard.timeTracking.filters.clearSelections' | translate }}\n\t\t\t</div>\n\t\t</div>\n\t\t<mat-radio-group\n\t\t\t(change)=\"onFilterTypeChanged(memberType)\"\n\t\t\t[(ngModel)]=\"memberType\"\n\t\t\tclass=\"cn-filter__type--group\">\n\t\t\t<mat-radio-button [value]=\"TimeTrackingType.ALL\" class=\"cn-filter__type--button\">\n\t\t\t\t{{'dashboard.timeTracking.filters.allAssignees' | translate}}\n\t\t\t</mat-radio-button>\n\t\t\t<mat-radio-button [value]=\"TimeTrackingType.INTERNAL\" class=\"cn-filter__type--button\">\n\t\t\t\t{{'dashboard.timeTracking.filters.onlyInternalAssignees' | translate}}\n\t\t\t</mat-radio-button>\n\t\t\t<mat-radio-button [value]=\"TimeTrackingType.EXTERNAL\" class=\"cn-filter__type--button\">\n\t\t\t\t{{'dashboard.timeTracking.filters.onlyExternalAssignees' | translate}}\n\t\t\t</mat-radio-button>\n\t\t</mat-radio-group>\n\n\t\t<div class=\"cn-filter__line-break\"></div>\n\n\t\t<div *ngIf=\"!(membersResultsNotFoundText$ | async); else emptyMembersResults;\" class=\"cn-filter__members\">\n\t\t\t<div *ngFor=\"let member of (membersOfAllProjects$ | async)\" class=\"cn-filter__type--button text-truncate\">\n\t\t\t\t<mat-checkbox (change)=\"toggleMemberSelection(member)\"\n\t\t\t\t\t\t\t\t\t\t\t[checked]=\"!!selectedMembers[member.id]\"\n\t\t\t\t\t\t\t\t\t\t\tclass=\"text-truncate\">{{member.name}} {{member.lastname}}</mat-checkbox>\n\t\t\t</div>\n\t\t</div>\n\n\t</div>\n</ng-template>\n\n<ng-template #workTypeFilterContent>\n\t<div *ngIf=\"(selectedWorkTypesFilter$ | async) as selectedWorkTypes\" appEventStopPropagation class=\"cn-filter\">\n\t\t<div (click)=\"clearFilterSelection(FilterKeys.WORK_TYPE)\"\n\t\t\t\t *ngIf=\"selectedWorkTypesLength$ | async\"\n\t\t\t\t class=\"col-auto cn-filter__clear font-weight-bold pt-2 pb-2\">\n\t\t\t{{ 'dashboard.timeTracking.filters.clearSelections' | translate }}\n\t\t</div>\n\t\t<div class=\"cn-filter__members\">\n\t\t\t<div *ngFor=\"let workType of (assignedWorkTypes$ | async)\" class=\"cn-filter__type--button text-truncate\">\n\t\t\t\t<mat-checkbox\n\t\t\t\t\t(change)=\"toggleWorkTypeSelection(workType)\"\n\t\t\t\t\t[checked]=\"!!selectedWorkTypes[workType.id]\"\n\t\t\t\t\tclass=\"text-truncate\">{{workType.name}}</mat-checkbox>\n\t\t\t</div>\n\t\t\t<div *ngIf=\"(assignedWorkTypes$ | async).length === 0\" class=\"cn-filter__empty-text\">\n\t\t\t\t{{ 'dashboard.timeTracking.filters.createAnEntryToFilter' | translate }}\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</ng-template>\n\n<ng-template #dateFilterContent>\n\t<div class=\"cn-filter\">\n\t\t<div (click)=\"applyDateFilter()\" class=\"cn-filter__type--date pointer\">\n\t\t\t{{ 'dashboard.timeTracking.filters.allTime' | translate}}\n\t\t</div>\n\t\t<div (click)=\"applyDateFilter(dateKey.name)\" *ngFor=\"let dateKey of dateFilterKeys\"\n\t\t\t\t [appTrack]=\"dateKey.trackEvent\" class=\"cn-filter__type--date pointer\">\n\t\t\t{{ 'dashboard.timeTracking.filters.' + dateKey.translationKey | translate }}\n\t\t</div>\n\t</div>\n</ng-template>\n\n\n<ng-template #emptyMembersResults>\n\t<div class=\"cn-filter__empty-text\">\n\t\t{{membersResultsNotFoundText$ | async}}\n\t</div>\n</ng-template>\n\n<ng-template #projectName let-project=\"project\">\n\t<span *ngIf=\"project.parentProjectName\">\n\t\t<strong>{{project.parentProjectName}}</strong> /\n\t</span>\n\t{{project.projectName}}\n</ng-template>\n\n\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { redirectUnauthenticatedToLogin } from '../../../shared/helper/route-guard-functions';\nimport { TimeTrackingComponent } from './components/time-tracking/time-tracking.component';\n\nconst routes: Routes = [\n\t{\n\t\tpath: '',\n\t\tcomponent: TimeTrackingComponent,\n\t\tpathMatch: 'full',\n\t\tdata: {\n\t\t\tauthGuardPipe: redirectUnauthenticatedToLogin,\n\t\t},\n\t},\n];\n\n@NgModule({\n\timports: [RouterModule.forChild(routes)],\n\texports: [RouterModule],\n})\nexport class DashboardRoutingModule {\n}\n","import { AfterViewInit, Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { AppState } from '../../../../../store/state/app.state';\nimport {\n\tselectAllMemberEntitiesFromProjects,\n\tselectAssignedWorkTypes,\n\tselectTotalTaskTime,\n\tselectTrackedTimesWithTasks,\n\tTrackedTimeUI,\n} from '../../store/selectors/dashboard.selectors';\nimport { BehaviorSubject, combineLatest, Observable, Subject } from 'rxjs';\nimport { MatDialog, MatDrawer, MatPaginator, MatSort, MatTableDataSource } from '@angular/material';\nimport { Export, Member, Task, WorkType } from 'domain-entities';\nimport { debounceTime, distinctUntilChanged, distinctUntilKeyChanged, filter, map, shareReplay, take, takeUntil } from 'rxjs/operators';\nimport { TranslateService } from '@ngx-translate/core';\nimport {\n\tDateFilter,\n\tDateFilterTypeKeys,\n\tFilterKeys,\n\tFilterMemberTypeKeys,\n\tMemberFilter,\n\tProjectsFilter,\n\tTimeTrackingFilter,\n\tTimeTrackingType,\n} from '../../models/time-tracking.models';\nimport moment, { Moment } from 'moment';\nimport { FormControl } from '@angular/forms';\nimport { selectCompanyProjectsEntities } from '../../store/selectors/company-projects.selectors';\nimport { ProjectType } from '../../../../../shared/models/project.type';\nimport { orderBy, sum, set, isEmpty, get } from 'lodash';\nimport { ProjectSortAndSearchHelper } from '../../../../../work/project/project-sort-and-search-helper.service';\nimport { TrackingDispatcherService } from '../../../../../shared/tracking/tracking-dispatcher.service';\nimport { TrackEventType } from '../../../../../shared/models/track-event.type';\nimport { ProjectFilterDialogComponent } from '../project-filter-dialog/project-filter-dialog.component';\nimport { addFeedbackButton, removeFeedbackButton } from '../../../../../shared/widgets/feedback-button/store/feedback-buttons.actions';\nimport { selectAuthState, selectCompany } from '../../../../../store/selectors/app.selectors';\nimport { CreationExport, ExportService } from '../../../../../shared/firebase/export.service';\nimport { selectedFinalizedExportById, selectExportById } from '../../../../../store/selectors/export.seletors';\nimport { FileDownloadService } from '../../../../../shared/file-download/file-download.service';\nimport { BaseFileService } from '../../../../../shared/helper/base-file.service';\nimport { AlertService } from '../../../../../shared/alert/alert.service';\n\n@Component({\n\tselector: 'app-time-tracking',\n\ttemplateUrl: './time-tracking.component.html',\n\tstyleUrls: ['./time-tracking.component.scss'],\n})\nexport class TimeTrackingComponent implements OnDestroy, OnInit, AfterViewInit {\n\t@ViewChild(MatPaginator) paginator: MatPaginator;\n\t@ViewChild(MatSort) sort: MatSort;\n\t@ViewChild(MatDrawer) drawer: MatDrawer;\n\n\n\tProjectType = ProjectType;\n\tTimeTrackingType = TimeTrackingType;\n\tTrackEventType = TrackEventType;\n\tFilterKeys = FilterKeys;\n\n\tloading = true;\n\tselectedEntry: TrackedTimeUI;\n\tmemberType: TimeTrackingType = TimeTrackingType.ALL;\n\n\tdisplayedColumns = [\n\t\t'folder-or-project',\n\t\t'task-name',\n\t\t'work-type',\n\t\t'assignee',\n\t\t'date',\n\t\t'time-worked',\n\t];\n\n\tcolumnMappers = {\n\t\t'folder-or-project': (data) => `${(data['parentProjectName'] || 'z').toLowerCase()} ${data['projectName'].toLowerCase()}`,\n\t\t'task-name': (data) => data['taskName'].toLowerCase(),\n\t\t'work-type': (data) => data['workType'].toLowerCase(),\n\t\t'assignee': (data) => data['assigneeName'].toLowerCase(),\n\t\t'date': (data) => data['createdTime'],\n\t\t'time-worked': (data) => data['timeWorked'],\n\t};\n\n\tfiltersKeysMapper = {\n\t\t'projectId': 'projectsFilter.selectedProjects',\n\t\t'assigneeId': 'memberFilter.selectedMembers',\n\t\t'workTypeId': 'workTypeFilter.selectedWorkTypes',\n\t\t'createdDate': 'dateFilter.selectedDates',\n\t};\n\n\tclearFilterMappers = {\n\t\t[FilterKeys.PROJECT]: this.filtersKeysMapper.projectId,\n\t\t[FilterKeys.MEMEBR]: this.filtersKeysMapper.assigneeId,\n\t\t[FilterKeys.WORK_TYPE]: this.filtersKeysMapper.workTypeId,\n\t};\n\n\ttrackEventCountMapper = {\n\t\t[TrackEventType.TRACKED_TIME_FILTER_ASSIGNEE_SELECTED]: this.filtersKeysMapper.assigneeId,\n\t\t[TrackEventType.TRACKED_TIME_FILTER_PROJECT_SELECTED]: this.filtersKeysMapper.projectId,\n\t\t[TrackEventType.TRACKED_TIME_FILTER_WORK_TYPE_SELECTED]: this.filtersKeysMapper.workTypeId,\n\t\t[TrackEventType.TRACKED_TIME_FILTER_DATE_CUSTOM_RANGE]: this.filtersKeysMapper.createdDate,\n\t};\n\n\texpandedElementId: string;\n\tmatTasks: MatTableDataSource<TrackedTimeUI>;\n\tdestroy$ = new Subject();\n\tselectTrackedTimesWithTasks$ = this.store.select(selectTrackedTimesWithTasks);\n\ttotalTasksTime$: Observable<number> = this.store.select(selectTotalTaskTime);\n\ttotalMembersAssigned$ = this.store.select(selectAllMemberEntitiesFromProjects);\n\tselectedFilters$ = new BehaviorSubject<TimeTrackingFilter>({\n\t\tmemberFilter: {\n\t\t\ttype: TimeTrackingType.ALL,\n\t\t\tselectedMembers: {},\n\t\t\tsearchKey: '',\n\t\t},\n\t\tworkTypeFilter: {\n\t\t\tselectedWorkTypes: {},\n\t\t},\n\t\tdateFilter: {\n\t\t\tselectedDateFilter: null,\n\t\t\tselectedDates: null,\n\t\t},\n\t\tprojectsFilter: {\n\t\t\tsearchKey: '',\n\t\t\tselectedParentProjectId: null,\n\t\t\tselectedProjects: {},\n\t\t},\n\t});\n\n\tmembersFilter$ = this.selectedFilters$.asObservable().pipe(\n\t\tdebounceTime(300),\n\t\tmap((filters: TimeTrackingFilter) => filters.memberFilter),\n\t\tshareReplay(1),\n\t);\n\n\tmembersOfAllProjects$ = combineLatest([\n\t\tthis.membersFilter$,\n\t\tthis.totalMembersAssigned$,\n\t]).pipe(\n\t\tmap(([memberFilter, members]) => {\n\t\t\tconst filteredMembers = Object.values(members)\n\t\t\t\t.filter((member: Member) => this.filterCondition(member, memberFilter))\n\t\t\t\t.filter((member: Member) => this.searchInMember(member as Member, memberFilter.searchKey));\n\t\t\treturn orderBy(filteredMembers, [\n\t\t\t\t(member: Member) => !memberFilter.selectedMembers[member.id],\n\t\t\t\t(member: Member) => member.name.toLowerCase(),\n\t\t\t\t(member: Member) => member.lastname.toLowerCase(),\n\t\t\t]);\n\t\t}),\n\t\tshareReplay(1));\n\n\tmembersResultsNotFoundText$ = combineLatest([\n\t\tthis.membersOfAllProjects$,\n\t\tthis.totalMembersAssigned$,\n\t]).pipe(map(([members, totalMembers]) => {\n\t\tconst totalMembersLength = Object.values(totalMembers).length;\n\n\t\tif (totalMembersLength === 0) {\n\t\t\treturn this.translateService.instant('dashboard.timeTracking.filters.createAnEntryToFilter');\n\t\t}\n\n\t\tif (members.length === 0) {\n\t\t\treturn this.translateService.instant('dashboard.timeTracking.filters.resultsNotFound');\n\t\t}\n\t\treturn null;\n\t}));\n\n\tselectedMembersText$ = combineLatest([\n\t\tthis.membersFilter$,\n\t\tthis.totalMembersAssigned$,\n\t]).pipe(map(([memberFilter, members]) => {\n\t\tconst selectedMembers = Object.values(memberFilter.selectedMembers);\n\n\t\tif (selectedMembers.length > 0) {\n\t\t\tconst selectedMember = members[selectedMembers[0]];\n\t\t\tconst moreText = selectedMembers.length > 1\n\t\t\t\t? ` & ${selectedMembers.length - 1} ${this.translateService.instant('dashboard.timeTracking.more')}`\n\t\t\t\t: '';\n\n\t\t\treturn `${selectedMember.name} ${selectedMember.lastname}${moreText}`;\n\t\t}\n\t\treturn null;\n\t}));\n\n\tselectedMembersLength$ = this.membersFilter$.pipe(map(memberFilter => {\n\t\treturn Object.keys(memberFilter.selectedMembers).length;\n\t}));\n\n\tassignedWorkTypes$ = this.store.select(selectAssignedWorkTypes).pipe(map(workTypes => {\n\t\treturn Object.values(workTypes);\n\t}));\n\n\tselectedWorkTypesFilter$ = this.selectedFilters$.asObservable().pipe(\n\t\tmap((filters: TimeTrackingFilter) => filters.workTypeFilter.selectedWorkTypes),\n\t\tshareReplay(1),\n\t);\n\n\tselectedWorkTypesText$ = combineLatest([\n\t\tthis.selectedWorkTypesFilter$,\n\t\tthis.store.select(selectAssignedWorkTypes),\n\t]).pipe(map(([selectedWorkTypes, assignedWorkTypes]) => {\n\t\tconst selectedMembers = Object.values(selectedWorkTypes);\n\n\t\tif (selectedMembers.length > 0) {\n\t\t\tconst selectedMember: WorkType = assignedWorkTypes[selectedMembers[0]];\n\t\t\tconst moreText = selectedMembers.length > 1\n\t\t\t\t? ` & ${selectedMembers.length - 1} ${this.translateService.instant('dashboard.timeTracking.more')}`\n\t\t\t\t: '';\n\n\t\t\treturn `${selectedMember.name}${moreText}`;\n\t\t}\n\t\treturn null;\n\t}));\n\n\tselectedWorkTypesLength$ = this.selectedWorkTypesFilter$.pipe(map(selectedWorkTypes => {\n\t\treturn Object.keys(selectedWorkTypes).length;\n\t}));\n\n\tselectedDates$ = this.selectedFilters$\n\t\t.pipe(map(selectedFilters => {\n\t\t\treturn selectedFilters.dateFilter.selectedDates;\n\t\t}));\n\n\tselectedDatesText$ = this.selectedFilters$\n\t\t.pipe(map(selectedFilters => {\n\t\t\tconst selectedFilter = selectedFilters.dateFilter.selectedDateFilter;\n\t\t\treturn selectedFilter ? this.translateService.instant(`dashboard.timeTracking.filters.${selectedFilter.translationKey}`) : null;\n\t\t}));\n\n\tselectedDatesLength$ = this.selectedFilters$.pipe(map(selectedFilters => {\n\t\tconst selectedFilter = selectedFilters.dateFilter.selectedDateFilter;\n\t\treturn selectedFilter ? 1 : 0;\n\t}));\n\n\tprojectsFilter$: Observable<ProjectsFilter> = this.selectedFilters$\n\t\t.pipe(\n\t\t\tmap(selectedFilter => selectedFilter.projectsFilter),\n\t\t\tdebounceTime(300),\n\t\t\tshareReplay(1),\n\t\t);\n\n\tselectedParentProjectId$ = this.projectsFilter$\n\t\t.pipe(\n\t\t\tdistinctUntilKeyChanged('selectedParentProjectId'),\n\t\t\tmap(selectedFilter => selectedFilter.selectedParentProjectId),\n\t\t);\n\n\n\tselectedProjectsText$ = combineLatest([\n\t\tthis.projectsFilter$.pipe(map(projectFilter => projectFilter.selectedProjects)),\n\t\tthis.store.select(selectCompanyProjectsEntities),\n\t]).pipe(map(([selectedProjects, allProjects]) => {\n\t\tconst projects = Object.values(selectedProjects);\n\n\t\tif (projects.length > 0) {\n\t\t\tconst selectedProject = allProjects[projects[0]];\n\t\t\tconst moreText = projects.length > 1\n\t\t\t\t? ` & ${projects.length - 1} ${this.translateService.instant('dashboard.timeTracking.more')}`\n\t\t\t\t: '';\n\n\t\t\treturn `${selectedProject.name}${moreText}`;\n\t\t}\n\t\treturn null;\n\t}));\n\n\n\tselectedProjectsLength$ = this.projectsFilter$.pipe(\n\t\tmap(projectFilter => Object.keys(projectFilter.selectedProjects).length),\n\t);\n\n\tstartDateControl = new FormControl(moment());\n\tendDateControl = new FormControl(moment());\n\n\tfilteredTaskTimes$ = combineLatest([\n\t\tthis.selectedFilters$.pipe(\n\t\t\tmap(selectedProjects => this.transformFiltersToTrackedTimeKeys(selectedProjects)),\n\t\t\tdistinctUntilChanged(),\n\t\t),\n\t\tthis.selectTrackedTimesWithTasks$,\n\t]).pipe(\n\t\tmap(([selectedFilters, taskTimes]) => {\n\t\t\tconst filteredResults = taskTimes\n\t\t\t\t.filter(taskTime => this.isTrackedTImeFilterApplicable(selectedFilters, taskTime));\n\n\t\t\tif (selectedFilters['assigneeId'].length === 0) {\n\t\t\t\treturn filteredResults;\n\t\t\t}\n\n\t\t\treturn filteredResults.map(result => {\n\t\t\t\tconst times = result.times.filter(time => selectedFilters['assigneeId'].includes(time.userId));\n\t\t\t\treturn { ...result, times: [...times] };\n\t\t\t});\n\t\t}),\n\t\tshareReplay(1),\n\t);\n\n\ttotalTimeWorked$ = this.filteredTaskTimes$\n\t\t.pipe(\n\t\t\ttakeUntil(this.destroy$),\n\t\t\tmap(taskTimes => taskTimes.reduce((acc, current) => {\n\t\t\t\tif (current.type === 'task') {\n\t\t\t\t\tcurrent.times.forEach(taskTime => {\n\t\t\t\t\t\tacc = acc + (taskTime.endTime - taskTime.startTime);\n\t\t\t\t\t});\n\t\t\t\t\treturn acc;\n\t\t\t\t}\n\t\t\t\treturn acc + current.timeWorked;\n\t\t\t}, 0)),\n\t\t);\n\n\tisAnyFilterSelected$ = combineLatest([\n\t\tthis.selectedProjectsLength$,\n\t\tthis.selectedMembersLength$,\n\t\tthis.selectedWorkTypesLength$,\n\t\tthis.selectedDatesLength$,\n\t]).pipe(map(lengthArray => !!sum(lengthArray)));\n\n\tget dateFilterKeys(): DateFilter[] {\n\t\treturn Object.values(DateFilterTypeKeys);\n\t}\n\n\tconstructor(\n\t\tprivate readonly store: Store<AppState>,\n\t\tprivate readonly translateService: TranslateService,\n\t\tprivate readonly projectSortAndSearchHelper: ProjectSortAndSearchHelper,\n\t\tprivate readonly trackingService: TrackingDispatcherService,\n\t\tprivate readonly exportService: ExportService,\n\t\tprivate readonly baseFileService: BaseFileService,\n\t\tprivate readonly downloadService: FileDownloadService,\n\t\tprivate readonly alertService: AlertService,\n\t\tprivate readonly dialog: MatDialog,\n\t) {\n\t\tthis.initSubscriptions();\n\t}\n\n\tinitSubscriptions(): void {\n\t\tthis.selectedDates$\n\t\t\t.pipe(takeUntil(this.destroy$))\n\t\t\t.subscribe(selectedDates => {\n\t\t\t\tif (!selectedDates) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis.startDateControl.setValue(moment(selectedDates.startDate));\n\t\t\t\tthis.endDateControl.setValue(moment(selectedDates.endDate));\n\t\t\t});\n\t}\n\n\tasync openProjectFilterDialog(): Promise<void> {\n\t\tconst dialogRef = this.dialog.open(ProjectFilterDialogComponent, {\n\t\t\twidth: '500px',\n\t\t\theight: '670px',\n\t\t\tdata: { selectedProjects: this.selectedFilters$.value.projectsFilter.selectedProjects },\n\t\t\tautoFocus: false,\n\t\t});\n\t\tconst res = await dialogRef.afterClosed().take(1).toPromise();\n\t\tthis.logSelectEvent(TrackEventType.TRACKED_TIME_FILTER_PROJECT_SELECTED);\n\t\tif (!res) {\n\t\t\treturn;\n\t\t}\n\t\tconst state = this.selectedFilters$.value;\n\t\tconst filterState: TimeTrackingFilter = {\n\t\t\t...state,\n\t\t\tprojectsFilter: { ...state.projectsFilter, selectedProjects: res.selectedProjects },\n\t\t};\n\t\tthis.selectedFilters$.next(filterState);\n\n\t}\n\n\ttrackById(index: number, item: Task): string {\n\t\treturn item.id;\n\t}\n\n\texpandRow(row: TrackedTimeUI): void {\n\t\tthis.expandedElementId = this.expandedElementId === row.id ? null : row.id;\n\t}\n\n\tviewEntryDetails(row: TrackedTimeUI): void {\n\t\tthis.selectedEntry = row;\n\t\tthis.drawer.open();\n\t}\n\n\tinitTaskTimesSubscription(): void {\n\t\tthis.filteredTaskTimes$\n\t\t\t.pipe(takeUntil(this.destroy$))\n\t\t\t.subscribe((taskTimes) => {\n\t\t\t\tthis.matTasks.data = taskTimes;\n\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tthis.matTasks.sort = this.sort;\n\t\t\t\t\tthis.matTasks.paginator = this.paginator;\n\t\t\t\t});\n\t\t\t});\n\t}\n\n\tngOnDestroy(): void {\n\t\tthis.destroy$.next();\n\t\tthis.destroy$.complete();\n\t\tthis.store.dispatch(removeFeedbackButton());\n\n\t}\n\n\tngOnInit(): void {\n\t\tthis.matTasks = new MatTableDataSource<TrackedTimeUI>([]);\n\t\tthis.matTasks.sortingDataAccessor = (data, sortHeaderId) => this.columnMappers[sortHeaderId](data);\n\t\tthis.store.dispatch(addFeedbackButton());\n\t}\n\n\tngAfterViewInit(): void {\n\t\tthis.initTaskTimesSubscription();\n\t}\n\n\tonFilterTypeChanged(selectedType: TimeTrackingType): void {\n\t\tconst state = { ...this.selectedFilters$.value };\n\t\tstate.memberFilter = { ...state.memberFilter, type: selectedType };\n\n\t\tthis.selectedFilters$.next(state);\n\t}\n\n\ttoggleMemberSelection(member: Member): void {\n\t\tconst state = { ...this.selectedFilters$.value };\n\n\t\tif (state.memberFilter.selectedMembers[member.id]) {\n\t\t\tdelete state.memberFilter.selectedMembers[member.id];\n\t\t} else {\n\t\t\tstate.memberFilter.selectedMembers[member.id] = member.id;\n\t\t}\n\n\t\tstate.memberFilter = { ...state.memberFilter, selectedMembers: { ...state.memberFilter.selectedMembers } };\n\n\t\tthis.selectedFilters$.next(state);\n\t}\n\n\tonMemberSearchChange(searchTerm: string): void {\n\t\tconst state = { ...this.selectedFilters$.value };\n\n\t\tstate.memberFilter = { ...state.memberFilter, searchKey: searchTerm };\n\n\t\tthis.selectedFilters$.next(state);\n\n\t\tif (!searchTerm) {\n\t\t\treturn;\n\t\t}\n\t\tthis.logSearchEvent(TrackEventType.TRACKED_TIME_FILTER_ASSIGNEE_SEARCH, searchTerm);\n\t}\n\n\ttoggleWorkTypeSelection(workType: WorkType): void {\n\t\tconst state = { ...this.selectedFilters$.value };\n\n\t\tif (state.workTypeFilter.selectedWorkTypes[workType.id]) {\n\t\t\tdelete state.workTypeFilter.selectedWorkTypes[workType.id];\n\t\t} else {\n\t\t\tstate.workTypeFilter.selectedWorkTypes[workType.id] = workType.id;\n\t\t}\n\n\t\tstate.workTypeFilter = { ...state.workTypeFilter, selectedWorkTypes: { ...state.workTypeFilter.selectedWorkTypes } };\n\n\t\tthis.selectedFilters$.next(state);\n\t}\n\n\tapplyDateFilter(dateKey: string = null): void {\n\t\tconst dateFilter = DateFilterTypeKeys[dateKey] || null;\n\t\tconst state = { ...this.selectedFilters$.value };\n\t\tlet selectedDates = null;\n\n\t\tif (dateFilter) {\n\t\t\tconst now = moment();\n\t\t\tselectedDates = {\n\t\t\t\tstartDate: dateFilter.startMoment ? dateFilter.startMoment(now).format('YYYY-MM-DD') : null,\n\t\t\t\tendDate: dateFilter.endMoment ? dateFilter.endMoment(now).format('YYYY-MM-DD') : null,\n\t\t\t};\n\t\t}\n\n\t\tstate.dateFilter = {\n\t\t\tselectedDateFilter: dateFilter ? { ...dateFilter } : null,\n\t\t\tselectedDates: selectedDates ? { ...selectedDates } : null,\n\t\t};\n\n\t\tthis.selectedFilters$.next(state);\n\t}\n\n\tchangeDate(controlName: string, value: Moment): void {\n\t\tconst state = { ...this.selectedFilters$.value };\n\t\tconst dateSelectionValue = value || moment();\n\t\tconst selectedDates = { ...state.dateFilter.selectedDates, [controlName]: dateSelectionValue.format('YYYY-MM-DD') };\n\n\t\tstate.dateFilter = {\n\t\t\t...state.dateFilter,\n\t\t\tselectedDates: { ...selectedDates },\n\t\t\tselectedDateFilter: DateFilterTypeKeys['custom'],\n\t\t};\n\n\t\tthis.selectedFilters$.next(state);\n\t\tthis.logSelectEvent(TrackEventType.TRACKED_TIME_FILTER_DATE_CUSTOM_RANGE);\n\t}\n\n\tfolderClicked(folderId: string = null): void {\n\t\tconst state = { ...this.selectedFilters$.value };\n\n\t\tstate.projectsFilter = {\n\t\t\t...state.projectsFilter,\n\t\t\tselectedParentProjectId: folderId,\n\t\t};\n\n\t\tthis.selectedFilters$.next(state);\n\t}\n\n\ttoggleProjectSelection(selectedId: string): void {\n\t\tconst state = { ...this.selectedFilters$.value };\n\n\t\tif (state.projectsFilter.selectedProjects[selectedId]) {\n\t\t\tdelete state.projectsFilter.selectedProjects[selectedId];\n\t\t} else {\n\t\t\tstate.projectsFilter.selectedProjects[selectedId] = selectedId;\n\t\t}\n\n\t\tstate.projectsFilter = { ...state.projectsFilter, selectedProjects: { ...state.projectsFilter.selectedProjects } };\n\n\t\tthis.selectedFilters$.next(state);\n\t}\n\n\tonProjectSearchChange(searchTerm: string): void {\n\t\tconst state = { ...this.selectedFilters$.value };\n\n\t\tstate.projectsFilter = { ...state.projectsFilter, searchKey: searchTerm };\n\n\t\tthis.selectedFilters$.next(state);\n\n\t\tif (!searchTerm) {\n\t\t\treturn;\n\t\t}\n\t\tthis.logSearchEvent(TrackEventType.TRACKED_TIME_FILTER_PROJECT_SEARCH, searchTerm);\n\t}\n\n\tclearAllFilters(): void {\n\t\tconst state = this.selectedFilters$.value;\n\n\t\tstate.projectsFilter = { ...state.projectsFilter, selectedProjects: {} };\n\t\tstate.memberFilter = { ...state.memberFilter, selectedMembers: {} };\n\t\tstate.workTypeFilter = { ...state.workTypeFilter, selectedWorkTypes: {} };\n\t\tstate.dateFilter = { ...state.dateFilter, selectedDates: null, selectedDateFilter: null };\n\n\t\tthis.selectedFilters$.next(state);\n\t}\n\n\tclearFilterSelection(filter: FilterKeys): void {\n\t\tconst state = this.selectedFilters$.value;\n\t\tconst selectedFilter = this.clearFilterMappers[filter];\n\t\tconst filterType = selectedFilter.split('.')[0];\n\n\t\tset(state, selectedFilter, {});\n\t\tstate[filterType] = { ...state[filterType] };\n\n\t\tthis.selectedFilters$.next(state);\n\t}\n\n\tlogSearchEvent(eventName: TrackEventType, searchKey: string): void {\n\t\tthis.trackingService.emitTrackingEvent(eventName, { searchKey });\n\t}\n\n\tlogSelectEvent(eventName: TrackEventType): void {\n\t\tconst selectedFilters = this.selectedFilters$.value;\n\t\tconst selectedIndividualFilters = get(selectedFilters, this.trackEventCountMapper[eventName]);\n\n\t\tif (!selectedIndividualFilters || isEmpty(selectedIndividualFilters)) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet payload = {\n\t\t\t'count': String(Object.keys(selectedIndividualFilters).length),\n\t\t};\n\n\t\tif (eventName === TrackEventType.TRACKED_TIME_FILTER_DATE_CUSTOM_RANGE) {\n\t\t\tpayload = { ...selectedIndividualFilters };\n\t\t}\n\n\t\tthis.trackingService.emitTrackingEvent(\n\t\t\teventName,\n\t\t\t{ ...payload },\n\t\t);\n\t}\n\n\tprivate filterCondition(member: Member, memberFilter: MemberFilter): boolean {\n\t\treturn (!!memberFilter.selectedMembers[member.id]\n\t\t\t|| FilterMemberTypeKeys[memberFilter.type].includes(member.role));\n\t}\n\n\tprivate searchInMember(member: Member, searchTerm: string): boolean {\n\t\treturn (searchTerm === ''\n\t\t\t|| new RegExp(searchTerm.toLowerCase())\n\t\t\t\t.test(`${member.name} ${member.lastname}`.toLowerCase()));\n\t}\n\n\tprivate isTrackedTImeFilterApplicable(mappedFilters: { [id: string]: string[] }, trackedTime: TrackedTimeUI): boolean {\n\t\treturn Object.keys(mappedFilters).every(key => {\n\t\t\tconst filters = mappedFilters[key];\n\n\t\t\tif (filters.length === 0) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tif (key === 'assigneeId' && trackedTime.type === 'task') {\n\t\t\t\treturn trackedTime.times.some(trackTime => filters.includes(trackTime.userId));\n\t\t\t}\n\n\t\t\treturn filters.includes(trackedTime[key])\n\t\t\t\t|| moment(trackedTime[key]).isBetween(filters[0], filters[1]);\n\t\t});\n\t}\n\n\tprivate transformFiltersToTrackedTimeKeys(selectedFilters): any {\n\t\tconst filterKeys = Object.keys(this.filtersKeysMapper);\n\n\t\treturn filterKeys.reduce((acc, current) => {\n\t\t\tconst mappedFilters = get(selectedFilters, this.filtersKeysMapper[current]);\n\t\t\tacc[current] = mappedFilters ? Object.values(mappedFilters) : [];\n\t\t\treturn acc;\n\t\t}, {});\n\t}\n\n\n\tprivate async exportTimes(): Promise<void> {\n\t\tconst exportFilters = {};\n\t\tconst filterValue = this.selectedFilters$.value;\n\t\tif (filterValue.dateFilter.selectedDates) {\n\t\t\tconst interval = {};\n\t\t\tinterval['start'] = moment(filterValue.dateFilter.selectedDates.startDate).unix();\n\t\t\tinterval['end'] = moment(filterValue.dateFilter.selectedDates.endDate).unix();\n\t\t\texportFilters['interval'] = interval;\n\t\t}\n\t\tif (Object.keys(filterValue.memberFilter.selectedMembers).length > 0) {\n\t\t\texportFilters['assignees'] = Object.keys(filterValue.memberFilter.selectedMembers);\n\t\t}\n\t\tif (Object.keys(filterValue.projectsFilter.selectedProjects).length > 0) {\n\t\t\texportFilters['projects'] = Object.values(filterValue.projectsFilter.selectedProjects);\n\t\t}\n\t\tif (Object.keys(filterValue.workTypeFilter.selectedWorkTypes).length > 0) {\n\t\t\texportFilters['workTypes'] = Object.values(filterValue.workTypeFilter.selectedWorkTypes);\n\t\t}\n\n\t\tconst company = await this.store.select(selectCompany).pipe(filter(innerCompany => !!innerCompany.id), take(1)).toPromise();\n\t\tconst createExport: CreationExport = {\n\t\t\tformat: 'application/csv',\n\t\t\tresourceType: 'times',\n\t\t\tresourceId: company.id,\n\t\t\tfilter: exportFilters,\n\t\t};\n\t\tawait this.exportService.createExport(createExport, 'export.times.info', 'export.times.error');\n\t}\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { combineLatest, Observable, of } from 'rxjs';\nimport { AngularFirestore } from '@angular/fire/firestore';\nimport { Task, TaskTime, TrackedTime } from 'domain-entities';\nimport { catchError, map } from 'rxjs/operators';\nimport { chunk } from 'lodash';\nimport * as fromTasks from '../store/actions/tasks.actions';\nimport * as fromTrackedTimes from '../store/actions/tracked-times.actions';\nimport { Store } from '@ngrx/store';\nimport { AppState } from '../../../../store/state/app.state';\n\ninterface DocumentActions<T> {\n\tupdatedDocs: T[];\n\tdeletedDocs: string[];\n}\n\ninterface DocumentPath {\n\tcollectionName: string;\n\tfieldPath: string;\n\tupdateAction: Function;\n\tdeleteAction: Function;\n}\n\n@Injectable({\n\tprovidedIn: 'root',\n})\nexport class TaskService {\n\n\tconstructor(\n\t\tprivate readonly aFireStore: AngularFirestore,\n\t\tprivate readonly store: Store<AppState>,\n\t) {\n\t}\n\n\tgetAllTasks(projectIds: string[]): void {\n\t\tthis.loadChunks<Task>(projectIds, {\n\t\t\tcollectionName: 'tasks',\n\t\t\tfieldPath: 'projectId',\n\t\t\tupdateAction: (tasks) => fromTasks.updateTasksAction({ tasks }),\n\t\t\tdeleteAction: (tasks) => fromTasks.deleteTasksAction({ tasks }),\n\t\t});\n\t}\n\n\tgetAllTaskTimes(taskIds: string[]): void {\n\t\tthis.loadChunks<TaskTime>(taskIds, {\n\t\t\tcollectionName: 'taskTimes',\n\t\t\tfieldPath: 'taskId',\n\t\t\tupdateAction: (taskTimes) => fromTasks.updateTaskTimesAction({ taskTimes }),\n\t\t\tdeleteAction: (taskTimes) => fromTasks.deleteTaskTimesAction({ taskTimes }),\n\t\t});\n\t}\n\n\tgetAllTrackedTimes(projectIds: string[]): void {\n\t\tthis.loadChunks<TrackedTime>(projectIds, {\n\t\t\tcollectionName: 'trackedTimes',\n\t\t\tfieldPath: 'projectId',\n\t\t\tupdateAction: (trackedTimes) => fromTrackedTimes.updateTrackedTimesAction({ trackedTimes }),\n\t\t\tdeleteAction: (trackedTimes) => fromTrackedTimes.deleteTrackedTimesAction({ trackedTimes }),\n\t\t});\n\t}\n\n\tprivate loadChunks<T>(projectIds: string[], documentPath: DocumentPath): void {\n\t\tconst chunks = chunk<string>(projectIds, 10);\n\n\t\tcombineLatest(chunks.map(chunk => this.getChunkedDocuments<T>(chunk, documentPath)))\n\t\t\t.subscribe(taskChunks => this.transformTasksToActions<T>(taskChunks, documentPath));\n\t}\n\n\tprivate getChunkedDocuments<T>(projectIds: string[], documentPath: DocumentPath): Observable<DocumentActions<T>> {\n\t\treturn this.aFireStore.collection<T>(\n\t\t\tdocumentPath.collectionName,\n\t\t\tref => ref.where(documentPath.fieldPath, 'in', projectIds),\n\t\t).stateChanges()\n\t\t\t.pipe(\n\t\t\t\tcatchError(error => {\n\t\t\t\t\tconsole.log(documentPath, error); // TODO: Will remove after fixing the firebase rules\n\t\t\t\t\treturn of([]);\n\t\t\t\t}),\n\t\t\t\tmap(changes => {\n\t\t\t\t\tconst updatedDocs = changes.filter(change => ['added', 'modified'].includes(change.type)).map(change => change.payload.doc.data());\n\t\t\t\t\tconst deletedDocs = changes.filter(change => ['removed'].includes(change.type)).map(change => change.payload.doc.id);\n\t\t\t\t\treturn { updatedDocs, deletedDocs };\n\t\t\t\t}),\n\t\t\t);\n\t}\n\n\tprivate transformTasksToActions<T>(taskChunks: Array<DocumentActions<T>>, documentPath: DocumentPath): void {\n\t\tlet updatedDocs = [];\n\t\tlet deletedDocs = [];\n\n\t\ttaskChunks.forEach(chunk => {\n\t\t\tupdatedDocs = [...updatedDocs, ...chunk.updatedDocs];\n\t\t\tdeletedDocs = [...deletedDocs, ...chunk.deletedDocs];\n\t\t});\n\n\t\tthis.store.dispatch(documentPath.updateAction(updatedDocs));\n\t\tthis.store.dispatch(documentPath.deleteAction(deletedDocs));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Actions, Effect, ofType } from '@ngrx/effects';\nimport { Action, Store } from '@ngrx/store';\nimport * as fromTasks from '../actions/tasks.actions';\nimport { debounceTime, switchMap, tap } from 'rxjs/operators';\nimport { TaskService } from '../../services/task.service';\nimport { AppState } from '../../../../../store/state/app.state';\nimport { selectAllTaskIds } from '../selectors/dashboard.selectors';\n\n@Injectable()\nexport class TaskTimesEffects {\n\n\tconstructor(\n\t\tprivate readonly actions$: Actions,\n\t\tprivate readonly store: Store<AppState>,\n\t\tprivate readonly taskService: TaskService,\n\t) {\n\t}\n\n\t@Effect({ dispatch: false })\n\tloadTasksAndTimes$ = this.actions$.pipe(\n\t\tofType(fromTasks.loadTaskTimesAction),\n\t\tswitchMap(() => this.store.select(selectAllTaskIds).pipe(debounceTime(300))),\n\t\ttap(() => this.store.dispatch(fromTasks.clearTaskTimesAction())),\n\t\ttap(selectedIds => this.taskService.getAllTaskTimes(selectedIds)),\n\t);\n\n\tngrxOnInitEffects(): Action {\n\t\treturn fromTasks.loadTaskTimesAction();\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Actions, Effect, ofType } from '@ngrx/effects';\nimport { Action, Store } from '@ngrx/store';\nimport * as fromTasks from '../actions/tasks.actions';\nimport { debounceTime, switchMap, tap } from 'rxjs/operators';\nimport { TaskService } from '../../services/task.service';\nimport { AppState } from '../../../../../store/state/app.state';\nimport { selectAllCompanyProjectIds } from '../selectors/company-projects.selectors';\n\n@Injectable()\nexport class TasksEffects {\n\n\tconstructor(\n\t\tprivate readonly actions$: Actions,\n\t\tprivate readonly store: Store<AppState>,\n\t\tprivate readonly taskService: TaskService,\n\t) {\n\t}\n\n\t@Effect({ dispatch: false })\n\tloadTasksAndTimes$ = this.actions$.pipe(\n\t\tofType(fromTasks.loadTasksAction),\n\t\tswitchMap(() => this.store.select(selectAllCompanyProjectIds).pipe(debounceTime(300))),\n\t\ttap(() => this.store.dispatch(fromTasks.clearTasksAction())),\n\t\ttap(selectedIds => this.taskService.getAllTasks(selectedIds as string[])),\n\t);\n\n\tngrxOnInitEffects(): Action {\n\t\treturn fromTasks.loadTasksAction();\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Actions, Effect, ofType } from '@ngrx/effects';\nimport { Action, Store } from '@ngrx/store';\nimport * as fromTrackedTimes from '../actions/tracked-times.actions';\nimport { debounceTime, switchMap, tap } from 'rxjs/operators';\nimport { TaskService } from '../../services/task.service';\nimport { AppState } from '../../../../../store/state/app.state';\nimport { selectAllCompanyProjectIds } from '../selectors/company-projects.selectors';\n\n@Injectable()\nexport class TrackedTimesEffects {\n\n\tconstructor(\n\t\tprivate readonly actions$: Actions,\n\t\tprivate readonly store: Store<AppState>,\n\t\tprivate readonly taskService: TaskService,\n\t) {\n\t}\n\n\t@Effect({ dispatch: false })\n\tloadTasksAndTimes$ = this.actions$.pipe(\n\t\tofType(fromTrackedTimes.loadTrackedTimesAction),\n\t\tswitchMap(() => this.store.select(selectAllCompanyProjectIds).pipe(debounceTime(300))),\n\t\ttap(() => this.store.dispatch(fromTrackedTimes.clearTrackedTimesAction())),\n\t\ttap(selectedIds => this.taskService.getAllTrackedTimes(selectedIds as string[])),\n\t);\n\n\tngrxOnInitEffects(): Action {\n\t\treturn fromTrackedTimes.loadTrackedTimesAction();\n\t}\n}\n","import { InjectionToken, Injectable, Optional, Inject, NgModule } from '@angular/core';\nimport { DateAdapter, MAT_DATE_LOCALE, MAT_DATE_FORMATS } from '@angular/material/core';\nimport * as _rollupMoment from 'moment';\nimport _rollupMoment__default, {  } from 'moment';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material-moment-adapter/adapter/moment-date-adapter.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nimport * as ɵngcc0 from '@angular/core';\nconst moment = _rollupMoment__default || _rollupMoment;\n/**\n * Configurable options for {\\@see MomentDateAdapter}.\n * @record\n */\nfunction MatMomentDateAdapterOptions() { }\nif (false) {\n    /**\n     * When enabled, the dates have to match the format exactly.\n     * See https://momentjs.com/guides/#/parsing/strict-mode/.\n     * @type {?|undefined}\n     */\n    MatMomentDateAdapterOptions.prototype.strict;\n    /**\n     * Turns the use of utc dates on or off.\n     * Changing this will change how Angular Material components like DatePicker output dates.\n     * {\\@default false}\n     * @type {?|undefined}\n     */\n    MatMomentDateAdapterOptions.prototype.useUtc;\n}\n/**\n * InjectionToken for moment date adapter to configure options.\n * @type {?}\n */\nconst MAT_MOMENT_DATE_ADAPTER_OPTIONS = new InjectionToken('MAT_MOMENT_DATE_ADAPTER_OPTIONS', {\n    providedIn: 'root',\n    factory: MAT_MOMENT_DATE_ADAPTER_OPTIONS_FACTORY\n});\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction MAT_MOMENT_DATE_ADAPTER_OPTIONS_FACTORY() {\n    return {\n        useUtc: false\n    };\n}\n/**\n * Creates an array and fills it with values.\n * @template T\n * @param {?} length\n * @param {?} valueFunction\n * @return {?}\n */\nfunction range(length, valueFunction) {\n    /** @type {?} */\n    const valuesArray = Array(length);\n    for (let i = 0; i < length; i++) {\n        valuesArray[i] = valueFunction(i);\n    }\n    return valuesArray;\n}\n/**\n * Adapts Moment.js Dates for use with Angular Material.\n */\nclass MomentDateAdapter extends DateAdapter {\n    /**\n     * @param {?} dateLocale\n     * @param {?=} _options\n     */\n    constructor(dateLocale, _options) {\n        super();\n        this._options = _options;\n        this.setLocale(dateLocale || moment.locale());\n    }\n    /**\n     * @param {?} locale\n     * @return {?}\n     */\n    setLocale(locale) {\n        super.setLocale(locale);\n        /** @type {?} */\n        let momentLocaleData = moment.localeData(locale);\n        this._localeData = {\n            firstDayOfWeek: momentLocaleData.firstDayOfWeek(),\n            longMonths: momentLocaleData.months(),\n            shortMonths: momentLocaleData.monthsShort(),\n            dates: range(31, (/**\n             * @param {?} i\n             * @return {?}\n             */\n            (i) => this.createDate(2017, 0, i + 1).format('D'))),\n            longDaysOfWeek: momentLocaleData.weekdays(),\n            shortDaysOfWeek: momentLocaleData.weekdaysShort(),\n            narrowDaysOfWeek: momentLocaleData.weekdaysMin(),\n        };\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    getYear(date) {\n        return this.clone(date).year();\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    getMonth(date) {\n        return this.clone(date).month();\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    getDate(date) {\n        return this.clone(date).date();\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    getDayOfWeek(date) {\n        return this.clone(date).day();\n    }\n    /**\n     * @param {?} style\n     * @return {?}\n     */\n    getMonthNames(style) {\n        // Moment.js doesn't support narrow month names, so we just use short if narrow is requested.\n        return style == 'long' ? this._localeData.longMonths : this._localeData.shortMonths;\n    }\n    /**\n     * @return {?}\n     */\n    getDateNames() {\n        return this._localeData.dates;\n    }\n    /**\n     * @param {?} style\n     * @return {?}\n     */\n    getDayOfWeekNames(style) {\n        if (style == 'long') {\n            return this._localeData.longDaysOfWeek;\n        }\n        if (style == 'short') {\n            return this._localeData.shortDaysOfWeek;\n        }\n        return this._localeData.narrowDaysOfWeek;\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    getYearName(date) {\n        return this.clone(date).format('YYYY');\n    }\n    /**\n     * @return {?}\n     */\n    getFirstDayOfWeek() {\n        return this._localeData.firstDayOfWeek;\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    getNumDaysInMonth(date) {\n        return this.clone(date).daysInMonth();\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    clone(date) {\n        return date.clone().locale(this.locale);\n    }\n    /**\n     * @param {?} year\n     * @param {?} month\n     * @param {?} date\n     * @return {?}\n     */\n    createDate(year, month, date) {\n        // Moment.js will create an invalid date if any of the components are out of bounds, but we\n        // explicitly check each case so we can throw more descriptive errors.\n        if (month < 0 || month > 11) {\n            throw Error(`Invalid month index \"${month}\". Month index has to be between 0 and 11.`);\n        }\n        if (date < 1) {\n            throw Error(`Invalid date \"${date}\". Date has to be greater than 0.`);\n        }\n        /** @type {?} */\n        const result = this._createMoment({ year, month, date }).locale(this.locale);\n        // If the result isn't valid, the date must have been out of bounds for this month.\n        if (!result.isValid()) {\n            throw Error(`Invalid date \"${date}\" for month with index \"${month}\".`);\n        }\n        return result;\n    }\n    /**\n     * @return {?}\n     */\n    today() {\n        return this._createMoment().locale(this.locale);\n    }\n    /**\n     * @param {?} value\n     * @param {?} parseFormat\n     * @return {?}\n     */\n    parse(value, parseFormat) {\n        if (value && typeof value == 'string') {\n            return this._createMoment(value, parseFormat, this.locale);\n        }\n        return value ? this._createMoment(value).locale(this.locale) : null;\n    }\n    /**\n     * @param {?} date\n     * @param {?} displayFormat\n     * @return {?}\n     */\n    format(date, displayFormat) {\n        date = this.clone(date);\n        if (!this.isValid(date)) {\n            throw Error('MomentDateAdapter: Cannot format invalid date.');\n        }\n        return date.format(displayFormat);\n    }\n    /**\n     * @param {?} date\n     * @param {?} years\n     * @return {?}\n     */\n    addCalendarYears(date, years) {\n        return this.clone(date).add({ years });\n    }\n    /**\n     * @param {?} date\n     * @param {?} months\n     * @return {?}\n     */\n    addCalendarMonths(date, months) {\n        return this.clone(date).add({ months });\n    }\n    /**\n     * @param {?} date\n     * @param {?} days\n     * @return {?}\n     */\n    addCalendarDays(date, days) {\n        return this.clone(date).add({ days });\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    toIso8601(date) {\n        return this.clone(date).format();\n    }\n    /**\n     * Returns the given value if given a valid Moment or null. Deserializes valid ISO 8601 strings\n     * (https://www.ietf.org/rfc/rfc3339.txt) and valid Date objects into valid Moments and empty\n     * string into null. Returns an invalid date for all other values.\n     * @param {?} value\n     * @return {?}\n     */\n    deserialize(value) {\n        /** @type {?} */\n        let date;\n        if (value instanceof Date) {\n            date = this._createMoment(value).locale(this.locale);\n        }\n        else if (this.isDateInstance(value)) {\n            // Note: assumes that cloning also sets the correct locale.\n            return this.clone(value);\n        }\n        if (typeof value === 'string') {\n            if (!value) {\n                return null;\n            }\n            date = this._createMoment(value, moment.ISO_8601).locale(this.locale);\n        }\n        if (date && this.isValid(date)) {\n            return this._createMoment(date).locale(this.locale);\n        }\n        return super.deserialize(value);\n    }\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    isDateInstance(obj) {\n        return moment.isMoment(obj);\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    isValid(date) {\n        return this.clone(date).isValid();\n    }\n    /**\n     * @return {?}\n     */\n    invalid() {\n        return moment.invalid();\n    }\n    /**\n     * Creates a Moment instance while respecting the current UTC settings.\n     * @private\n     * @param {?} date\n     * @param {?=} format\n     * @param {?=} locale\n     * @return {?}\n     */\n    _createMoment(date, format, locale) {\n        const { strict, useUtc } = this._options || {};\n        return useUtc\n            ? moment.utc(date, format, locale, strict)\n            : moment(date, format, locale, strict);\n    }\n}\nMomentDateAdapter.ɵfac = function MomentDateAdapter_Factory(t) { return new (t || MomentDateAdapter)(ɵngcc0.ɵɵinject(MAT_DATE_LOCALE, 8), ɵngcc0.ɵɵinject(MAT_MOMENT_DATE_ADAPTER_OPTIONS, 8)); };\nMomentDateAdapter.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: MomentDateAdapter, factory: MomentDateAdapter.ɵfac });\n/** @nocollapse */\nMomentDateAdapter.ctorParameters = () => [\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DATE_LOCALE,] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_MOMENT_DATE_ADAPTER_OPTIONS,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MomentDateAdapter, [{\n        type: Injectable\n    }], function () { return [{ type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_DATE_LOCALE]\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_MOMENT_DATE_ADAPTER_OPTIONS]\n            }] }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    MomentDateAdapter.prototype._localeData;\n    /**\n     * @type {?}\n     * @private\n     */\n    MomentDateAdapter.prototype._options;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material-moment-adapter/adapter/moment-date-formats.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @type {?} */\nconst MAT_MOMENT_DATE_FORMATS = {\n    parse: {\n        dateInput: 'l',\n    },\n    display: {\n        dateInput: 'l',\n        monthYearLabel: 'MMM YYYY',\n        dateA11yLabel: 'LL',\n        monthYearA11yLabel: 'MMMM YYYY',\n    },\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material-moment-adapter/adapter/index.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MomentDateModule {\n}\nMomentDateModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MomentDateModule });\nMomentDateModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MomentDateModule_Factory(t) { return new (t || MomentDateModule)(); }, providers: [\n        {\n            provide: DateAdapter,\n            useClass: MomentDateAdapter,\n            deps: [MAT_DATE_LOCALE, MAT_MOMENT_DATE_ADAPTER_OPTIONS]\n        }\n    ] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MomentDateModule, [{\n        type: NgModule,\n        args: [{\n                providers: [\n                    {\n                        provide: DateAdapter,\n                        useClass: MomentDateAdapter,\n                        deps: [MAT_DATE_LOCALE, MAT_MOMENT_DATE_ADAPTER_OPTIONS]\n                    }\n                ]\n            }]\n    }], null, null); })();\nconst ɵ0 = MAT_MOMENT_DATE_FORMATS;\nclass MatMomentDateModule {\n}\nMatMomentDateModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatMomentDateModule });\nMatMomentDateModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatMomentDateModule_Factory(t) { return new (t || MatMomentDateModule)(); }, providers: [{ provide: MAT_DATE_FORMATS, useValue: ɵ0 }], imports: [[MomentDateModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatMomentDateModule, { imports: [MomentDateModule] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatMomentDateModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MomentDateModule],\n                providers: [{ provide: MAT_DATE_FORMATS, useValue: ɵ0 }]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material-moment-adapter/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_MOMENT_DATE_ADAPTER_OPTIONS, MAT_MOMENT_DATE_ADAPTER_OPTIONS_FACTORY, MAT_MOMENT_DATE_FORMATS, MatMomentDateModule, MomentDateAdapter, MomentDateModule };\n\n//# sourceMappingURL=material-moment-adapter.js.map","import { NgModule } from '@angular/core';\nimport { PrimaryButtonComponent } from './components/primary-button/primary-button.component';\nimport { CommonModule } from '@angular/common';\nimport { MatButtonModule, MatIconModule } from '@angular/material';\nimport { PrimaryButtonTextDirective } from './directives/primary-button-text.directive';\n\n/**\n * This button serves as a template for the Crafthaus primary button which is why it's\n * more generic then it would have to be for its current use in the dashboard.\n *\n * Once a primary button is available from the Crafthaus repo this button will be deleted\n * and replaced.\n */\n\n@NgModule({\n\tdeclarations: [PrimaryButtonComponent, PrimaryButtonTextDirective],\n\texports: [\n\t\tPrimaryButtonComponent,\n\t\tPrimaryButtonTextDirective,\n\t],\n\timports: [\n\t\tCommonModule,\n\t\tMatButtonModule,\n\t\tMatIconModule,\n\t],\n})\nexport class PrimaryButtonModule {\n}\n","import { Injectable } from '@angular/core';\nimport { Actions, Effect, ofType } from '@ngrx/effects';\nimport { Action, Store } from '@ngrx/store';\nimport * as fromCompanyProjects from '../actions/company-projects.actions';\nimport { filter, mergeMap, switchMap, tap } from 'rxjs/operators';\nimport { AppState } from '../../../../../store/state/app.state';\nimport { selectCompanyId, selectUserRole } from '../../../../../store/selectors/app.selectors';\nimport { ProjectService } from '../../../../../shared/firebase/project.service';\nimport { DocumentChangeAction } from '@angular/fire/firestore';\nimport { MemberRole, Project } from 'domain-entities';\nimport { combineLatest, from, Observable } from 'rxjs';\n\n@Injectable()\nexport class CompanyProjectsEffects {\n\n\tconstructor(\n\t\tprivate readonly actions$: Actions,\n\t\tprivate readonly store: Store<AppState>,\n\t\tprivate readonly projectService: ProjectService,\n\t) {\n\t}\n\n\t@Effect()\n\tloadCompanyProjects = this.actions$.pipe(\n\t\tofType(fromCompanyProjects.loadCompanyProjectsAction),\n\t\tmergeMap(() => combineLatest([\n\t\t\tthis.store.select(selectCompanyId).pipe(filter(companyId => !!companyId)),\n\t\t\tthis.store.select(selectUserRole).pipe(filter(memberRole => !!memberRole)),\n\t\t])),\n\t\ttap(() => this.store.dispatch(fromCompanyProjects.clearCompanyProjectsAction())),\n\t\tswitchMap(([companyId, memberRole]) => {\n\t\t\tif (memberRole === MemberRole.OWNER) {\n\t\t\t\treturn this.projectService.getProjectStatusChangesByCompanyId(companyId);\n\t\t\t}\n\n\t\t\treturn this.projectService.getProjectsListeners('active', 'project');\n\t\t}),\n\t\tswitchMap(documents => this.getDispatchEventsOfProjectsByCompanyId(documents)),\n\t);\n\n\tngrxOnInitEffects(): Action {\n\t\treturn fromCompanyProjects.loadCompanyProjectsAction();\n\t}\n\n\tprivate getDispatchEventsOfProjectsByCompanyId(documentChanges: DocumentChangeAction<Project>[]): Observable<Action> {\n\t\tconst addedOrChangedDocs = documentChanges\n\t\t\t.filter(document => ['added', 'changed'].includes(document.type))\n\t\t\t.map(projectDoc => projectDoc.payload.doc.data());\n\t\tconst deletedDocs = documentChanges\n\t\t\t.filter(document => ['removed'].includes(document.type))\n\t\t\t.map(document => document.payload.doc.id);\n\n\t\treturn from([\n\t\t\tfromCompanyProjects.updateCompanyProjectsAction({ projects: addedOrChangedDocs }),\n\t\t\tfromCompanyProjects.deleteCompanyProjectsAction({ projects: deletedDocs }),\n\t\t]);\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TimeTrackingComponent } from './components/time-tracking/time-tracking.component';\nimport { DashboardRoutingModule } from './dashboard.routing.module';\nimport { SharedModule } from '../../../shared/shared.module';\nimport { TaskService } from './services/task.service';\nimport { StoreModule } from '@ngrx/store';\nimport { reducerTasks, reducerTaskTimes } from './store/reducers/tasks.reducer';\nimport { EffectsModule } from '@ngrx/effects';\nimport { TasksEffects } from './store/effects/tasks.effects';\nimport { TaskTimesEffects } from './store/effects/task-times.effects';\nimport { DateAdapter, MAT_DATE_FORMATS, MAT_DATE_LOCALE, MatDatepickerModule, MatTableModule } from '@angular/material';\nimport { TaskTimePipe } from './pipes/task-time.pipe';\nimport { ProjectNamePipe } from './pipes/project-name.pipe';\nimport { AssigneeNamePipe } from './pipes/assignee-name.pipe';\nimport { reducerTrackedTimes } from './store/reducers/tracked-times.reducer';\nimport { TrackedTimesEffects } from './store/effects/tracked-times.effects';\nimport { FilterComponent } from './components/filter/filter.component';\nimport { MAT_MOMENT_DATE_ADAPTER_OPTIONS, MomentDateAdapter } from '@angular/material-moment-adapter';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { reducerCompanyProjects } from './store/reducers/company-projects.reducer';\nimport { CompanyProjectsEffects } from './store/effects/company-projects.effects';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport * as moment from 'moment';\nimport { TranslateService } from '@ngx-translate/core';\nimport { ProjectItemComponent } from './components/project-item/project-item.component';\nimport { ProjectFilterDialogComponent } from './components/project-filter-dialog/project-filter-dialog.component';\nimport { PrimaryButtonModule } from './components/primary-button/primary-button.module';\n\nexport const DASHBOARD_FORMATS = {\n\tparse: {\n\t\tdateInput: 'LL',\n\t},\n\tdisplay: {\n\t\tdateInput: 'dddd L',\n\t\tmonthYearLabel: 'MMM YYYY',\n\t\tdateA11yLabel: 'LL',\n\t\tmonthYearA11yLabel: 'MMMM YYYY',\n\t},\n};\n\n@NgModule({\n\tdeclarations: [\n\t\tTimeTrackingComponent,\n\t\tTaskTimePipe,\n\t\tProjectNamePipe,\n\t\tAssigneeNamePipe,\n\t\tFilterComponent,\n\t\tProjectItemComponent,\n\t\tProjectFilterDialogComponent,\n\t],\n\timports: [\n\t\tCommonModule,\n\t\tDashboardRoutingModule,\n\t\tSharedModule,\n\t\tMatTableModule,\n\t\tMatDatepickerModule,\n\t\tReactiveFormsModule,\n\t\tStoreModule.forFeature('dashboard', {\n\t\t\t'tasks': reducerTasks,\n\t\t\t'taskTimes': reducerTaskTimes,\n\t\t\t'trackedTimes': reducerTrackedTimes,\n\t\t\t'companyProjects': reducerCompanyProjects,\n\t\t}),\n\t\tEffectsModule.forFeature([\n\t\t\tTasksEffects,\n\t\t\tTaskTimesEffects,\n\t\t\tTrackedTimesEffects,\n\t\t\tCompanyProjectsEffects,\n\t\t]),\n\t\tScrollingModule,\n\t\tPrimaryButtonModule,\n\t],\n\texports: [\n\t\tDashboardRoutingModule,\n\t],\n\tproviders: [\n\t\tTaskService,\n\t\t{\n\t\t\tprovide: DateAdapter,\n\t\t\tuseClass: MomentDateAdapter,\n\t\t\tdeps: [MAT_DATE_LOCALE, MAT_MOMENT_DATE_ADAPTER_OPTIONS],\n\t\t},\n\t\t{ provide: MAT_DATE_FORMATS, useValue: DASHBOARD_FORMATS },\n\t],\n\tentryComponents: [ProjectFilterDialogComponent],\n})\n\n\nexport class DashboardModule {\n\tconstructor(\n\t\tprivate translate: TranslateService,\n\t) {\n\t\tconst browserLang = translate.getBrowserLang().includes('de') ? 'de' : 'en';\n\t\tmoment.locale(browserLang);\n\t}\n}\n"]}